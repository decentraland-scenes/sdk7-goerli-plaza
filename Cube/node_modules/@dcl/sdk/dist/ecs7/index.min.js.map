{"version":3,"file":"index.min.js","sources":["../node_modules/@dcl/ecs-math/dist/types.js","../node_modules/@dcl/ecs-math/dist/Scalar.js","../node_modules/@dcl/ecs-math/dist/Vector3.js","../node_modules/@dcl/ecs-math/dist/Plane.js","../node_modules/@dcl/ecs-math/dist/Matrix.js","../node_modules/@dcl/ecs-math/dist/Quaternion.js","../node_modules/@dcl/ecs-math/dist/index.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../src/components/generated/pb/Animator.gen.ts","../src/components/generated/Animator.gen.ts","../src/components/generated/pb/AudioSource.gen.ts","../src/components/generated/AudioSource.gen.ts","../src/components/generated/pb/AvatarAttach.gen.ts","../src/components/generated/AvatarAttach.gen.ts","../src/components/generated/pb/common/Vector3.gen.ts","../src/components/generated/pb/AvatarModifierArea.gen.ts","../src/components/generated/AvatarModifierArea.gen.ts","../node_modules/long/src/long.js","../src/components/generated/pb/common/Color3.gen.ts","../src/components/generated/pb/AvatarShape.gen.ts","../src/components/generated/AvatarShape.gen.ts","../src/components/generated/pb/Billboard.gen.ts","../src/components/generated/Billboard.gen.ts","../src/components/generated/pb/BoxShape.gen.ts","../src/components/generated/BoxShape.gen.ts","../src/components/generated/pb/CameraMode.gen.ts","../src/components/generated/CameraMode.gen.ts","../src/components/generated/pb/CameraModeArea.gen.ts","../src/components/generated/CameraModeArea.gen.ts","../src/components/generated/pb/CylinderShape.gen.ts","../src/components/generated/CylinderShape.gen.ts","../src/components/generated/pb/GLTFShape.gen.ts","../src/components/generated/GLTFShape.gen.ts","../src/components/generated/pb/Material.gen.ts","../src/components/generated/Material.gen.ts","../src/components/generated/pb/MeshCollider.gen.ts","../src/components/generated/MeshCollider.gen.ts","../src/components/generated/pb/MeshRenderer.gen.ts","../src/components/generated/MeshRenderer.gen.ts","../src/components/generated/pb/NFTShape.gen.ts","../src/components/generated/NFTShape.gen.ts","../src/components/generated/pb/OnPointerDown.gen.ts","../src/components/generated/OnPointerDown.gen.ts","../src/components/generated/pb/OnPointerDownResult.gen.ts","../src/components/generated/OnPointerDownResult.gen.ts","../src/components/generated/pb/OnPointerUp.gen.ts","../src/components/generated/OnPointerUp.gen.ts","../src/components/generated/pb/OnPointerUpResult.gen.ts","../src/components/generated/OnPointerUpResult.gen.ts","../src/components/generated/pb/PlaneShape.gen.ts","../src/components/generated/PlaneShape.gen.ts","../src/components/generated/pb/PointerEvents.gen.ts","../src/components/generated/PointerEvents.gen.ts","../src/components/generated/pb/RaycastResult.gen.ts","../src/components/generated/pb/PointerEventsResult.gen.ts","../src/components/generated/PointerEventsResult.gen.ts","../src/components/generated/pb/PointerLock.gen.ts","../src/components/generated/PointerLock.gen.ts","../src/components/generated/pb/Raycast.gen.ts","../src/components/generated/Raycast.gen.ts","../src/components/generated/RaycastResult.gen.ts","../src/components/generated/pb/SphereShape.gen.ts","../src/components/generated/SphereShape.gen.ts","../src/components/generated/pb/TextShape.gen.ts","../src/components/generated/TextShape.gen.ts","../src/components/generated/pb/UiText.gen.ts","../src/components/generated/UiText.gen.ts","../src/components/generated/pb/UiTransform.gen.ts","../src/components/generated/UiTransform.gen.ts","../src/components/generated/pb/VisibilityComponent.gen.ts","../src/components/generated/VisibilityComponent.gen.ts","../src/components/generated/index.gen.ts","../src/components/legacy/Transform.ts","../src/components/index.ts","../src/schemas/Array.ts","../src/schemas/basic/Boolean.ts","../src/schemas/basic/Enum.ts","../src/schemas/basic/Float.ts","../src/schemas/basic/Integer.ts","../src/schemas/basic/String.ts","../src/schemas/Map.ts","../src/schemas/Optional.ts","../src/schemas/index.ts","../node_modules/@dcl/crdt/dist/types.js","../node_modules/@dcl/crdt/dist/index.js","../src/serialization/ByteBuffer/index.ts","../src/serialization/wireMessage.ts","../src/serialization/crdt/componentOperation.ts","../src/engine/entity-utils.ts","../src/systems/crdt/index.ts","../src/engine/readonly.ts","../src/engine/component.ts","../src/engine/entity.ts","../src/engine/systems.ts","../src/engine/index.ts","../src/engine/events.ts","../src/systems/crdt/transports/networkTransport.ts","../src/components/generated/ids.gen.ts","../src/systems/crdt/transports/rendererTransport.ts","../src/runtime/temp-fp/Observable.ts","../src/runtime/observables.ts","../src/runtime/initialization.ts","../src/systems/cyclicParentingChecker.ts","../src/components/generated/global.gen.ts","../src/components/generated/global.namespace.gen.ts","../src/runtime/MessageBus.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RAD2DEG = exports.DEG2RAD = exports.Epsilon = exports.ToLinearSpace = exports.ToGammaSpace = exports.Space = exports.Orientation = void 0;\n/**\n * Defines potential orientation for back face culling\n * @public\n */\nvar Orientation;\n(function (Orientation) {\n    /**\n     * Clockwise\n     */\n    Orientation[Orientation[\"CW\"] = 0] = \"CW\";\n    /** Counter clockwise */\n    Orientation[Orientation[\"CCW\"] = 1] = \"CCW\";\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\n/**\n * Defines supported spaces\n * @public\n */\nvar Space;\n(function (Space) {\n    /** Local (object) space */\n    Space[Space[\"LOCAL\"] = 0] = \"LOCAL\";\n    /** World space */\n    Space[Space[\"WORLD\"] = 1] = \"WORLD\";\n    /** Bone space */\n    Space[Space[\"BONE\"] = 2] = \"BONE\";\n})(Space = exports.Space || (exports.Space = {}));\n/**\n * Constant used to convert a value to gamma space\n * @public\n */\nexports.ToGammaSpace = 1 / 2.2;\n/**\n * Constant used to convert a value to linear space\n * @public\n */\nexports.ToLinearSpace = 2.2;\n/**\n * Constant used to define the minimal number value in Babylon.js\n * @public\n */\nexports.Epsilon = 0.000001;\n/**\n * Constant used to convert from Euler degrees to radians\n * @public\n */\nexports.DEG2RAD = Math.PI / 180;\n/**\n * Constant used to convert from radians to Euler degrees\n * @public\n */\nexports.RAD2DEG = 360 / (Math.PI * 2);\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Scalar = void 0;\n/**\n * Two pi constants convenient for computation.\n */\nconst TwoPi = Math.PI * 2;\n/**\n * Boolean : true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\n * @param a - number\n * @param b - number\n * @param epsilon - (default = 1.401298E-45)\n * @returns true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\n */\nfunction withinEpsilon(a, b, epsilon = 1.401298e-45) {\n    const num = a - b;\n    return -epsilon <= num && num <= epsilon;\n}\n/**\n * Returns a string : the upper case translation of the number i to hexadecimal.\n * @param i - number\n * @returns the upper case translation of the number i to hexadecimal.\n */\nfunction toHex(i) {\n    const str = i.toString(16);\n    if (i <= 15) {\n        return ('0' + str).toUpperCase();\n    }\n    return str.toUpperCase();\n}\n/**\n * Returns -1 if value is negative and +1 is value is positive.\n * @param _value - the value\n * @returns the value itself if it's equal to zero.\n */\nfunction sign(value) {\n    const _value = +value; // convert to a number\n    if (_value === 0 || isNaN(_value)) {\n        return _value;\n    }\n    return _value > 0 ? 1 : -1;\n}\n/**\n * Returns the value itself if it's between min and max.\n * Returns min if the value is lower than min.\n * Returns max if the value is greater than max.\n * @param value - the value to clmap\n * @param min - the min value to clamp to (default: 0)\n * @param max - the max value to clamp to (default: 1)\n * @returns the clamped value\n */\nfunction clamp(value, min = 0, max = 1) {\n    return Math.min(max, Math.max(min, value));\n}\n/**\n * the log2 of value.\n * @param value - the value to compute log2 of\n * @returns the log2 of value.\n */\nfunction log2(value) {\n    return Math.log(value) * Math.LOG2E;\n}\n/**\n * Loops the value, so that it is never larger than length and never smaller than 0.\n *\n * This is similar to the modulo operator but it works with floating point numbers.\n * For example, using 3.0 for t and 2.5 for length, the result would be 0.5.\n * With t = 5 and length = 2.5, the result would be 0.0.\n * Note, however, that the behaviour is not defined for negative numbers as it is for the modulo operator\n * @param value - the value\n * @param length - the length\n * @returns the looped value\n */\nfunction repeat(value, length) {\n    return value - Math.floor(value / length) * length;\n}\n/**\n * Normalize the value between 0.0 and 1.0 using min and max values\n * @param value - value to normalize\n * @param min - max to normalize between\n * @param max - min to normalize between\n * @returns the normalized value\n */\nfunction normalize(value, min, max) {\n    return (value - min) / (max - min);\n}\n/**\n * Denormalize the value from 0.0 and 1.0 using min and max values\n * @param normalized - value to denormalize\n * @param min - max to denormalize between\n * @param max - min to denormalize between\n * @returns the denormalized value\n */\nfunction denormalize(normalized, min, max) {\n    return normalized * (max - min) + min;\n}\n/**\n * Calculates the shortest difference between two given angles given in degrees.\n * @param current - current angle in degrees\n * @param target - target angle in degrees\n * @returns the delta\n */\nfunction deltaAngle(current, target) {\n    let num = repeat(target - current, 360.0);\n    if (num > 180.0) {\n        num -= 360.0;\n    }\n    return num;\n}\n/**\n * PingPongs the value t, so that it is never larger than length and never smaller than 0.\n * @param tx - value\n * @param length - length\n * @returns The returned value will move back and forth between 0 and length\n */\nfunction pingPong(tx, length) {\n    const t = repeat(tx, length * 2.0);\n    return length - Math.abs(t - length);\n}\n/**\n * Interpolates between min and max with smoothing at the limits.\n *\n * This function interpolates between min and max in a similar way to Lerp. However, the interpolation will gradually speed up\n * from the start and slow down toward the end. This is useful for creating natural-looking animation, fading and other transitions.\n * @param from - from\n * @param to - to\n * @param tx - value\n * @returns the smooth stepped value\n */\nfunction smoothStep(from, to, tx) {\n    let t = clamp(tx);\n    t = -2.0 * t * t * t + 3.0 * t * t;\n    return to * t + from * (1.0 - t);\n}\n/**\n * Moves a value current towards target.\n *\n * This is essentially the same as Mathf.Lerp but instead the function will ensure that the speed never exceeds maxDelta.\n * Negative values of maxDelta pushes the value away from target.\n * @param current - current value\n * @param target - target value\n * @param maxDelta - max distance to move\n * @returns resulting value\n */\nfunction moveTowards(current, target, maxDelta) {\n    let result = 0;\n    if (Math.abs(target - current) <= maxDelta) {\n        result = target;\n    }\n    else {\n        result = current + sign(target - current) * maxDelta;\n    }\n    return result;\n}\n/**\n * Same as MoveTowards but makes sure the values interpolate correctly when they wrap around 360 degrees.\n *\n * Variables current and target are assumed to be in degrees. For optimization reasons, negative values of maxDelta\n *  are not supported and may cause oscillation. To push current away from a target angle, add 180 to that angle instead.\n * @param current - current value\n * @param target - target value\n * @param maxDelta - max distance to move\n * @returns resulting angle\n */\nfunction moveTowardsAngle(current, target, maxDelta) {\n    const num = deltaAngle(current, target);\n    let result = 0;\n    if (-maxDelta < num && num < maxDelta) {\n        result = target;\n    }\n    else {\n        result = moveTowards(current, current + num, maxDelta);\n    }\n    return result;\n}\n/**\n * Creates a new scalar with values linearly interpolated of \"amount\" between the start scalar and the end scalar\n * @param start - start value\n * @param end - target value\n * @param amount - amount to lerp between\n * @returns the lerped value\n */\nfunction lerp(start, end, amount) {\n    return start + (end - start) * amount;\n}\n/**\n * Same as Lerp but makes sure the values interpolate correctly when they wrap around 360 degrees.\n * The parameter t is clamped to the range [0, 1]. Variables a and b are assumed to be in degrees.\n * @param start - start value\n * @param end - target value\n * @param amount - amount to lerp between\n * @returns the lerped value\n */\nfunction lerpAngle(start, end, amount) {\n    let num = repeat(end - start, 360.0);\n    if (num > 180.0) {\n        num -= 360.0;\n    }\n    return start + num * clamp(amount);\n}\n/**\n * Calculates the linear parameter t that produces the interpolant value within the range [a, b].\n * @param a - start value\n * @param b - target value\n * @param value - value between a and b\n * @returns the inverseLerp value\n */\nfunction inverseLerp(a, b, value) {\n    let result = 0;\n    if (a !== b) {\n        result = clamp((value - a) / (b - a));\n    }\n    else {\n        result = 0.0;\n    }\n    return result;\n}\n/**\n * Returns a new scalar located for \"amount\" (float) on the Hermite spline defined by the scalars \"value1\", \"value3\", \"tangent1\", \"tangent2\".\n * {@link http://mathworld.wolfram.com/HermitePolynomial.html}\n * @param value1 - spline value\n * @param tangent1 - spline value\n * @param value2 - spline value\n * @param tangent2 - spline value\n * @param amount - input value\n * @returns hermite result\n */\nfunction hermite(value1, tangent1, value2, tangent2, amount) {\n    const squared = amount * amount;\n    const cubed = amount * squared;\n    const part1 = 2.0 * cubed - 3.0 * squared + 1.0;\n    const part2 = -2.0 * cubed + 3.0 * squared;\n    const part3 = cubed - 2.0 * squared + amount;\n    const part4 = cubed - squared;\n    return value1 * part1 + value2 * part2 + tangent1 * part3 + tangent2 * part4;\n}\n/**\n * Returns a random float number between and min and max values\n * @param min - min value of random\n * @param max - max value of random\n * @returns random value\n */\nfunction randomRange(min, max) {\n    if (min === max) {\n        return min;\n    }\n    return Math.random() * (max - min) + min;\n}\n/**\n * This function returns percentage of a number in a given range.\n *\n * RangeToPercent(40,20,60) will return 0.5 (50%)\n * RangeToPercent(34,0,100) will return 0.34 (34%)\n * @param num - to convert to percentage\n * @param min - min range\n * @param max - max range\n * @returns the percentage\n */\nfunction rangeToPercent(num, min, max) {\n    return (num - min) / (max - min);\n}\n/**\n * This function returns number that corresponds to the percentage in a given range.\n *\n * PercentToRange(0.34,0,100) will return 34.\n * @param percent - to convert to number\n * @param min - min range\n * @param max - max range\n * @returns the number\n */\nfunction percentToRange(percent, min, max) {\n    return (max - min) * percent + min;\n}\n/**\n * Returns the angle converted to equivalent value between -Math.PI and Math.PI radians.\n * @param angle - The angle to normalize in radian.\n * @returns The converted angle.\n */\nfunction normalizeRadians(angle) {\n    // More precise but slower version kept for reference.\n    // tslint:disable:no-commented-out-code\n    /*\n      // angle = angle % Tools.TwoPi;\n      // angle = (angle + Tools.TwoPi) % Tools.TwoPi;\n  \n      //if (angle > Math.PI) {\n      //\tangle -= Tools.TwoPi;\n      //}\n        */\n    return angle - TwoPi * Math.floor((angle + Math.PI) / TwoPi);\n}\n/**\n * Scalar computation library\n * @public\n */\nexports.Scalar = {\n    withinEpsilon,\n    toHex,\n    sign,\n    clamp,\n    log2,\n    repeat,\n    normalize,\n    denormalize,\n    deltaAngle,\n    pingPong,\n    smoothStep,\n    moveTowards,\n    moveTowardsAngle,\n    lerp,\n    lerpAngle,\n    inverseLerp,\n    hermite,\n    randomRange,\n    rangeToPercent,\n    percentToRange,\n    normalizeRadians,\n    TwoPi\n};\n//# sourceMappingURL=Scalar.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector3 = void 0;\nconst types_1 = require(\"./types\");\nconst Quaternion_1 = require(\"./Quaternion\");\nconst Scalar_1 = require(\"./Scalar\");\n/**\n * @public\n */\nvar Vector3;\n(function (Vector3) {\n    /**\n     * Gets a boolean indicating that the vector is non uniform meaning x, y or z are not all the same\n     * @param vector - vector to check\n     */\n    function isNonUniform(vector) {\n        const absX = Math.abs(vector.x);\n        const absY = Math.abs(vector.y);\n        if (absX !== absY) {\n            return true;\n        }\n        const absZ = Math.abs(vector.z);\n        if (absX !== absZ) {\n            return true;\n        }\n        // // These lines will never run\n        // if (absY !== absZ) {\n        //   return true\n        // }\n        return false;\n    }\n    Vector3.isNonUniform = isNonUniform;\n    /**\n     * Creates a new Vector3 object from the given x, y, z (floats) coordinates.\n     * @param x - defines the first coordinates (on X axis)\n     * @param y - defines the second coordinates (on Y axis)\n     * @param z - defines the third coordinates (on Z axis)\n     */\n    function create(\n    /**\n     * Defines the first coordinates (on X axis)\n     */\n    x = 0, \n    /**\n     * Defines the second coordinates (on Y axis)\n     */\n    y = 0, \n    /**\n     * Defines the third coordinates (on Z axis)\n     */\n    z = 0) {\n        return { x, y, z };\n    }\n    Vector3.create = create;\n    /**\n     * Returns a new Vector3 as the result of the addition of the two given vectors.\n     * @param vector1 - the first vector\n     * @param vector2 - the second vector\n     * @returns the resulting vector\n     */\n    function add(vector1, vector2) {\n        return {\n            x: vector1.x + vector2.x,\n            y: vector1.y + vector2.y,\n            z: vector1.z + vector2.z\n        };\n    }\n    Vector3.add = add;\n    /**\n     * Add component by component the vector2 into dest\n     * @param dest - the first vector and destination of addition\n     * @param vector2 - the second vector\n     */\n    function addToRef(vector1, vector2, result) {\n        result.x = vector1.x + vector2.x;\n        result.y = vector1.y + vector2.y;\n        result.z = vector1.z + vector2.z;\n    }\n    Vector3.addToRef = addToRef;\n    /**\n     * Returns a new Vector3 as the result of the substraction of the two given vectors.\n     * @returns the resulting vector\n     */\n    function subtract(vector1, vector2) {\n        return {\n            x: vector1.x - vector2.x,\n            y: vector1.y - vector2.y,\n            z: vector1.z - vector2.z\n        };\n    }\n    Vector3.subtract = subtract;\n    /**\n     * Returns a new Vector3 as the result of the substraction of the two given vectors.\n     * @returns the resulting vector\n     */\n    function subtractToRef(vector1, vector2, result) {\n        result.x = vector1.x - vector2.x;\n        result.y = vector1.y - vector2.y;\n        result.z = vector1.z - vector2.z;\n    }\n    Vector3.subtractToRef = subtractToRef;\n    /**\n     * Subtracts the given floats from the current Vector3 coordinates and set the given vector \"result\" with this result\n     * @param x - defines the x coordinate of the operand\n     * @param y - defines the y coordinate of the operand\n     * @param z - defines the z coordinate of the operand\n     * @param result - defines the Vector3 object where to store the result\n     */\n    function subtractFromFloatsToRef(vector1, x, y, z, result) {\n        result.x = vector1.x - x;\n        result.y = vector1.y - y;\n        result.z = vector1.z - z;\n    }\n    Vector3.subtractFromFloatsToRef = subtractFromFloatsToRef;\n    /**\n     * Returns a new Vector3 with the other sign\n     * @returns the resulting vector\n     */\n    function negate(value) {\n        return { x: -value.x, y: -value.y, z: -value.z };\n    }\n    Vector3.negate = negate;\n    /**\n     * Copy source into dest\n     *\n     */\n    function copy(source, dest) {\n        dest.x = source.x;\n        dest.y = source.y;\n        dest.z = source.z;\n    }\n    Vector3.copy = copy;\n    /**\n     * Sets the given vector \"dest\" with the given floats.\n     * @param x - defines the x coordinate of the source\n     * @param y - defines the y coordinate of the source\n     * @param z - defines the z coordinate of the source\n     * @param dest - defines the Vector3 where to store the result\n     */\n    function copyFromFloats(x, y, z, dest) {\n        dest.x = x;\n        dest.y = y;\n        dest.z = z;\n    }\n    Vector3.copyFromFloats = copyFromFloats;\n    /**\n     * Returns a new Vector3 with the same value\n     * @returns the resulting vector\n     */\n    function clone(source) {\n        return Object.assign({}, source);\n    }\n    Vector3.clone = clone;\n    /**\n     * Get the clip factor between two vectors\n     * @param vector0 - defines the first operand\n     * @param vector1 - defines the second operand\n     * @param axis - defines the axis to use\n     * @param size - defines the size along the axis\n     * @returns the clip factor\n     */\n    function getClipFactor(vector0, vector1, axis, size) {\n        const d0 = dot(vector0, axis) - size;\n        const d1 = dot(vector1, axis) - size;\n        const s = d0 / (d0 - d1);\n        return s;\n    }\n    Vector3.getClipFactor = getClipFactor;\n    /**\n     * Get angle between two vectors\n     * @param vector0 - angle between vector0 and vector1\n     * @param vector1 - angle between vector0 and vector1\n     * @param normal - direction of the normal\n     * @returns the angle between vector0 and vector1\n     */\n    function getAngleBetweenVectors(vector0, vector1, normal) {\n        const v0 = normalize(vector0);\n        const v1 = normalize(vector1);\n        const v0v1dot = dot(v0, v1);\n        const n = create();\n        crossToRef(v0, v1, n);\n        if (dot(n, normal) > 0) {\n            return Math.acos(v0v1dot);\n        }\n        return -Math.acos(v0v1dot);\n    }\n    Vector3.getAngleBetweenVectors = getAngleBetweenVectors;\n    /**\n     * Returns a new Vector3 set from the index \"offset\" of the given array\n     * @param array - defines the source array\n     * @param offset - defines the offset in the source array\n     * @returns the new Vector3\n     */\n    function fromArray(array, offset = 0) {\n        return create(array[offset], array[offset + 1], array[offset + 2]);\n    }\n    Vector3.fromArray = fromArray;\n    /**\n     * Returns a new Vector3 set from the index \"offset\" of the given FloatArray\n     * This function is deprecated.  Use FromArray instead\n     * @param array - defines the source array\n     * @param offset - defines the offset in the source array\n     * @returns the new Vector3\n     */\n    function fromFloatArray(array, offset) {\n        return fromArray(array, offset);\n    }\n    Vector3.fromFloatArray = fromFloatArray;\n    /**\n     * Sets the given vector \"result\" with the element values from the index \"offset\" of the given array\n     * @param array - defines the source array\n     * @param offset - defines the offset in the source array\n     * @param result - defines the Vector3 where to store the result\n     */\n    function fromArrayToRef(array, offset, result) {\n        result.x = array[offset];\n        result.y = array[offset + 1];\n        result.z = array[offset + 2];\n    }\n    Vector3.fromArrayToRef = fromArrayToRef;\n    /**\n     * Sets the given vector \"result\" with the element values from the index \"offset\" of the given FloatArray\n     * This function is deprecated.  Use FromArrayToRef instead.\n     * @param array - defines the source array\n     * @param offset - defines the offset in the source array\n     * @param result - defines the Vector3 where to store the result\n     */\n    function fromFloatArrayToRef(array, offset, result) {\n        return fromArrayToRef(array, offset, result);\n    }\n    Vector3.fromFloatArrayToRef = fromFloatArrayToRef;\n    // Properties\n    /**\n     * Gets the length of the Vector3\n     * @returns the length of the Vecto3\n     */\n    function length(vector) {\n        return Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);\n    }\n    Vector3.length = length;\n    /**\n     * Gets the squared length of the Vector3\n     * @returns squared length of the Vector3\n     */\n    function lengthSquared(vector) {\n        return vector.x * vector.x + vector.y * vector.y + vector.z * vector.z;\n    }\n    Vector3.lengthSquared = lengthSquared;\n    /**\n     * Returns a new Vector3 set with the current Vector3 coordinates multiplied by the float \"scale\"\n     * @param scale - defines the multiplier factor\n     * @returns a new Vector3\n     */\n    function scaleToRef(vector, scale, result) {\n        result.x = vector.x * scale;\n        result.y = vector.y * scale;\n        result.z = vector.z * scale;\n    }\n    Vector3.scaleToRef = scaleToRef;\n    /**\n     * Returns a new Vector3 set with the current Vector3 coordinates multiplied by the float \"scale\"\n     * @param scale - defines the multiplier factor\n     * @returns a new Vector3\n     */\n    function scale(vector, scale) {\n        return create(vector.x * scale, vector.y * scale, vector.z * scale);\n    }\n    Vector3.scale = scale;\n    /**\n     * Normalize the current Vector3 with the given input length.\n     * Please note that this is an in place operation.\n     * @param len - the length of the vector\n     * @returns the current updated Vector3\n     */\n    function normalizeFromLength(vector, len) {\n        const result = create(0, 0, 0);\n        normalizeFromLengthToRef(vector, len, result);\n        return result;\n    }\n    Vector3.normalizeFromLength = normalizeFromLength;\n    /**\n     * Normalize the current Vector3 with the given input length.\n     * Please note that this is an in place operation.\n     * @param len - the length of the vector\n     * @returns the current updated Vector3\n     */\n    function normalizeFromLengthToRef(vector, len, result) {\n        if (len === 0 || len === 1.0) {\n            copy(vector, result);\n            return;\n        }\n        scaleToRef(vector, 1.0 / len, result);\n    }\n    Vector3.normalizeFromLengthToRef = normalizeFromLengthToRef;\n    /**\n     * Normalize the current Vector3.\n     * Please note that this is an in place operation.\n     * @returns the current updated Vector3\n     */\n    function normalize(vector) {\n        return normalizeFromLength(vector, length(vector));\n    }\n    Vector3.normalize = normalize;\n    /**\n     * Normalize the current Vector3.\n     * Please note that this is an in place operation.\n     * @returns the current updated Vector3\n     */\n    function normalizeToRef(vector, result) {\n        normalizeFromLengthToRef(vector, length(vector), result);\n    }\n    Vector3.normalizeToRef = normalizeToRef;\n    /**\n     * Returns the dot product (float) between the vectors \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @returns the dot product\n     */\n    function dot(left, right) {\n        return left.x * right.x + left.y * right.y + left.z * right.z;\n    }\n    Vector3.dot = dot;\n    /**\n     * Multiplies this vector (with an implicit 1 in the 4th dimension) and m, and divides by perspective\n     * @param matrix - The transformation matrix\n     * @returns result Vector3\n     */\n    function applyMatrix4(vector, matrix) {\n        const result = clone(vector);\n        applyMatrix4ToRef(vector, matrix, result);\n        return result;\n    }\n    Vector3.applyMatrix4 = applyMatrix4;\n    /**\n     * Multiplies this vector (with an implicit 1 in the 4th dimension) and m, and divides by perspective and set the given vector \"result\" with this result\n     * @param matrix - The transformation matrix\n     * @param result - defines the Vector3 object where to store the result\n     */\n    function applyMatrix4ToRef(vector, matrix, result) {\n        const { x, y, z } = vector;\n        const m = matrix._m;\n        const w = 1 / (m[3] * x + m[7] * y + m[11] * z + m[15]);\n        result.x = (m[0] * x + m[4] * y + m[8] * z + m[12]) * w;\n        result.y = (m[1] * x + m[5] * y + m[9] * z + m[13]) * w;\n        result.z = (m[2] * x + m[6] * y + m[10] * z + m[14]) * w;\n    }\n    Vector3.applyMatrix4ToRef = applyMatrix4ToRef;\n    /**\n     * Rotates the current Vector3 based on the given quaternion\n     * @param q - defines the Quaternion\n     * @returns the current Vector3\n     */\n    function rotate(vector, q) {\n        const result = create();\n        rotateToRef(vector, q, result);\n        return result;\n    }\n    Vector3.rotate = rotate;\n    /**\n     * Rotates current Vector3 based on the given quaternion, but applies the rotation to target Vector3.\n     * @param q - defines the Quaternion\n     * @param result - defines the target Vector3\n     * @returns the current Vector3\n     */\n    function rotateToRef(vector, q, result) {\n        const { x, y, z } = vector;\n        const { x: qx, y: qy, z: qz, w: qw } = q;\n        // calculate quat * vector\n        const ix = qw * x + qy * z - qz * y;\n        const iy = qw * y + qz * x - qx * z;\n        const iz = qw * z + qx * y - qy * x;\n        const iw = -qx * x - qy * y - qz * z;\n        // calculate result * inverse quat\n        result.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n        result.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n        result.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    }\n    Vector3.rotateToRef = rotateToRef;\n    /**\n     * Returns a new Vector3 located for \"amount\" (float) on the linear interpolation between the vectors \"start\" and \"end\"\n     * @param start - defines the start value\n     * @param end - defines the end value\n     * @param amount - max defines amount between both (between 0 and 1)\n     * @returns the new Vector3\n     */\n    function lerp(start, end, amount) {\n        const result = create(0, 0, 0);\n        lerpToRef(start, end, amount, result);\n        return result;\n    }\n    Vector3.lerp = lerp;\n    /**\n     * Sets the given vector \"result\" with the result of the linear interpolation from the vector \"start\" for \"amount\" to the vector \"end\"\n     * @param start - defines the start value\n     * @param end - defines the end value\n     * @param amount - max defines amount between both (between 0 and 1)\n     * @param result - defines the Vector3 where to store the result\n     */\n    function lerpToRef(start, end, amount, result) {\n        result.x = start.x + (end.x - start.x) * amount;\n        result.y = start.y + (end.y - start.y) * amount;\n        result.z = start.z + (end.z - start.z) * amount;\n    }\n    Vector3.lerpToRef = lerpToRef;\n    /**\n     * Returns a new Vector3 as the cross product of the vectors \"left\" and \"right\"\n     * The cross product is then orthogonal to both \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @returns the cross product\n     */\n    function cross(left, right) {\n        const result = Vector3.Zero();\n        Vector3.crossToRef(left, right, result);\n        return result;\n    }\n    Vector3.cross = cross;\n    /**\n     * Sets the given vector \"result\" with the cross product of \"left\" and \"right\"\n     * The cross product is then orthogonal to both \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @param result - defines the Vector3 where to store the result\n     */\n    function crossToRef(left, right, result) {\n        result.x = left.y * right.z - left.z * right.y;\n        result.y = left.z * right.x - left.x * right.z;\n        result.z = left.x * right.y - left.y * right.x;\n    }\n    Vector3.crossToRef = crossToRef;\n    /**\n     * Returns a new Vector3 set with the result of the transformation by the given matrix of the given vector.\n     * This method computes tranformed coordinates only, not transformed direction vectors (ie. it takes translation in account)\n     * @param vector - defines the Vector3 to transform\n     * @param transformation - defines the transformation matrix\n     * @returns the transformed Vector3\n     */\n    function transformCoordinates(vector, transformation) {\n        const result = Vector3.Zero();\n        transformCoordinatesToRef(vector, transformation, result);\n        return result;\n    }\n    Vector3.transformCoordinates = transformCoordinates;\n    /**\n     * Sets the given vector \"result\" coordinates with the result of the transformation by the given matrix of the given vector\n     * This method computes tranformed coordinates only, not transformed direction vectors (ie. it takes translation in account)\n     * @param vector - defines the Vector3 to transform\n     * @param transformation - defines the transformation matrix\n     * @param result - defines the Vector3 where to store the result\n     */\n    function transformCoordinatesToRef(vector, transformation, result) {\n        return transformCoordinatesFromFloatsToRef(vector.x, vector.y, vector.z, transformation, result);\n    }\n    Vector3.transformCoordinatesToRef = transformCoordinatesToRef;\n    /**\n     * Sets the given vector \"result\" coordinates with the result of the transformation by the given matrix of the given floats (x, y, z)\n     * This method computes tranformed coordinates only, not transformed direction vectors\n     * @param x - define the x coordinate of the source vector\n     * @param y - define the y coordinate of the source vector\n     * @param z - define the z coordinate of the source vector\n     * @param transformation - defines the transformation matrix\n     * @param result - defines the Vector3 where to store the result\n     */\n    function transformCoordinatesFromFloatsToRef(x, y, z, transformation, result) {\n        const m = transformation._m;\n        const rx = x * m[0] + y * m[4] + z * m[8] + m[12];\n        const ry = x * m[1] + y * m[5] + z * m[9] + m[13];\n        const rz = x * m[2] + y * m[6] + z * m[10] + m[14];\n        const rw = 1 / (x * m[3] + y * m[7] + z * m[11] + m[15]);\n        result.x = rx * rw;\n        result.y = ry * rw;\n        result.z = rz * rw;\n    }\n    Vector3.transformCoordinatesFromFloatsToRef = transformCoordinatesFromFloatsToRef;\n    /**\n     * Returns a new Vector3 set with the result of the normal transformation by the given matrix of the given vector\n     * This methods computes transformed normalized direction vectors only (ie. it does not apply translation)\n     * @param vector - defines the Vector3 to transform\n     * @param transformation - defines the transformation matrix\n     * @returns the new Vector3\n     */\n    function transformNormal(vector, transformation) {\n        const result = Vector3.Zero();\n        transformNormalToRef(vector, transformation, result);\n        return result;\n    }\n    Vector3.transformNormal = transformNormal;\n    /**\n     * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given vector\n     * This methods computes transformed normalized direction vectors only (ie. it does not apply translation)\n     * @param vector - defines the Vector3 to transform\n     * @param transformation - defines the transformation matrix\n     * @param result - defines the Vector3 where to store the result\n     */\n    function transformNormalToRef(vector, transformation, result) {\n        transformNormalFromFloatsToRef(vector.x, vector.y, vector.z, transformation, result);\n    }\n    Vector3.transformNormalToRef = transformNormalToRef;\n    /**\n     * Sets the given vector \"result\" with the result of the normal transformation by the given matrix of the given floats (x, y, z)\n     * This methods computes transformed normalized direction vectors only (ie. it does not apply translation)\n     * @param x - define the x coordinate of the source vector\n     * @param y - define the y coordinate of the source vector\n     * @param z - define the z coordinate of the source vector\n     * @param transformation - defines the transformation matrix\n     * @param result - defines the Vector3 where to store the result\n     */\n    function transformNormalFromFloatsToRef(x, y, z, transformation, result) {\n        const m = transformation._m;\n        result.x = x * m[0] + y * m[4] + z * m[8];\n        result.y = x * m[1] + y * m[5] + z * m[9];\n        result.z = x * m[2] + y * m[6] + z * m[10];\n    }\n    Vector3.transformNormalFromFloatsToRef = transformNormalFromFloatsToRef;\n    /**\n     * Returns a new Vector3 located for \"amount\" on the CatmullRom interpolation spline defined by the vectors \"value1\", \"value2\", \"value3\", \"value4\"\n     * @param value1 - defines the first control point\n     * @param value2 - defines the second control point\n     * @param value3 - defines the third control point\n     * @param value4 - defines the fourth control point\n     * @param amount - defines the amount on the spline to use\n     * @returns the new Vector3\n     */\n    function catmullRom(value1, value2, value3, value4, amount) {\n        const squared = amount * amount;\n        const cubed = amount * squared;\n        const x = 0.5 *\n            (2.0 * value2.x +\n                (-value1.x + value3.x) * amount +\n                (2.0 * value1.x - 5.0 * value2.x + 4.0 * value3.x - value4.x) *\n                    squared +\n                (-value1.x + 3.0 * value2.x - 3.0 * value3.x + value4.x) * cubed);\n        const y = 0.5 *\n            (2.0 * value2.y +\n                (-value1.y + value3.y) * amount +\n                (2.0 * value1.y - 5.0 * value2.y + 4.0 * value3.y - value4.y) *\n                    squared +\n                (-value1.y + 3.0 * value2.y - 3.0 * value3.y + value4.y) * cubed);\n        const z = 0.5 *\n            (2.0 * value2.z +\n                (-value1.z + value3.z) * amount +\n                (2.0 * value1.z - 5.0 * value2.z + 4.0 * value3.z - value4.z) *\n                    squared +\n                (-value1.z + 3.0 * value2.z - 3.0 * value3.z + value4.z) * cubed);\n        return create(x, y, z);\n    }\n    Vector3.catmullRom = catmullRom;\n    /**\n     * Returns a new Vector3 set with the coordinates of \"value\", if the vector \"value\" is in the cube defined by the vectors \"min\" and \"max\"\n     * If a coordinate value of \"value\" is lower than one of the \"min\" coordinate, then this \"value\" coordinate is set with the \"min\" one\n     * If a coordinate value of \"value\" is greater than one of the \"max\" coordinate, then this \"value\" coordinate is set with the \"max\" one\n     * @param value - defines the current value\n     * @param min - defines the lower range value\n     * @param max - defines the upper range value\n     * @returns the new Vector3\n     */\n    function clamp(value, min, max) {\n        const v = create();\n        clampToRef(value, min, max, v);\n        return v;\n    }\n    Vector3.clamp = clamp;\n    /**\n     * Sets the given vector \"result\" with the coordinates of \"value\", if the vector \"value\" is in the cube defined by the vectors \"min\" and \"max\"\n     * If a coordinate value of \"value\" is lower than one of the \"min\" coordinate, then this \"value\" coordinate is set with the \"min\" one\n     * If a coordinate value of \"value\" is greater than one of the \"max\" coordinate, then this \"value\" coordinate is set with the \"max\" one\n     * @param value - defines the current value\n     * @param min - defines the lower range value\n     * @param max - defines the upper range value\n     * @param result - defines the Vector3 where to store the result\n     */\n    function clampToRef(value, min, max, result) {\n        let x = value.x;\n        x = x > max.x ? max.x : x;\n        x = x < min.x ? min.x : x;\n        let y = value.y;\n        y = y > max.y ? max.y : y;\n        y = y < min.y ? min.y : y;\n        let z = value.z;\n        z = z > max.z ? max.z : z;\n        z = z < min.z ? min.z : z;\n        copyFromFloats(x, y, z, result);\n    }\n    Vector3.clampToRef = clampToRef;\n    /**\n     * Returns a new Vector3 located for \"amount\" (float) on the Hermite interpolation spline defined by the vectors \"value1\", \"tangent1\", \"value2\", \"tangent2\"\n     * @param value1 - defines the first control point\n     * @param tangent1 - defines the first tangent vector\n     * @param value2 - defines the second control point\n     * @param tangent2 - defines the second tangent vector\n     * @param amount - defines the amount on the interpolation spline (between 0 and 1)\n     * @returns the new Vector3\n     */\n    function hermite(value1, tangent1, value2, tangent2, amount) {\n        const squared = amount * amount;\n        const cubed = amount * squared;\n        const part1 = 2.0 * cubed - 3.0 * squared + 1.0;\n        const part2 = -2.0 * cubed + 3.0 * squared;\n        const part3 = cubed - 2.0 * squared + amount;\n        const part4 = cubed - squared;\n        const x = value1.x * part1 +\n            value2.x * part2 +\n            tangent1.x * part3 +\n            tangent2.x * part4;\n        const y = value1.y * part1 +\n            value2.y * part2 +\n            tangent1.y * part3 +\n            tangent2.y * part4;\n        const z = value1.z * part1 +\n            value2.z * part2 +\n            tangent1.z * part3 +\n            tangent2.z * part4;\n        return create(x, y, z);\n    }\n    Vector3.hermite = hermite;\n    /**\n     * Gets the minimal coordinate values between two Vector3\n     * @param left - defines the first operand\n     * @param right - defines the second operand\n     * @returns the new Vector3\n     */\n    function minimize(left, right) {\n        const min = create();\n        minimizeInPlaceFromFloatsToRef(right, left.x, left.y, left.z, min);\n        return min;\n    }\n    Vector3.minimize = minimize;\n    /**\n     * Gets the maximal coordinate values between two Vector3\n     * @param left - defines the first operand\n     * @param right - defines the second operand\n     * @returns the new Vector3\n     */\n    function maximize(left, right) {\n        const max = create();\n        maximizeInPlaceFromFloatsToRef(left, right.x, right.y, right.z, max);\n        return max;\n    }\n    Vector3.maximize = maximize;\n    /**\n     * Returns the distance between the vectors \"value1\" and \"value2\"\n     * @param value1 - defines the first operand\n     * @param value2 - defines the second operand\n     * @returns the distance\n     */\n    function distance(value1, value2) {\n        return Math.sqrt(distanceSquared(value1, value2));\n    }\n    Vector3.distance = distance;\n    /**\n     * Returns the squared distance between the vectors \"value1\" and \"value2\"\n     * @param value1 - defines the first operand\n     * @param value2 - defines the second operand\n     * @returns the squared distance\n     */\n    function distanceSquared(value1, value2) {\n        const x = value1.x - value2.x;\n        const y = value1.y - value2.y;\n        const z = value1.z - value2.z;\n        return x * x + y * y + z * z;\n    }\n    Vector3.distanceSquared = distanceSquared;\n    /**\n     * Returns a new Vector3 located at the center between \"value1\" and \"value2\"\n     * @param value1 - defines the first operand\n     * @param value2 - defines the second operand\n     * @returns the new Vector3\n     */\n    function center(value1, value2) {\n        const center = add(value1, value2);\n        scaleToRef(center, 0.5, center);\n        return center;\n    }\n    Vector3.center = center;\n    /**\n     * Given three orthogonal normalized left-handed oriented Vector3 axis in space (target system),\n     * RotationFromAxis() returns the rotation Euler angles (ex : rotation.x, rotation.y, rotation.z) to apply\n     * to something in order to rotate it from its local system to the given target system\n     * Note: axis1, axis2 and axis3 are normalized during this operation\n     * @param axis1 - defines the first axis\n     * @param axis2 - defines the second axis\n     * @param axis3 - defines the third axis\n     * @returns a new Vector3\n     */\n    function rotationFromAxis(axis1, axis2, axis3) {\n        const rotation = Vector3.Zero();\n        rotationFromAxisToRef(axis1, axis2, axis3, rotation);\n        return rotation;\n    }\n    Vector3.rotationFromAxis = rotationFromAxis;\n    /**\n     * The same than RotationFromAxis but updates the given ref Vector3 parameter instead of returning a new Vector3\n     * @param axis1 - defines the first axis\n     * @param axis2 - defines the second axis\n     * @param axis3 - defines the third axis\n     * @param ref - defines the Vector3 where to store the result\n     */\n    function rotationFromAxisToRef(axis1, axis2, axis3, result) {\n        const quat = Quaternion_1.Quaternion.create();\n        Quaternion_1.Quaternion.rotationQuaternionFromAxisToRef(axis1, axis2, axis3, quat);\n        copy(Quaternion_1.Quaternion.eulerAngles(quat), result);\n    }\n    Vector3.rotationFromAxisToRef = rotationFromAxisToRef;\n    /**\n     * Creates a string representation of the Vector3\n     * @returns a string with the Vector3 coordinates.\n     */\n    function toString(vector) {\n        return `(${vector.x}, ${vector.y}, ${vector.z})`;\n    }\n    Vector3.toString = toString;\n    /**\n     * Creates the Vector3 hash code\n     * @returns a number which tends to be unique between Vector3 instances\n     */\n    function getHashCode(vector) {\n        let hash = vector.x || 0;\n        hash = (hash * 397) ^ (vector.y || 0);\n        hash = (hash * 397) ^ (vector.z || 0);\n        return hash;\n    }\n    Vector3.getHashCode = getHashCode;\n    /**\n     * Returns true if the vector1 and the vector2 coordinates are strictly equal\n     * @param vector1 - defines the first operand\n     * @param vector2 - defines the second operand\n     * @returns true if both vectors are equals\n     */\n    function equals(vector1, vector2) {\n        return (vector1.x === vector2.x &&\n            vector1.y === vector2.y &&\n            vector1.z === vector2.z);\n    }\n    Vector3.equals = equals;\n    /**\n     * Returns true if the current Vector3 and the given vector coordinates are distant less than epsilon\n     * @param otherVector - defines the second operand\n     * @param epsilon - defines the minimal distance to define values as equals\n     * @returns true if both vectors are distant less than epsilon\n     */\n    function equalsWithEpsilon(vector1, vector2, epsilon = types_1.Epsilon) {\n        return (Scalar_1.Scalar.withinEpsilon(vector1.x, vector2.x, epsilon) &&\n            Scalar_1.Scalar.withinEpsilon(vector1.y, vector2.y, epsilon) &&\n            Scalar_1.Scalar.withinEpsilon(vector1.z, vector2.z, epsilon));\n    }\n    Vector3.equalsWithEpsilon = equalsWithEpsilon;\n    /**\n     * Returns true if the current Vector3 coordinates equals the given floats\n     * @param x - defines the x coordinate of the operand\n     * @param y - defines the y coordinate of the operand\n     * @param z - defines the z coordinate of the operand\n     * @returns true if both vectors are equals\n     */\n    function equalsToFloats(vector, x, y, z) {\n        return vector.x === x && vector.y === y && vector.z === z;\n    }\n    Vector3.equalsToFloats = equalsToFloats;\n    /**\n     * Returns a new Vector3, result of the multiplication of vector1 by the vector2\n     * @param vector1 - defines the first operand\n     * @param vector2 - defines the second operand\n     * @returns the new Vector3\n     */\n    function multiply(vector1, vector2) {\n        const result = create();\n        multiplyToRef(vector1, vector2, result);\n        return result;\n    }\n    Vector3.multiply = multiply;\n    /**\n     * Multiplies the current Vector3 by the given one and stores the result in the given vector \"result\"\n     * @param otherVector - defines the second operand\n     * @param result - defines the Vector3 object where to store the result\n     * @returns the current Vector3\n     */\n    function multiplyToRef(vector1, vector2, result) {\n        result.x = vector1.x * vector2.x;\n        result.y = vector1.y * vector2.y;\n        result.z = vector1.z * vector2.z;\n    }\n    Vector3.multiplyToRef = multiplyToRef;\n    /**\n     * Returns a new Vector3 set with the result of the mulliplication of the current Vector3 coordinates by the given floats\n     * @param x - defines the x coordinate of the operand\n     * @param y - defines the y coordinate of the operand\n     * @param z - defines the z coordinate of the operand\n     * @returns the new Vector3\n     */\n    function multiplyByFloatsToRef(vector1, x, y, z, result) {\n        result.x = vector1.x * x;\n        result.y = vector1.y * y;\n        result.z = vector1.z * z;\n    }\n    Vector3.multiplyByFloatsToRef = multiplyByFloatsToRef;\n    /**\n     * Returns a new Vector3 set with the result of the mulliplication of the current Vector3 coordinates by the given floats\n     * @param x - defines the x coordinate of the operand\n     * @param y - defines the y coordinate of the operand\n     * @param z - defines the z coordinate of the operand\n     * @returns the new Vector3\n     */\n    function multiplyByFloats(vector1, x, y, z) {\n        const result = create();\n        multiplyByFloatsToRef(vector1, x, y, z, result);\n        return result;\n    }\n    Vector3.multiplyByFloats = multiplyByFloats;\n    /**\n     * Returns a new Vector3 set with the result of the division of the current Vector3 coordinates by the given ones\n     * @param otherVector - defines the second operand\n     * @returns the new Vector3\n     */\n    function divide(vector1, vector2) {\n        return {\n            x: vector1.x / vector2.x,\n            y: vector1.y / vector2.y,\n            z: vector1.z / vector2.z\n        };\n    }\n    Vector3.divide = divide;\n    /**\n     * Divides the current Vector3 coordinates by the given ones and stores the result in the given vector \"result\"\n     * @param otherVector - defines the second operand\n     * @param result - defines the Vector3 object where to store the result\n     * @returns the current Vector3\n     */\n    function divideToRef(vector1, vector2, result) {\n        result.x = vector1.x / vector2.x;\n        result.y = vector1.y / vector2.y;\n        result.z = vector1.z / vector2.z;\n    }\n    Vector3.divideToRef = divideToRef;\n    /**\n     * Set result Vector3 with the maximal coordinate values between vector1 and the given coordinates\n     * @param x - defines the x coordinate of the operand\n     * @param y - defines the y coordinate of the operand\n     * @param z - defines the z coordinate of the operand\n     * @param result - the set Vector3\n     */\n    function maximizeInPlaceFromFloatsToRef(vector1, x, y, z, result) {\n        if (x > vector1.x) {\n            result.x = x;\n        }\n        else {\n            result.x = vector1.x;\n        }\n        if (y > vector1.y) {\n            result.y = y;\n        }\n        else {\n            result.y = vector1.y;\n        }\n        if (z > vector1.z) {\n            result.z = z;\n        }\n        else {\n            result.z = vector1.z;\n        }\n    }\n    Vector3.maximizeInPlaceFromFloatsToRef = maximizeInPlaceFromFloatsToRef;\n    /**\n     * Set result Vector3 with the minimal coordinate values between vector1 and the given coordinates\n     * @param x - defines the x coordinate of the operand\n     * @param y - defines the y coordinate of the operand\n     * @param z - defines the z coordinate of the operand\n     * @param result - the set Vector3\n     */\n    function minimizeInPlaceFromFloatsToRef(vector1, x, y, z, result) {\n        if (x < vector1.x) {\n            result.x = x;\n        }\n        else {\n            result.x = vector1.x;\n        }\n        if (y < vector1.y) {\n            result.y = y;\n        }\n        else {\n            result.y = vector1.y;\n        }\n        if (z < vector1.z) {\n            result.z = z;\n        }\n        else {\n            result.z = vector1.z;\n        }\n    }\n    Vector3.minimizeInPlaceFromFloatsToRef = minimizeInPlaceFromFloatsToRef;\n    /**\n     * Gets a new Vector3 from vector1 floored values\n     * @returns a new Vector3\n     */\n    function floor(vector1) {\n        return create(Math.floor(vector1.x), Math.floor(vector1.y), Math.floor(vector1.z));\n    }\n    Vector3.floor = floor;\n    /**\n     * Gets a new Vector3 from vector1 floored values\n     * @returns a new Vector3\n     */\n    function fract(vector1) {\n        return create(vector1.x - Math.floor(vector1.x), vector1.y - Math.floor(vector1.y), vector1.z - Math.floor(vector1.z));\n    }\n    Vector3.fract = fract;\n    /**\n     * Returns a new Vector3 set to (0.0, 0.0, 0.0)\n     * @returns a new empty Vector3\n     */\n    function Zero() {\n        return create(0.0, 0.0, 0.0);\n    }\n    Vector3.Zero = Zero;\n    /**\n     * Returns a new Vector3 set to (1.0, 1.0, 1.0)\n     * @returns a new unit Vector3\n     */\n    function One() {\n        return create(1.0, 1.0, 1.0);\n    }\n    Vector3.One = One;\n    /**\n     * Returns a new Vector3 set tolengthSquared (0.0, 1.0, 0.0)\n     * @returns a new up Vector3\n     */\n    function Up() {\n        return create(0.0, 1.0, 0.0);\n    }\n    Vector3.Up = Up;\n    /**\n     * Returns a new Vector3 set to (0.0, -1.0, 0.0)\n     * @returns a new down Vector3\n     */\n    function Down() {\n        return create(0.0, -1.0, 0.0);\n    }\n    Vector3.Down = Down;\n    /**\n     * Returns a new Vector3 set to (0.0, 0.0, 1.0)\n     * @returns a new forward Vector3\n     */\n    function Forward() {\n        return create(0.0, 0.0, 1.0);\n    }\n    Vector3.Forward = Forward;\n    /**\n     * Returns a new Vector3 set to (0.0, 0.0, -1.0)\n     * @returns a new forward Vector3\n     */\n    function Backward() {\n        return create(0.0, 0.0, -1.0);\n    }\n    Vector3.Backward = Backward;\n    /**\n     * Returns a new Vector3 set to (1.0, 0.0, 0.0)\n     * @returns a new right Vector3\n     */\n    function Right() {\n        return create(1.0, 0.0, 0.0);\n    }\n    Vector3.Right = Right;\n    /**\n     * Returns a new Vector3 set to (-1.0, 0.0, 0.0)\n     * @returns a new left Vector3\n     */\n    function Left() {\n        return create(-1.0, 0.0, 0.0);\n    }\n    Vector3.Left = Left;\n    /**\n     * Returns a new random Vector3\n     * @returns a random Vector3\n     */\n    function Random() {\n        return create(Math.random(), Math.random(), Math.random());\n    }\n    Vector3.Random = Random;\n})(Vector3 = exports.Vector3 || (exports.Vector3 = {}));\n//# sourceMappingURL=Vector3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Plane = void 0;\nconst Vector3_1 = require(\"./Vector3\");\nconst Matrix_1 = require(\"./Matrix\");\n/**\n * Represens a plane by the equation ax + by + cz + d = 0\n * @public\n */\nvar Plane;\n(function (Plane) {\n    /**\n     * Creates a Plane object according to the given floats a, b, c, d and the plane equation : ax + by + cz + d = 0\n     * @param a - a component of the plane\n     * @param b - b component of the plane\n     * @param c - c component of the plane\n     * @param d - d component of the plane\n     */\n    function create(a, b, c, d) {\n        return {\n            normal: Vector3_1.Vector3.create(a, b, c),\n            d: d\n        };\n    }\n    Plane.create = create;\n    // Statics\n    /**\n     * Creates a plane from an  array\n     * @param array - the array to create a plane from\n     * @returns a new Plane from the given array.\n     */\n    function fromArray(array) {\n        return create(array[0], array[1], array[2], array[3]);\n    }\n    Plane.fromArray = fromArray;\n    /**\n     * Creates a plane from three points\n     * @param point1 - point used to create the plane\n     * @param point2 - point used to create the plane\n     * @param point3 - point used to create the plane\n     * @returns a new Plane defined by the three given points.\n     */\n    function fromPoints(_point1, _point2, _point3) {\n        const result = create(0.0, 0.0, 0.0, 0.0);\n        // TODO\n        // result.copyFromPoints(point1, point2, point3)\n        return result;\n    }\n    Plane.fromPoints = fromPoints;\n    /**\n     * Creates a plane from an origin point and a normal\n     * @param origin - origin of the plane to be constructed\n     * @param normal - normal of the plane to be constructed\n     * @returns a new Plane the normal vector to this plane at the given origin point.\n     * Note : the vector \"normal\" is updated because normalized.\n     */\n    function romPositionAndNormal(origin, normal) {\n        const result = create(0.0, 0.0, 0.0, 0.0);\n        result.normal = Vector3_1.Vector3.normalize(normal);\n        result.d = -(normal.x * origin.x +\n            normal.y * origin.y +\n            normal.z * origin.z);\n        return result;\n    }\n    Plane.romPositionAndNormal = romPositionAndNormal;\n    /**\n     * Calculates the distance from a plane and a point\n     * @param origin - origin of the plane to be constructed\n     * @param normal - normal of the plane to be constructed\n     * @param point - point to calculate distance to\n     * @returns the signed distance between the plane defined by the normal vector at the \"origin\"\" point and the given other point.\n     */\n    function signedDistanceToPlaneFromPositionAndNormal(origin, normal, point) {\n        const d = -(normal.x * origin.x + normal.y * origin.y + normal.z * origin.z);\n        return Vector3_1.Vector3.dot(point, normal) + d;\n    }\n    Plane.signedDistanceToPlaneFromPositionAndNormal = signedDistanceToPlaneFromPositionAndNormal;\n    /**\n     * @returns the plane coordinates as a new array of 4 elements [a, b, c, d].\n     */\n    function asArray(plane) {\n        return [plane.normal.x, plane.normal.y, plane.normal.z, plane.d];\n    }\n    Plane.asArray = asArray;\n    // Methods\n    /**\n     * @returns a new plane copied from the current Plane.\n     */\n    function clone(plane) {\n        return create(plane.normal.x, plane.normal.y, plane.normal.z, plane.d);\n    }\n    Plane.clone = clone;\n    /**\n     * @returns the Plane hash code.\n     */\n    function getHashCode(_plane) {\n        // TODO\n        // let hash = plane.normal.getHashCode()\n        // hash = (hash * 397) ^ (plane.d || 0)\n        // return hash\n        return 0;\n    }\n    Plane.getHashCode = getHashCode;\n    /**\n     * Normalize the current Plane in place.\n     * @returns the updated Plane.\n     */\n    function normalize(plane) {\n        const result = create(0, 0, 0, 0);\n        const norm = Math.sqrt(plane.normal.x * plane.normal.x +\n            plane.normal.y * plane.normal.y +\n            plane.normal.z * plane.normal.z);\n        let magnitude = 0.0;\n        if (norm !== 0) {\n            magnitude = 1.0 / norm;\n        }\n        result.normal.x = plane.normal.x * magnitude;\n        result.normal.y = plane.normal.y * magnitude;\n        result.normal.z = plane.normal.z * magnitude;\n        result.d *= magnitude;\n        return plane;\n    }\n    Plane.normalize = normalize;\n    /**\n     * Applies a transformation the plane and returns the result\n     * @param transformation - the transformation matrix to be applied to the plane\n     * @returns a new Plane as the result of the transformation of the current Plane by the given matrix.\n     */\n    function transform(plane, transformation) {\n        const transposedMatrix = Matrix_1.Matrix.create();\n        Matrix_1.Matrix.transposeToRef(transformation, transposedMatrix);\n        const m = transposedMatrix._m;\n        const x = plane.normal.x;\n        const y = plane.normal.y;\n        const z = plane.normal.z;\n        const d = plane.d;\n        const normalX = x * m[0] + y * m[1] + z * m[2] + d * m[3];\n        const normalY = x * m[4] + y * m[5] + z * m[6] + d * m[7];\n        const normalZ = x * m[8] + y * m[9] + z * m[10] + d * m[11];\n        const finalD = x * m[12] + y * m[13] + z * m[14] + d * m[15];\n        return create(normalX, normalY, normalZ, finalD);\n    }\n    Plane.transform = transform;\n    /**\n     * Calcualtte the dot product between the point and the plane normal\n     * @param point - point to calculate the dot product with\n     * @returns the dot product (float) of the point coordinates and the plane normal.\n     */\n    function dotCoordinate(plane, point) {\n        return (plane.normal.x * point.x +\n            plane.normal.y * point.y +\n            plane.normal.z * point.z +\n            plane.d);\n    }\n    Plane.dotCoordinate = dotCoordinate;\n    /**\n     * Updates the current Plane from the plane defined by the three given points.\n     * @param point1 - one of the points used to contruct the plane\n     * @param point2 - one of the points used to contruct the plane\n     * @param point3 - one of the points used to contruct the plane\n     * @returns the updated Plane.\n     */\n    function copyFromPoints(point1, point2, point3) {\n        const x1 = point2.x - point1.x;\n        const y1 = point2.y - point1.y;\n        const z1 = point2.z - point1.z;\n        const x2 = point3.x - point1.x;\n        const y2 = point3.y - point1.y;\n        const z2 = point3.z - point1.z;\n        const yz = y1 * z2 - z1 * y2;\n        const xz = z1 * x2 - x1 * z2;\n        const xy = x1 * y2 - y1 * x2;\n        const pyth = Math.sqrt(yz * yz + xz * xz + xy * xy);\n        let invPyth;\n        if (pyth !== 0) {\n            invPyth = 1.0 / pyth;\n        }\n        else {\n            invPyth = 0.0;\n        }\n        const normal = Vector3_1.Vector3.create(yz * invPyth, xz * invPyth, xy * invPyth);\n        return {\n            normal,\n            d: -(normal.x * point1.x + normal.y * point1.y + normal.z * point1.z)\n        };\n    }\n    Plane.copyFromPoints = copyFromPoints;\n    /**\n     * Checks if the plane is facing a given direction\n     * @param direction - the direction to check if the plane is facing\n     * @param epsilon - value the dot product is compared against (returns true if dot &lt;= epsilon)\n     * @returns True is the vector \"direction\"  is the same side than the plane normal.\n     */\n    function isFrontFacingTo(plane, direction, epsilon) {\n        const dot = Vector3_1.Vector3.dot(plane.normal, direction);\n        return dot <= epsilon;\n    }\n    Plane.isFrontFacingTo = isFrontFacingTo;\n    /**\n     * Calculates the distance to a point\n     * @param point - point to calculate distance to\n     * @returns the signed distance (float) from the given point to the Plane.\n     */\n    function signedDistanceTo(plane, point) {\n        return Vector3_1.Vector3.dot(point, plane.normal) + plane.d;\n    }\n    Plane.signedDistanceTo = signedDistanceTo;\n})(Plane = exports.Plane || (exports.Plane = {}));\n//# sourceMappingURL=Plane.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Matrix = void 0;\nconst Vector3_1 = require(\"./Vector3\");\nconst Quaternion_1 = require(\"./Quaternion\");\nconst Plane_1 = require(\"./Plane\");\n/**\n * Class used to store matrix data (4x4)\n * @public\n */\nvar Matrix;\n(function (Matrix) {\n    /**\n     * Gets the internal data of the matrix\n     */\n    function m(self) {\n        return self._m;\n    }\n    Matrix.m = m;\n    let _updateFlagSeed = 0;\n    const _identityReadOnly = {};\n    /**\n     * Gets an identity matrix that must not be updated\n     */\n    function IdentityReadOnly() {\n        return _identityReadOnly;\n    }\n    Matrix.IdentityReadOnly = IdentityReadOnly;\n    /**\n     * Creates an empty matrix (filled with zeros)\n     */\n    function create() {\n        const newMatrix = {\n            updateFlag: 0,\n            isIdentity: false,\n            isIdentity3x2: true,\n            _isIdentityDirty: true,\n            _isIdentity3x2Dirty: true,\n            _m: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n        };\n        _updateIdentityStatus(newMatrix, false);\n        return newMatrix;\n    }\n    Matrix.create = create;\n    // Statics\n    /**\n     * Creates a matrix from an array\n     * @param array - defines the source array\n     * @param offset - defines an offset in the source array\n     * @returns a new Matrix set from the starting index of the given array\n     */\n    function fromArray(array, offset = 0) {\n        const result = create();\n        fromArrayToRef(array, offset, result);\n        return result;\n    }\n    Matrix.fromArray = fromArray;\n    /**\n     * Copy the content of an array into a given matrix\n     * @param array - defines the source array\n     * @param offset - defines an offset in the source array\n     * @param result - defines the target matrix\n     */\n    function fromArrayToRef(array, offset, result) {\n        for (let index = 0; index < 16; index++) {\n            result._m[index] = array[index + offset];\n        }\n        _markAsUpdated(result);\n    }\n    Matrix.fromArrayToRef = fromArrayToRef;\n    /**\n     * Stores an array into a matrix after having multiplied each component by a given factor\n     * @param array - defines the source array\n     * @param offset - defines the offset in the source array\n     * @param scale - defines the scaling factor\n     * @param result - defines the target matrix\n     */\n    function fromFloatArrayToRefScaled(array, offset, scale, result) {\n        for (let index = 0; index < 16; index++) {\n            result._m[index] = array[index + offset] * scale;\n        }\n        _markAsUpdated(result);\n    }\n    Matrix.fromFloatArrayToRefScaled = fromFloatArrayToRefScaled;\n    /**\n     * Stores a list of values (16) inside a given matrix\n     * @param initialM11 - defines 1st value of 1st row\n     * @param initialM12 - defines 2nd value of 1st row\n     * @param initialM13 - defines 3rd value of 1st row\n     * @param initialM14 - defines 4th value of 1st row\n     * @param initialM21 - defines 1st value of 2nd row\n     * @param initialM22 - defines 2nd value of 2nd row\n     * @param initialM23 - defines 3rd value of 2nd row\n     * @param initialM24 - defines 4th value of 2nd row\n     * @param initialM31 - defines 1st value of 3rd row\n     * @param initialM32 - defines 2nd value of 3rd row\n     * @param initialM33 - defines 3rd value of 3rd row\n     * @param initialM34 - defines 4th value of 3rd row\n     * @param initialM41 - defines 1st value of 4th row\n     * @param initialM42 - defines 2nd value of 4th row\n     * @param initialM43 - defines 3rd value of 4th row\n     * @param initialM44 - defines 4th value of 4th row\n     * @param result - defines the target matrix\n     */\n    function fromValuesToRef(initialM11, initialM12, initialM13, initialM14, initialM21, initialM22, initialM23, initialM24, initialM31, initialM32, initialM33, initialM34, initialM41, initialM42, initialM43, initialM44, result) {\n        const m = result._m;\n        m[0] = initialM11;\n        m[1] = initialM12;\n        m[2] = initialM13;\n        m[3] = initialM14;\n        m[4] = initialM21;\n        m[5] = initialM22;\n        m[6] = initialM23;\n        m[7] = initialM24;\n        m[8] = initialM31;\n        m[9] = initialM32;\n        m[10] = initialM33;\n        m[11] = initialM34;\n        m[12] = initialM41;\n        m[13] = initialM42;\n        m[14] = initialM43;\n        m[15] = initialM44;\n        _markAsUpdated(result);\n    }\n    Matrix.fromValuesToRef = fromValuesToRef;\n    /**\n     * Creates new matrix from a list of values (16)\n     * @param initialM11 - defines 1st value of 1st row\n     * @param initialM12 - defines 2nd value of 1st row\n     * @param initialM13 - defines 3rd value of 1st row\n     * @param initialM14 - defines 4th value of 1st row\n     * @param initialM21 - defines 1st value of 2nd row\n     * @param initialM22 - defines 2nd value of 2nd row\n     * @param initialM23 - defines 3rd value of 2nd row\n     * @param initialM24 - defines 4th value of 2nd row\n     * @param initialM31 - defines 1st value of 3rd row\n     * @param initialM32 - defines 2nd value of 3rd row\n     * @param initialM33 - defines 3rd value of 3rd row\n     * @param initialM34 - defines 4th value of 3rd row\n     * @param initialM41 - defines 1st value of 4th row\n     * @param initialM42 - defines 2nd value of 4th row\n     * @param initialM43 - defines 3rd value of 4th row\n     * @param initialM44 - defines 4th value of 4th row\n     * @returns the new matrix\n     */\n    function fromValues(initialM11, initialM12, initialM13, initialM14, initialM21, initialM22, initialM23, initialM24, initialM31, initialM32, initialM33, initialM34, initialM41, initialM42, initialM43, initialM44) {\n        const result = create();\n        const m = result._m;\n        m[0] = initialM11;\n        m[1] = initialM12;\n        m[2] = initialM13;\n        m[3] = initialM14;\n        m[4] = initialM21;\n        m[5] = initialM22;\n        m[6] = initialM23;\n        m[7] = initialM24;\n        m[8] = initialM31;\n        m[9] = initialM32;\n        m[10] = initialM33;\n        m[11] = initialM34;\n        m[12] = initialM41;\n        m[13] = initialM42;\n        m[14] = initialM43;\n        m[15] = initialM44;\n        _markAsUpdated(result);\n        return result;\n    }\n    Matrix.fromValues = fromValues;\n    /**\n     * Creates a new matrix composed by merging scale (vector3), rotation (quaternion) and translation (vector3)\n     * @param scale - defines the scale vector3\n     * @param rotation - defines the rotation quaternion\n     * @param translation - defines the translation vector3\n     * @returns a new matrix\n     */\n    function compose(scale, rotation, translation) {\n        const result = create();\n        composeToRef(scale, rotation, translation, result);\n        return result;\n    }\n    Matrix.compose = compose;\n    /**\n     * Sets a matrix to a value composed by merging scale (vector3), rotation (quaternion) and translation (vector3)\n     * @param scale - defines the scale vector3\n     * @param rotation - defines the rotation quaternion\n     * @param translation - defines the translation vector3\n     * @param result - defines the target matrix\n     */\n    function composeToRef(scale, rotation, translation, result) {\n        const tmpMatrix = [create(), create(), create()];\n        scalingToRef(scale.x, scale.y, scale.z, tmpMatrix[1]);\n        fromQuaternionToRef(rotation, tmpMatrix[0]);\n        multiplyToRef(tmpMatrix[1], tmpMatrix[0], result);\n        setTranslation(result, translation);\n    }\n    Matrix.composeToRef = composeToRef;\n    /**\n     * Creates a new identity matrix\n     * @returns a new identity matrix\n     */\n    function Identity() {\n        const identity = fromValues(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0);\n        _updateIdentityStatus(identity, true);\n        return identity;\n    }\n    Matrix.Identity = Identity;\n    /**\n     * Creates a new identity matrix and stores the result in a given matrix\n     * @param result - defines the target matrix\n     */\n    function IdentityToRef(result) {\n        fromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, result);\n        _updateIdentityStatus(result, true);\n    }\n    Matrix.IdentityToRef = IdentityToRef;\n    /**\n     * Creates a new zero matrix\n     * @returns a new zero matrix\n     */\n    function Zero() {\n        const zero = fromValues(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);\n        _updateIdentityStatus(zero, false);\n        return zero;\n    }\n    Matrix.Zero = Zero;\n    /**\n     * Creates a new rotation matrix for \"angle\" radians around the X axis\n     * @param angle - defines the angle (in radians) to use\n     * @returns the new matrix\n     */\n    function RotationX(angle) {\n        const result = create();\n        rotationXToRef(angle, result);\n        return result;\n    }\n    Matrix.RotationX = RotationX;\n    /**\n     * Creates a new rotation matrix for \"angle\" radians around the X axis and stores it in a given matrix\n     * @param angle - defines the angle (in radians) to use\n     * @param result - defines the target matrix\n     */\n    function rotationXToRef(angle, result) {\n        const s = Math.sin(angle);\n        const c = Math.cos(angle);\n        fromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, c, s, 0.0, 0.0, -s, c, 0.0, 0.0, 0.0, 0.0, 1.0, result);\n        _updateIdentityStatus(result, c === 1 && s === 0);\n    }\n    Matrix.rotationXToRef = rotationXToRef;\n    /**\n     * Creates a new rotation matrix for \"angle\" radians around the Y axis\n     * @param angle - defines the angle (in radians) to use\n     * @returns the new matrix\n     */\n    function rotationY(angle) {\n        const result = create();\n        rotationYToRef(angle, result);\n        return result;\n    }\n    Matrix.rotationY = rotationY;\n    /**\n     * Creates a new rotation matrix for \"angle\" radians around the Y axis and stores it in a given matrix\n     * @param angle - defines the angle (in radians) to use\n     * @param result - defines the target matrix\n     */\n    function rotationYToRef(angle, result) {\n        const s = Math.sin(angle);\n        const c = Math.cos(angle);\n        fromValuesToRef(c, 0.0, -s, 0.0, 0.0, 1.0, 0.0, 0.0, s, 0.0, c, 0.0, 0.0, 0.0, 0.0, 1.0, result);\n        _updateIdentityStatus(result, c === 1 && s === 0);\n    }\n    Matrix.rotationYToRef = rotationYToRef;\n    /**\n     * Creates a new rotation matrix for \"angle\" radians around the Z axis\n     * @param angle - defines the angle (in radians) to use\n     * @returns the new matrix\n     */\n    function rotationZ(angle) {\n        const result = create();\n        rotationZToRef(angle, result);\n        return result;\n    }\n    Matrix.rotationZ = rotationZ;\n    /**\n     * Creates a new rotation matrix for \"angle\" radians around the Z axis and stores it in a given matrix\n     * @param angle - defines the angle (in radians) to use\n     * @param result - defines the target matrix\n     */\n    function rotationZToRef(angle, result) {\n        const s = Math.sin(angle);\n        const c = Math.cos(angle);\n        fromValuesToRef(c, s, 0.0, 0.0, -s, c, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, result);\n        _updateIdentityStatus(result, c === 1 && s === 0);\n    }\n    Matrix.rotationZToRef = rotationZToRef;\n    /**\n     * Creates a new rotation matrix for \"angle\" radians around the given axis\n     * @param axis - defines the axis to use\n     * @param angle - defines the angle (in radians) to use\n     * @returns the new matrix\n     */\n    function rotationAxis(axis, angle) {\n        const result = create();\n        rotationAxisToRef(axis, angle, result);\n        return result;\n    }\n    Matrix.rotationAxis = rotationAxis;\n    /**\n     * Creates a new rotation matrix for \"angle\" radians around the given axis and stores it in a given matrix\n     * @param axis - defines the axis to use\n     * @param angle - defines the angle (in radians) to use\n     * @param result - defines the target matrix\n     */\n    function rotationAxisToRef(_axis, angle, result) {\n        const s = Math.sin(-angle);\n        const c = Math.cos(-angle);\n        const c1 = 1 - c;\n        const axis = Vector3_1.Vector3.normalize(_axis);\n        const m = result._m;\n        m[0] = axis.x * axis.x * c1 + c;\n        m[1] = axis.x * axis.y * c1 - axis.z * s;\n        m[2] = axis.x * axis.z * c1 + axis.y * s;\n        m[3] = 0.0;\n        m[4] = axis.y * axis.x * c1 + axis.z * s;\n        m[5] = axis.y * axis.y * c1 + c;\n        m[6] = axis.y * axis.z * c1 - axis.x * s;\n        m[7] = 0.0;\n        m[8] = axis.z * axis.x * c1 - axis.y * s;\n        m[9] = axis.z * axis.y * c1 + axis.x * s;\n        m[10] = axis.z * axis.z * c1 + c;\n        m[11] = 0.0;\n        m[12] = 0.0;\n        m[13] = 0.0;\n        m[14] = 0.0;\n        m[15] = 1.0;\n        _markAsUpdated(result);\n    }\n    Matrix.rotationAxisToRef = rotationAxisToRef;\n    /**\n     * Creates a rotation matrix\n     * @param yaw - defines the yaw angle in radians (Y axis)\n     * @param pitch - defines the pitch angle in radians (X axis)\n     * @param roll - defines the roll angle in radians (X axis)\n     * @returns the new rotation matrix\n     */\n    function rotationYawPitchRoll(yaw, pitch, roll) {\n        const result = create();\n        rotationYawPitchRollToRef(yaw, pitch, roll, result);\n        return result;\n    }\n    Matrix.rotationYawPitchRoll = rotationYawPitchRoll;\n    /**\n     * Creates a rotation matrix and stores it in a given matrix\n     * @param yaw - defines the yaw angle in radians (Y axis)\n     * @param pitch - defines the pitch angle in radians (X axis)\n     * @param roll - defines the roll angle in radians (X axis)\n     * @param result - defines the target matrix\n     */\n    function rotationYawPitchRollToRef(yaw, pitch, roll, result) {\n        const quaternionResult = Quaternion_1.Quaternion.Zero();\n        Quaternion_1.Quaternion.rotationYawPitchRollToRef(yaw, pitch, roll, quaternionResult);\n        fromQuaternionToRef(quaternionResult, result);\n    }\n    Matrix.rotationYawPitchRollToRef = rotationYawPitchRollToRef;\n    /**\n     * Creates a scaling matrix\n     * @param x - defines the scale factor on X axis\n     * @param y - defines the scale factor on Y axis\n     * @param z - defines the scale factor on Z axis\n     * @returns the new matrix\n     */\n    function scaling(x, y, z) {\n        const result = create();\n        scalingToRef(x, y, z, result);\n        return result;\n    }\n    Matrix.scaling = scaling;\n    /**\n     * Creates a scaling matrix and stores it in a given matrix\n     * @param x - defines the scale factor on X axis\n     * @param y - defines the scale factor on Y axis\n     * @param z - defines the scale factor on Z axis\n     * @param result - defines the target matrix\n     */\n    function scalingToRef(x, y, z, result) {\n        fromValuesToRef(x, 0.0, 0.0, 0.0, 0.0, y, 0.0, 0.0, 0.0, 0.0, z, 0.0, 0.0, 0.0, 0.0, 1.0, result);\n        _updateIdentityStatus(result, x === 1 && y === 1 && z === 1);\n    }\n    Matrix.scalingToRef = scalingToRef;\n    /**\n     * Creates a translation matrix\n     * @param x - defines the translation on X axis\n     * @param y - defines the translation on Y axis\n     * @param z - defines the translationon Z axis\n     * @returns the new matrix\n     */\n    function translation(x, y, z) {\n        const result = create();\n        translationToRef(x, y, z, result);\n        return result;\n    }\n    Matrix.translation = translation;\n    /**\n     * Creates a translation matrix and stores it in a given matrix\n     * @param x - defines the translation on X axis\n     * @param y - defines the translation on Y axis\n     * @param z - defines the translationon Z axis\n     * @param result - defines the target matrix\n     */\n    function translationToRef(x, y, z, result) {\n        fromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, x, y, z, 1.0, result);\n        _updateIdentityStatus(result, x === 0 && y === 0 && z === 0);\n    }\n    Matrix.translationToRef = translationToRef;\n    /**\n     * Returns a new Matrix whose values are the interpolated values for \"gradient\" (float) between the ones of the matrices \"startValue\" and \"endValue\".\n     * @param startValue - defines the start value\n     * @param endValue - defines the end value\n     * @param gradient - defines the gradient factor\n     * @returns the new matrix\n     */\n    function lerp(startValue, endValue, gradient) {\n        const result = create();\n        lerpToRef(startValue, endValue, gradient, result);\n        return result;\n    }\n    Matrix.lerp = lerp;\n    /**\n     * Set the given matrix \"result\" as the interpolated values for \"gradient\" (float) between the ones of the matrices \"startValue\" and \"endValue\".\n     * @param startValue - defines the start value\n     * @param endValue - defines the end value\n     * @param gradient - defines the gradient factor\n     * @param result - defines the Matrix object where to store data\n     */\n    function lerpToRef(startValue, endValue, gradient, result) {\n        for (let index = 0; index < 16; index++) {\n            result._m[index] =\n                startValue._m[index] * (1.0 - gradient) + endValue._m[index] * gradient;\n        }\n        _markAsUpdated(result);\n    }\n    Matrix.lerpToRef = lerpToRef;\n    /**\n     * Builds a new matrix whose values are computed by:\n     * * decomposing the the \"startValue\" and \"endValue\" matrices into their respective scale, rotation and translation matrices\n     * * interpolating for \"gradient\" (float) the values between each of these decomposed matrices between the start and the end\n     * * recomposing a new matrix from these 3 interpolated scale, rotation and translation matrices\n     * @param startValue - defines the first matrix\n     * @param endValue - defines the second matrix\n     * @param gradient - defines the gradient between the two matrices\n     * @returns the new matrix\n     */\n    function decomposeLerp(startValue, endValue, gradient) {\n        const result = create();\n        decomposeLerpToRef(startValue, endValue, gradient, result);\n        return result;\n    }\n    Matrix.decomposeLerp = decomposeLerp;\n    /**\n     * Update a matrix to values which are computed by:\n     * * decomposing the the \"startValue\" and \"endValue\" matrices into their respective scale, rotation and translation matrices\n     * * interpolating for \"gradient\" (float) the values between each of these decomposed matrices between the start and the end\n     * * recomposing a new matrix from these 3 interpolated scale, rotation and translation matrices\n     * @param startValue - defines the first matrix\n     * @param endValue - defines the second matrix\n     * @param gradient - defines the gradient between the two matrices\n     * @param result - defines the target matrix\n     */\n    function decomposeLerpToRef(startValue, endValue, gradient, result) {\n        const startScale = Vector3_1.Vector3.Zero();\n        const startRotation = Quaternion_1.Quaternion.Zero();\n        const startTranslation = Vector3_1.Vector3.Zero();\n        decompose(startValue, startScale, startRotation, startTranslation);\n        const endScale = Vector3_1.Vector3.Zero();\n        const endRotation = Quaternion_1.Quaternion.Zero();\n        const endTranslation = Vector3_1.Vector3.Zero();\n        decompose(endValue, endScale, endRotation, endTranslation);\n        const resultScale = Vector3_1.Vector3.Zero();\n        Vector3_1.Vector3.lerpToRef(startScale, endScale, gradient, resultScale);\n        const resultRotation = Quaternion_1.Quaternion.Zero();\n        Quaternion_1.Quaternion.slerpToRef(startRotation, endRotation, gradient, resultRotation);\n        const resultTranslation = Vector3_1.Vector3.Zero();\n        Vector3_1.Vector3.lerpToRef(startTranslation, endTranslation, gradient, resultTranslation);\n        composeToRef(resultScale, resultRotation, resultTranslation, result);\n    }\n    Matrix.decomposeLerpToRef = decomposeLerpToRef;\n    /**\n     * Gets a new rotation matrix used to rotate an entity so as it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\"\n     * self function works in left handed mode\n     * @param eye - defines the final position of the entity\n     * @param target - defines where the entity should look at\n     * @param up - defines the up vector for the entity\n     * @returns the new matrix\n     */\n    function LookAtLH(eye, target, up) {\n        const result = create();\n        lookAtLHToRef(eye, target, up, result);\n        return result;\n    }\n    Matrix.LookAtLH = LookAtLH;\n    /**\n     * Sets the given \"result\" Matrix to a rotation matrix used to rotate an entity so that it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\".\n     * self function works in left handed mode\n     * @param eye - defines the final position of the entity\n     * @param target - defines where the entity should look at\n     * @param up - defines the up vector for the entity\n     * @param result - defines the target matrix\n     */\n    function lookAtLHToRef(eye, target, up, result) {\n        const xAxis = Vector3_1.Vector3.Zero();\n        const yAxis = Vector3_1.Vector3.Zero();\n        const zAxis = Vector3_1.Vector3.Zero();\n        // Z axis\n        Vector3_1.Vector3.subtractToRef(target, eye, zAxis);\n        Vector3_1.Vector3.normalizeToRef(zAxis, zAxis);\n        // X axis\n        Vector3_1.Vector3.crossToRef(up, zAxis, xAxis);\n        const xSquareLength = Vector3_1.Vector3.lengthSquared(xAxis);\n        if (xSquareLength === 0) {\n            xAxis.x = 1.0;\n        }\n        else {\n            Vector3_1.Vector3.normalizeFromLengthToRef(xAxis, Math.sqrt(xSquareLength), xAxis);\n        }\n        // Y axis\n        Vector3_1.Vector3.crossToRef(zAxis, xAxis, yAxis);\n        Vector3_1.Vector3.normalizeToRef(yAxis, yAxis);\n        // Eye angles\n        const ex = -Vector3_1.Vector3.dot(xAxis, eye);\n        const ey = -Vector3_1.Vector3.dot(yAxis, eye);\n        const ez = -Vector3_1.Vector3.dot(zAxis, eye);\n        fromValuesToRef(xAxis.x, yAxis.x, zAxis.x, 0.0, xAxis.y, yAxis.y, zAxis.y, 0.0, xAxis.z, yAxis.z, zAxis.z, 0.0, ex, ey, ez, 1.0, result);\n    }\n    Matrix.lookAtLHToRef = lookAtLHToRef;\n    /**\n     * Gets a new rotation matrix used to rotate an entity so as it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\"\n     * self function works in right handed mode\n     * @param eye - defines the final position of the entity\n     * @param target - defines where the entity should look at\n     * @param up - defines the up vector for the entity\n     * @returns the new matrix\n     */\n    function lookAtRH(eye, target, up) {\n        const result = create();\n        lookAtRHToRef(eye, target, up, result);\n        return result;\n    }\n    Matrix.lookAtRH = lookAtRH;\n    /**\n     * Sets the given \"result\" Matrix to a rotation matrix used to rotate an entity so that it looks at the target vector3, from the eye vector3 position, the up vector3 being oriented like \"up\".\n     * self function works in right handed mode\n     * @param eye - defines the final position of the entity\n     * @param target - defines where the entity should look at\n     * @param up - defines the up vector for the entity\n     * @param result - defines the target matrix\n     */\n    function lookAtRHToRef(eye, target, up, result) {\n        const xAxis = Vector3_1.Vector3.Zero();\n        const yAxis = Vector3_1.Vector3.Zero();\n        const zAxis = Vector3_1.Vector3.Zero();\n        // Z axis\n        Vector3_1.Vector3.subtractToRef(eye, target, zAxis);\n        Vector3_1.Vector3.normalizeToRef(zAxis, zAxis);\n        // X axis\n        Vector3_1.Vector3.crossToRef(up, zAxis, xAxis);\n        const xSquareLength = Vector3_1.Vector3.lengthSquared(xAxis);\n        if (xSquareLength === 0) {\n            xAxis.x = 1.0;\n        }\n        else {\n            Vector3_1.Vector3.normalizeFromLengthToRef(xAxis, Math.sqrt(xSquareLength), xAxis);\n        }\n        // Y axis\n        Vector3_1.Vector3.crossToRef(zAxis, xAxis, yAxis);\n        Vector3_1.Vector3.normalizeToRef(yAxis, yAxis);\n        // Eye angles\n        const ex = -Vector3_1.Vector3.dot(xAxis, eye);\n        const ey = -Vector3_1.Vector3.dot(yAxis, eye);\n        const ez = -Vector3_1.Vector3.dot(zAxis, eye);\n        fromValuesToRef(xAxis.x, yAxis.x, zAxis.x, 0.0, xAxis.y, yAxis.y, zAxis.y, 0.0, xAxis.z, yAxis.z, zAxis.z, 0.0, ex, ey, ez, 1.0, result);\n    }\n    Matrix.lookAtRHToRef = lookAtRHToRef;\n    /**\n     * Create a left-handed orthographic projection matrix\n     * @param width - defines the viewport width\n     * @param height - defines the viewport height\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @returns a new matrix as a left-handed orthographic projection matrix\n     */\n    function orthoLH(width, height, znear, zfar) {\n        const matrix = create();\n        orthoLHToRef(width, height, znear, zfar, matrix);\n        return matrix;\n    }\n    Matrix.orthoLH = orthoLH;\n    /**\n     * Store a left-handed orthographic projection to a given matrix\n     * @param width - defines the viewport width\n     * @param height - defines the viewport height\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @param result - defines the target matrix\n     */\n    function orthoLHToRef(width, height, znear, zfar, result) {\n        const n = znear;\n        const f = zfar;\n        const a = 2.0 / width;\n        const b = 2.0 / height;\n        const c = 2.0 / (f - n);\n        const d = -(f + n) / (f - n);\n        fromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 0.0, 0.0, 0.0, d, 1.0, result);\n        _updateIdentityStatus(result, a === 1 && b === 1 && c === 1 && d === 0);\n    }\n    Matrix.orthoLHToRef = orthoLHToRef;\n    /**\n     * Create a left-handed orthographic projection matrix\n     * @param left - defines the viewport left coordinate\n     * @param right - defines the viewport right coordinate\n     * @param bottom - defines the viewport bottom coordinate\n     * @param top - defines the viewport top coordinate\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @returns a new matrix as a left-handed orthographic projection matrix\n     */\n    function OrthoOffCenterLH(left, right, bottom, top, znear, zfar) {\n        const matrix = create();\n        orthoOffCenterLHToRef(left, right, bottom, top, znear, zfar, matrix);\n        return matrix;\n    }\n    Matrix.OrthoOffCenterLH = OrthoOffCenterLH;\n    /**\n     * Stores a left-handed orthographic projection into a given matrix\n     * @param left - defines the viewport left coordinate\n     * @param right - defines the viewport right coordinate\n     * @param bottom - defines the viewport bottom coordinate\n     * @param top - defines the viewport top coordinate\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @param result - defines the target matrix\n     */\n    function orthoOffCenterLHToRef(left, right, bottom, top, znear, zfar, result) {\n        const n = znear;\n        const f = zfar;\n        const a = 2.0 / (right - left);\n        const b = 2.0 / (top - bottom);\n        const c = 2.0 / (f - n);\n        const d = -(f + n) / (f - n);\n        const i0 = (left + right) / (left - right);\n        const i1 = (top + bottom) / (bottom - top);\n        fromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 0.0, i0, i1, d, 1.0, result);\n        _markAsUpdated(result);\n    }\n    Matrix.orthoOffCenterLHToRef = orthoOffCenterLHToRef;\n    /**\n     * Creates a right-handed orthographic projection matrix\n     * @param left - defines the viewport left coordinate\n     * @param right - defines the viewport right coordinate\n     * @param bottom - defines the viewport bottom coordinate\n     * @param top - defines the viewport top coordinate\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @returns a new matrix as a right-handed orthographic projection matrix\n     */\n    function orthoOffCenterRH(left, right, bottom, top, znear, zfar) {\n        const matrix = create();\n        orthoOffCenterRHToRef(left, right, bottom, top, znear, zfar, matrix);\n        return matrix;\n    }\n    Matrix.orthoOffCenterRH = orthoOffCenterRH;\n    /**\n     * Stores a right-handed orthographic projection into a given matrix\n     * @param left - defines the viewport left coordinate\n     * @param right - defines the viewport right coordinate\n     * @param bottom - defines the viewport bottom coordinate\n     * @param top - defines the viewport top coordinate\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @param result - defines the target matrix\n     */\n    function orthoOffCenterRHToRef(left, right, bottom, top, znear, zfar, result) {\n        orthoOffCenterLHToRef(left, right, bottom, top, znear, zfar, result);\n        result._m[10] *= -1; // No need to call _markAsUpdated as previous function already called it and let _isIdentityDirty to true\n    }\n    Matrix.orthoOffCenterRHToRef = orthoOffCenterRHToRef;\n    /**\n     * Creates a left-handed perspective projection matrix\n     * @param width - defines the viewport width\n     * @param height - defines the viewport height\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @returns a new matrix as a left-handed perspective projection matrix\n     */\n    function perspectiveLH(width, height, znear, zfar) {\n        const matrix = create();\n        const n = znear;\n        const f = zfar;\n        const a = (2.0 * n) / width;\n        const b = (2.0 * n) / height;\n        const c = (f + n) / (f - n);\n        const d = (-2.0 * f * n) / (f - n);\n        fromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 1.0, 0.0, 0.0, d, 0.0, matrix);\n        _updateIdentityStatus(matrix, false);\n        return matrix;\n    }\n    Matrix.perspectiveLH = perspectiveLH;\n    /**\n     * Creates a left-handed perspective projection matrix\n     * @param fov - defines the horizontal field of view\n     * @param aspect - defines the aspect ratio\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @returns a new matrix as a left-handed perspective projection matrix\n     */\n    function perspectiveFovLH(fov, aspect, znear, zfar) {\n        const matrix = create();\n        perspectiveFovLHToRef(fov, aspect, znear, zfar, matrix);\n        return matrix;\n    }\n    Matrix.perspectiveFovLH = perspectiveFovLH;\n    /**\n     * Stores a left-handed perspective projection into a given matrix\n     * @param fov - defines the horizontal field of view\n     * @param aspect - defines the aspect ratio\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @param result - defines the target matrix\n     * @param isVerticalFovFixed - defines it the fov is vertically fixed (default) or horizontally\n     */\n    function perspectiveFovLHToRef(fov, aspect, znear, zfar, result, isVerticalFovFixed = true) {\n        const n = znear;\n        const f = zfar;\n        const t = 1.0 / Math.tan(fov * 0.5);\n        const a = isVerticalFovFixed ? t / aspect : t;\n        const b = isVerticalFovFixed ? t : t * aspect;\n        const c = (f + n) / (f - n);\n        const d = (-2.0 * f * n) / (f - n);\n        fromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, 1.0, 0.0, 0.0, d, 0.0, result);\n        _updateIdentityStatus(result, false);\n    }\n    Matrix.perspectiveFovLHToRef = perspectiveFovLHToRef;\n    /**\n     * Creates a right-handed perspective projection matrix\n     * @param fov - defines the horizontal field of view\n     * @param aspect - defines the aspect ratio\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @returns a new matrix as a right-handed perspective projection matrix\n     */\n    function PerspectiveFovRH(fov, aspect, znear, zfar) {\n        const matrix = create();\n        perspectiveFovRHToRef(fov, aspect, znear, zfar, matrix);\n        return matrix;\n    }\n    Matrix.PerspectiveFovRH = PerspectiveFovRH;\n    /**\n     * Stores a right-handed perspective projection into a given matrix\n     * @param fov - defines the horizontal field of view\n     * @param aspect - defines the aspect ratio\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @param result - defines the target matrix\n     * @param isVerticalFovFixed - defines it the fov is vertically fixed (default) or horizontally\n     */\n    function perspectiveFovRHToRef(fov, aspect, znear, zfar, result, isVerticalFovFixed = true) {\n        /* alternatively self could be expressed as:\n        //    m = PerspectiveFovLHToRef\n        //    m[10] *= -1.0;\n        //    m[11] *= -1.0;\n        */\n        const n = znear;\n        const f = zfar;\n        const t = 1.0 / Math.tan(fov * 0.5);\n        const a = isVerticalFovFixed ? t / aspect : t;\n        const b = isVerticalFovFixed ? t : t * aspect;\n        const c = -(f + n) / (f - n);\n        const d = (-2 * f * n) / (f - n);\n        fromValuesToRef(a, 0.0, 0.0, 0.0, 0.0, b, 0.0, 0.0, 0.0, 0.0, c, -1.0, 0.0, 0.0, d, 0.0, result);\n        _updateIdentityStatus(result, false);\n    }\n    Matrix.perspectiveFovRHToRef = perspectiveFovRHToRef;\n    /**\n     * Stores a perspective projection for WebVR info a given matrix\n     * @param fov - defines the field of view\n     * @param znear - defines the near clip plane\n     * @param zfar - defines the far clip plane\n     * @param result - defines the target matrix\n     * @param rightHanded - defines if the matrix must be in right-handed mode (false by default)\n     */\n    function perspectiveFovWebVRToRef(fov, znear, zfar, result, rightHanded = false) {\n        const rightHandedFactor = rightHanded ? -1 : 1;\n        const upTan = Math.tan((fov.upDegrees * Math.PI) / 180.0);\n        const downTan = Math.tan((fov.downDegrees * Math.PI) / 180.0);\n        const leftTan = Math.tan((fov.leftDegrees * Math.PI) / 180.0);\n        const rightTan = Math.tan((fov.rightDegrees * Math.PI) / 180.0);\n        const xScale = 2.0 / (leftTan + rightTan);\n        const yScale = 2.0 / (upTan + downTan);\n        const m = result._m;\n        m[0] = xScale;\n        m[1] = m[2] = m[3] = m[4] = 0.0;\n        m[5] = yScale;\n        m[6] = m[7] = 0.0;\n        m[8] = (leftTan - rightTan) * xScale * 0.5;\n        m[9] = -((upTan - downTan) * yScale * 0.5);\n        m[10] = -zfar / (znear - zfar);\n        m[11] = 1.0 * rightHandedFactor;\n        m[12] = m[13] = m[15] = 0.0;\n        m[14] = -(2.0 * zfar * znear) / (zfar - znear);\n        _markAsUpdated(result);\n    }\n    Matrix.perspectiveFovWebVRToRef = perspectiveFovWebVRToRef;\n    /**\n     * Extracts a 2x2 matrix from a given matrix and store the result in a FloatArray\n     * @param matrix - defines the matrix to use\n     * @returns a new FloatArray array with 4 elements : the 2x2 matrix extracted from the given matrix\n     */\n    function GetAsMatrix2x2(matrix) {\n        return [matrix._m[0], matrix._m[1], matrix._m[4], matrix._m[5]];\n    }\n    Matrix.GetAsMatrix2x2 = GetAsMatrix2x2;\n    /**\n     * Extracts a 3x3 matrix from a given matrix and store the result in a FloatArray\n     * @param matrix - defines the matrix to use\n     * @returns a new FloatArray array with 9 elements : the 3x3 matrix extracted from the given matrix\n     */\n    function GetAsMatrix3x3(matrix) {\n        return [\n            matrix._m[0],\n            matrix._m[1],\n            matrix._m[2],\n            matrix._m[4],\n            matrix._m[5],\n            matrix._m[6],\n            matrix._m[8],\n            matrix._m[9],\n            matrix._m[10]\n        ];\n    }\n    Matrix.GetAsMatrix3x3 = GetAsMatrix3x3;\n    /**\n     * Compute the transpose of a given matrix\n     * @param matrix - defines the matrix to transpose\n     * @returns the new matrix\n     */\n    function transpose(matrix) {\n        const result = create();\n        transposeToRef(matrix, result);\n        return result;\n    }\n    Matrix.transpose = transpose;\n    /**\n     * Compute the transpose of a matrix and store it in a target matrix\n     * @param matrix - defines the matrix to transpose\n     * @param result - defines the target matrix\n     */\n    function transposeToRef(matrix, result) {\n        const rm = result._m;\n        const mm = matrix._m;\n        rm[0] = mm[0];\n        rm[1] = mm[4];\n        rm[2] = mm[8];\n        rm[3] = mm[12];\n        rm[4] = mm[1];\n        rm[5] = mm[5];\n        rm[6] = mm[9];\n        rm[7] = mm[13];\n        rm[8] = mm[2];\n        rm[9] = mm[6];\n        rm[10] = mm[10];\n        rm[11] = mm[14];\n        rm[12] = mm[3];\n        rm[13] = mm[7];\n        rm[14] = mm[11];\n        rm[15] = mm[15];\n        // identity-ness does not change when transposing\n        _updateIdentityStatus(result, matrix.isIdentity, matrix._isIdentityDirty);\n    }\n    Matrix.transposeToRef = transposeToRef;\n    /**\n     * Computes a reflection matrix from a plane\n     * @param plane - defines the reflection plane\n     * @returns a new matrix\n     */\n    function reflection(plane) {\n        const matrix = create();\n        reflectionToRef(plane, matrix);\n        return matrix;\n    }\n    Matrix.reflection = reflection;\n    /**\n     * Computes a reflection matrix from a plane\n     * @param plane - defines the reflection plane\n     * @param result - defines the target matrix\n     */\n    function reflectionToRef(_plane, result) {\n        const plane = Plane_1.Plane.normalize(_plane);\n        const x = plane.normal.x;\n        const y = plane.normal.y;\n        const z = plane.normal.z;\n        const temp = -2 * x;\n        const temp2 = -2 * y;\n        const temp3 = -2 * z;\n        fromValuesToRef(temp * x + 1, temp2 * x, temp3 * x, 0.0, temp * y, temp2 * y + 1, temp3 * y, 0.0, temp * z, temp2 * z, temp3 * z + 1, 0.0, temp * plane.d, temp2 * plane.d, temp3 * plane.d, 1.0, result);\n    }\n    Matrix.reflectionToRef = reflectionToRef;\n    /**\n     * Sets the given matrix as a rotation matrix composed from the 3 left handed axes\n     * @param xaxis - defines the value of the 1st axis\n     * @param yaxis - defines the value of the 2nd axis\n     * @param zaxis - defines the value of the 3rd axis\n     * @param result - defines the target matrix\n     */\n    function fromXYZAxesToRef(xaxis, yaxis, zaxis, result) {\n        fromValuesToRef(xaxis.x, xaxis.y, xaxis.z, 0.0, yaxis.x, yaxis.y, yaxis.z, 0.0, zaxis.x, zaxis.y, zaxis.z, 0.0, 0.0, 0.0, 0.0, 1.0, result);\n    }\n    Matrix.fromXYZAxesToRef = fromXYZAxesToRef;\n    /**\n     * Creates a rotation matrix from a quaternion and stores it in a target matrix\n     * @param quat - defines the quaternion to use\n     * @param result - defines the target matrix\n     */\n    function fromQuaternionToRef(quat, result) {\n        const xx = quat.x * quat.x;\n        const yy = quat.y * quat.y;\n        const zz = quat.z * quat.z;\n        const xy = quat.x * quat.y;\n        const zw = quat.z * quat.w;\n        const zx = quat.z * quat.x;\n        const yw = quat.y * quat.w;\n        const yz = quat.y * quat.z;\n        const xw = quat.x * quat.w;\n        result._m[0] = 1.0 - 2.0 * (yy + zz);\n        result._m[1] = 2.0 * (xy + zw);\n        result._m[2] = 2.0 * (zx - yw);\n        result._m[3] = 0.0;\n        result._m[4] = 2.0 * (xy - zw);\n        result._m[5] = 1.0 - 2.0 * (zz + xx);\n        result._m[6] = 2.0 * (yz + xw);\n        result._m[7] = 0.0;\n        result._m[8] = 2.0 * (zx + yw);\n        result._m[9] = 2.0 * (yz - xw);\n        result._m[10] = 1.0 - 2.0 * (yy + xx);\n        result._m[11] = 0.0;\n        result._m[12] = 0.0;\n        result._m[13] = 0.0;\n        result._m[14] = 0.0;\n        result._m[15] = 1.0;\n        _markAsUpdated(result);\n    }\n    Matrix.fromQuaternionToRef = fromQuaternionToRef;\n    /** @internal */\n    function _markAsUpdated(self) {\n        self.updateFlag = _updateFlagSeed++;\n        self.isIdentity = false;\n        self.isIdentity3x2 = false;\n        self._isIdentityDirty = true;\n        self._isIdentity3x2Dirty = true;\n    }\n    // Properties\n    /**\n     * Check if the current matrix is identity\n     * @returns true is the matrix is the identity matrix\n     */\n    function isIdentityUpdate(self) {\n        if (self._isIdentityDirty) {\n            self._isIdentityDirty = false;\n            const m = self._m;\n            self.isIdentity =\n                m[0] === 1.0 &&\n                    m[1] === 0.0 &&\n                    m[2] === 0.0 &&\n                    m[3] === 0.0 &&\n                    m[4] === 0.0 &&\n                    m[5] === 1.0 &&\n                    m[6] === 0.0 &&\n                    m[7] === 0.0 &&\n                    m[8] === 0.0 &&\n                    m[9] === 0.0 &&\n                    m[10] === 1.0 &&\n                    m[11] === 0.0 &&\n                    m[12] === 0.0 &&\n                    m[13] === 0.0 &&\n                    m[14] === 0.0 &&\n                    m[15] === 1.0;\n        }\n        return self.isIdentity;\n    }\n    Matrix.isIdentityUpdate = isIdentityUpdate;\n    /**\n     * Check if the current matrix is identity as a texture matrix (3x2 store in 4x4)\n     * @returns true is the matrix is the identity matrix\n     */\n    function isIdentityAs3x2Update(self) {\n        if (self._isIdentity3x2Dirty) {\n            self._isIdentity3x2Dirty = false;\n            if (self._m[0] !== 1.0 || self._m[5] !== 1.0 || self._m[15] !== 1.0) {\n                self.isIdentity3x2 = false;\n            }\n            else if (self._m[1] !== 0.0 ||\n                self._m[2] !== 0.0 ||\n                self._m[3] !== 0.0 ||\n                self._m[4] !== 0.0 ||\n                self._m[6] !== 0.0 ||\n                self._m[7] !== 0.0 ||\n                self._m[8] !== 0.0 ||\n                self._m[9] !== 0.0 ||\n                self._m[10] !== 0.0 ||\n                self._m[11] !== 0.0 ||\n                self._m[12] !== 0.0 ||\n                self._m[13] !== 0.0 ||\n                self._m[14] !== 0.0) {\n                self.isIdentity3x2 = false;\n            }\n            else {\n                self.isIdentity3x2 = true;\n            }\n        }\n        return self.isIdentity3x2;\n    }\n    Matrix.isIdentityAs3x2Update = isIdentityAs3x2Update;\n    /**\n     * Gets the determinant of the matrix\n     * @returns the matrix determinant\n     */\n    function determinant(self) {\n        if (self.isIdentity === true) {\n            return 1;\n        }\n        const m = self._m;\n        // tslint:disable-next-line:one-variable-per-declaration\n        const m00 = m[0], m01 = m[1], m02 = m[2], m03 = m[3];\n        // tslint:disable-next-line:one-variable-per-declaration\n        const m10 = m[4], m11 = m[5], m12 = m[6], m13 = m[7];\n        // tslint:disable-next-line:one-variable-per-declaration\n        const m20 = m[8], m21 = m[9], m22 = m[10], m23 = m[11];\n        // tslint:disable-next-line:one-variable-per-declaration\n        const m30 = m[12], m31 = m[13], m32 = m[14], m33 = m[15];\n        /*\n        // https://en.wikipedia.org/wiki/Laplace_expansion\n        // to compute the deterrminant of a 4x4 Matrix we compute the cofactors of any row or column,\n        // then we multiply each Cofactor by its corresponding matrix value and sum them all to get the determinant\n        // Cofactor(i, j) = sign(i,j) * det(Minor(i, j))\n        // where\n        //  - sign(i,j) = (i+j) % 2 === 0 ? 1 : -1\n        //  - Minor(i, j) is the 3x3 matrix we get by removing row i and column j from current Matrix\n        //\n        // Here we do that for the 1st row.\n        */\n        // tslint:disable:variable-name\n        const det_22_33 = m22 * m33 - m32 * m23;\n        const det_21_33 = m21 * m33 - m31 * m23;\n        const det_21_32 = m21 * m32 - m31 * m22;\n        const det_20_33 = m20 * m33 - m30 * m23;\n        const det_20_32 = m20 * m32 - m22 * m30;\n        const det_20_31 = m20 * m31 - m30 * m21;\n        const cofact_00 = +(m11 * det_22_33 - m12 * det_21_33 + m13 * det_21_32);\n        const cofact_01 = -(m10 * det_22_33 - m12 * det_20_33 + m13 * det_20_32);\n        const cofact_02 = +(m10 * det_21_33 - m11 * det_20_33 + m13 * det_20_31);\n        const cofact_03 = -(m10 * det_21_32 - m11 * det_20_32 + m12 * det_20_31);\n        // tslint:enable:variable-name\n        return m00 * cofact_00 + m01 * cofact_01 + m02 * cofact_02 + m03 * cofact_03;\n    }\n    Matrix.determinant = determinant;\n    // Methods\n    /**\n     * Returns the matrix as a FloatArray\n     * @returns the matrix underlying array\n     */\n    function toArray(self) {\n        return self._m;\n    }\n    Matrix.toArray = toArray;\n    /**\n     * Returns the matrix as a FloatArray\n     * @returns the matrix underlying array.\n     */\n    function asArray(self) {\n        return self._m;\n    }\n    Matrix.asArray = asArray;\n    /**\n     * Sets all the matrix elements to zero\n     * @returns the current matrix\n     */\n    function reset(self) {\n        fromValuesToRef(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, self);\n        _updateIdentityStatus(self, false);\n    }\n    Matrix.reset = reset;\n    /**\n     * Adds the current matrix with a second one\n     * @param other - defines the matrix to add\n     * @returns a new matrix as the addition of the current matrix and the given one\n     */\n    function add(self, other) {\n        const result = create();\n        addToRef(self, other, result);\n        return result;\n    }\n    Matrix.add = add;\n    /**\n     * Sets the given matrix \"result\" to the addition of the current matrix and the given one\n     * @param other - defines the matrix to add\n     * @param result - defines the target matrix\n     * @returns the current matrix\n     */\n    function addToRef(self, other, result) {\n        for (let index = 0; index < 16; index++) {\n            result._m[index] = self._m[index] + other._m[index];\n        }\n        _markAsUpdated(result);\n    }\n    Matrix.addToRef = addToRef;\n    /**\n     * Adds in place the given matrix to the current matrix\n     * @param other - defines the second operand\n     * @returns the current updated matrix\n     */\n    function addToSelf(self, other) {\n        for (let index = 0; index < 16; index++) {\n            self._m[index] += other._m[index];\n        }\n        _markAsUpdated(self);\n    }\n    Matrix.addToSelf = addToSelf;\n    /**\n     * Creates a new matrix as the invert of a given matrix\n     * @param source - defines the source matrix\n     * @returns the new matrix\n     */\n    function invert(source) {\n        const result = create();\n        invertToRef(source, result);\n        return result;\n    }\n    Matrix.invert = invert;\n    /**\n     * Sets the given matrix to the current inverted Matrix\n     * @param other - defines the target matrix\n     * @returns the unmodified current matrix\n     */\n    function invertToRef(source, result) {\n        if (source.isIdentity === true) {\n            copy(source, result);\n            return;\n        }\n        // the inverse of a Matrix is the transpose of cofactor matrix divided by the determinant\n        const m = source._m;\n        // tslint:disable:one-variable-per-declaration\n        const m00 = m[0], m01 = m[1], m02 = m[2], m03 = m[3];\n        const m10 = m[4], m11 = m[5], m12 = m[6], m13 = m[7];\n        const m20 = m[8], m21 = m[9], m22 = m[10], m23 = m[11];\n        const m30 = m[12], m31 = m[13], m32 = m[14], m33 = m[15];\n        // tslint:enable:one-variable-per-declaration\n        // tslint:disable:variable-name\n        const det_22_33 = m22 * m33 - m32 * m23;\n        const det_21_33 = m21 * m33 - m31 * m23;\n        const det_21_32 = m21 * m32 - m31 * m22;\n        const det_20_33 = m20 * m33 - m30 * m23;\n        const det_20_32 = m20 * m32 - m22 * m30;\n        const det_20_31 = m20 * m31 - m30 * m21;\n        const cofact_00 = +(m11 * det_22_33 - m12 * det_21_33 + m13 * det_21_32);\n        const cofact_01 = -(m10 * det_22_33 - m12 * det_20_33 + m13 * det_20_32);\n        const cofact_02 = +(m10 * det_21_33 - m11 * det_20_33 + m13 * det_20_31);\n        const cofact_03 = -(m10 * det_21_32 - m11 * det_20_32 + m12 * det_20_31);\n        const det = m00 * cofact_00 + m01 * cofact_01 + m02 * cofact_02 + m03 * cofact_03;\n        if (det === 0) {\n            copy(source, result);\n            return;\n        }\n        const detInv = 1 / det;\n        const det_12_33 = m12 * m33 - m32 * m13;\n        const det_11_33 = m11 * m33 - m31 * m13;\n        const det_11_32 = m11 * m32 - m31 * m12;\n        const det_10_33 = m10 * m33 - m30 * m13;\n        const det_10_32 = m10 * m32 - m30 * m12;\n        const det_10_31 = m10 * m31 - m30 * m11;\n        const det_12_23 = m12 * m23 - m22 * m13;\n        const det_11_23 = m11 * m23 - m21 * m13;\n        const det_11_22 = m11 * m22 - m21 * m12;\n        const det_10_23 = m10 * m23 - m20 * m13;\n        const det_10_22 = m10 * m22 - m20 * m12;\n        const det_10_21 = m10 * m21 - m20 * m11;\n        const cofact_10 = -(m01 * det_22_33 - m02 * det_21_33 + m03 * det_21_32);\n        const cofact_11 = +(m00 * det_22_33 - m02 * det_20_33 + m03 * det_20_32);\n        const cofact_12 = -(m00 * det_21_33 - m01 * det_20_33 + m03 * det_20_31);\n        const cofact_13 = +(m00 * det_21_32 - m01 * det_20_32 + m02 * det_20_31);\n        const cofact_20 = +(m01 * det_12_33 - m02 * det_11_33 + m03 * det_11_32);\n        const cofact_21 = -(m00 * det_12_33 - m02 * det_10_33 + m03 * det_10_32);\n        const cofact_22 = +(m00 * det_11_33 - m01 * det_10_33 + m03 * det_10_31);\n        const cofact_23 = -(m00 * det_11_32 - m01 * det_10_32 + m02 * det_10_31);\n        const cofact_30 = -(m01 * det_12_23 - m02 * det_11_23 + m03 * det_11_22);\n        const cofact_31 = +(m00 * det_12_23 - m02 * det_10_23 + m03 * det_10_22);\n        const cofact_32 = -(m00 * det_11_23 - m01 * det_10_23 + m03 * det_10_21);\n        const cofact_33 = +(m00 * det_11_22 - m01 * det_10_22 + m02 * det_10_21);\n        fromValuesToRef(cofact_00 * detInv, cofact_10 * detInv, cofact_20 * detInv, cofact_30 * detInv, cofact_01 * detInv, cofact_11 * detInv, cofact_21 * detInv, cofact_31 * detInv, cofact_02 * detInv, cofact_12 * detInv, cofact_22 * detInv, cofact_32 * detInv, cofact_03 * detInv, cofact_13 * detInv, cofact_23 * detInv, cofact_33 * detInv, result);\n        // tslint:enable:variable-name\n    }\n    Matrix.invertToRef = invertToRef;\n    /**\n     * add a value at the specified position in the current Matrix\n     * @param index - the index of the value within the matrix. between 0 and 15.\n     * @param value - the value to be added\n     * @returns the current updated matrix\n     */\n    function addAtIndex(self, index, value) {\n        self._m[index] += value;\n        _markAsUpdated(self);\n    }\n    Matrix.addAtIndex = addAtIndex;\n    /**\n     * mutiply the specified position in the current Matrix by a value\n     * @param index - the index of the value within the matrix. between 0 and 15.\n     * @param value - the value to be added\n     * @returns the current updated matrix\n     */\n    function multiplyAtIndex(self, index, value) {\n        self._m[index] *= value;\n        _markAsUpdated(self);\n        return self;\n    }\n    Matrix.multiplyAtIndex = multiplyAtIndex;\n    /**\n     * Inserts the translation vector (using 3 floats) in the current matrix\n     * @param x - defines the 1st component of the translation\n     * @param y - defines the 2nd component of the translation\n     * @param z - defines the 3rd component of the translation\n     * @returns the current updated matrix\n     */\n    function setTranslationFromFloats(self, x, y, z) {\n        self._m[12] = x;\n        self._m[13] = y;\n        self._m[14] = z;\n        _markAsUpdated(self);\n    }\n    Matrix.setTranslationFromFloats = setTranslationFromFloats;\n    /**\n     * Inserts the translation vector in the current matrix\n     * @param vector3 - defines the translation to insert\n     * @returns the current updated matrix\n     */\n    function setTranslation(self, vector3) {\n        setTranslationFromFloats(self, vector3.x, vector3.y, vector3.z);\n    }\n    Matrix.setTranslation = setTranslation;\n    /**\n     * Gets the translation value of the current matrix\n     * @returns a new Vector3 as the extracted translation from the matrix\n     */\n    function getTranslation(self) {\n        return Vector3_1.Vector3.create(self._m[12], self._m[13], self._m[14]);\n    }\n    Matrix.getTranslation = getTranslation;\n    /**\n     * Fill a Vector3 with the extracted translation from the matrix\n     * @param result - defines the Vector3 where to store the translation\n     * @returns the current matrix\n     */\n    function getTranslationToRef(self, result) {\n        result.x = self._m[12];\n        result.y = self._m[13];\n        result.z = self._m[14];\n    }\n    Matrix.getTranslationToRef = getTranslationToRef;\n    /**\n     * Remove rotation and scaling part from the matrix\n     * @returns the updated matrix\n     */\n    function removeRotationAndScaling(self) {\n        const m = self._m;\n        fromValuesToRef(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, m[12], m[13], m[14], m[15], self);\n        _updateIdentityStatus(self, m[12] === 0 && m[13] === 0 && m[14] === 0 && m[15] === 1);\n        return self;\n    }\n    Matrix.removeRotationAndScaling = removeRotationAndScaling;\n    /**\n     * Multiply two matrices\n     * @param other - defines the second operand\n     * @returns a new matrix set with the multiplication result of the current Matrix and the given one\n     */\n    function multiply(self, other) {\n        const result = create();\n        multiplyToRef(self, other, result);\n        return result;\n    }\n    Matrix.multiply = multiply;\n    /**\n     * Copy the current matrix from the given one\n     * @param other - defines the source matrix\n     * @returns the current updated matrix\n     */\n    function copy(from, dest) {\n        copyToArray(from, dest._m);\n        _updateIdentityStatus(dest, from.isIdentity, from._isIdentityDirty, from.isIdentity3x2, from._isIdentity3x2Dirty);\n    }\n    Matrix.copy = copy;\n    /**\n     * Populates the given array from the starting index with the current matrix values\n     * @param array - defines the target array\n     * @param offset - defines the offset in the target array where to start storing values\n     * @returns the current matrix\n     */\n    function copyToArray(self, arrayDest, offsetDest = 0) {\n        for (let index = 0; index < 16; index++) {\n            arrayDest[offsetDest + index] = self._m[index];\n        }\n    }\n    Matrix.copyToArray = copyToArray;\n    /**\n     * Sets the given matrix \"result\" with the multiplication result of the current Matrix and the given one\n     * @param other - defines the second operand\n     * @param result - defines the matrix where to store the multiplication\n     * @returns the current matrix\n     */\n    function multiplyToRef(self, other, result) {\n        if (self.isIdentity) {\n            copy(other, result);\n            return;\n        }\n        if (other.isIdentity) {\n            copy(self, result);\n            return;\n        }\n        multiplyToArray(self, other, result._m, 0);\n        _markAsUpdated(result);\n    }\n    Matrix.multiplyToRef = multiplyToRef;\n    /**\n     * Sets the FloatArray \"result\" from the given index \"offset\" with the multiplication of the current matrix and the given one\n     * @param other - defines the second operand\n     * @param result - defines the array where to store the multiplication\n     * @param offset - defines the offset in the target array where to start storing values\n     * @returns the current matrix\n     */\n    function multiplyToArray(self, other, result, offset) {\n        const m = self._m;\n        const otherM = other._m;\n        // tslint:disable:one-variable-per-declaration\n        const tm0 = m[0], tm1 = m[1], tm2 = m[2], tm3 = m[3];\n        const tm4 = m[4], tm5 = m[5], tm6 = m[6], tm7 = m[7];\n        const tm8 = m[8], tm9 = m[9], tm10 = m[10], tm11 = m[11];\n        const tm12 = m[12], tm13 = m[13], tm14 = m[14], tm15 = m[15];\n        const om0 = otherM[0], om1 = otherM[1], om2 = otherM[2], om3 = otherM[3];\n        const om4 = otherM[4], om5 = otherM[5], om6 = otherM[6], om7 = otherM[7];\n        const om8 = otherM[8], om9 = otherM[9], om10 = otherM[10], om11 = otherM[11];\n        const om12 = otherM[12], om13 = otherM[13], om14 = otherM[14], om15 = otherM[15];\n        // tslint:enable:one-variable-per-declaration\n        result[offset] = tm0 * om0 + tm1 * om4 + tm2 * om8 + tm3 * om12;\n        result[offset + 1] = tm0 * om1 + tm1 * om5 + tm2 * om9 + tm3 * om13;\n        result[offset + 2] = tm0 * om2 + tm1 * om6 + tm2 * om10 + tm3 * om14;\n        result[offset + 3] = tm0 * om3 + tm1 * om7 + tm2 * om11 + tm3 * om15;\n        result[offset + 4] = tm4 * om0 + tm5 * om4 + tm6 * om8 + tm7 * om12;\n        result[offset + 5] = tm4 * om1 + tm5 * om5 + tm6 * om9 + tm7 * om13;\n        result[offset + 6] = tm4 * om2 + tm5 * om6 + tm6 * om10 + tm7 * om14;\n        result[offset + 7] = tm4 * om3 + tm5 * om7 + tm6 * om11 + tm7 * om15;\n        result[offset + 8] = tm8 * om0 + tm9 * om4 + tm10 * om8 + tm11 * om12;\n        result[offset + 9] = tm8 * om1 + tm9 * om5 + tm10 * om9 + tm11 * om13;\n        result[offset + 10] = tm8 * om2 + tm9 * om6 + tm10 * om10 + tm11 * om14;\n        result[offset + 11] = tm8 * om3 + tm9 * om7 + tm10 * om11 + tm11 * om15;\n        result[offset + 12] = tm12 * om0 + tm13 * om4 + tm14 * om8 + tm15 * om12;\n        result[offset + 13] = tm12 * om1 + tm13 * om5 + tm14 * om9 + tm15 * om13;\n        result[offset + 14] = tm12 * om2 + tm13 * om6 + tm14 * om10 + tm15 * om14;\n        result[offset + 15] = tm12 * om3 + tm13 * om7 + tm14 * om11 + tm15 * om15;\n    }\n    Matrix.multiplyToArray = multiplyToArray;\n    /**\n     * Check equality between self matrix and a second one\n     * @param value - defines the second matrix to compare\n     * @returns true is the current matrix and the given one values are strictly equal\n     */\n    function equals(self, value) {\n        const other = value;\n        if (!other) {\n            return false;\n        }\n        if (self.isIdentity || other.isIdentity) {\n            if (!self._isIdentityDirty && !other._isIdentityDirty) {\n                return self.isIdentity && other.isIdentity;\n            }\n        }\n        const m = self._m;\n        const om = other._m;\n        return (m[0] === om[0] &&\n            m[1] === om[1] &&\n            m[2] === om[2] &&\n            m[3] === om[3] &&\n            m[4] === om[4] &&\n            m[5] === om[5] &&\n            m[6] === om[6] &&\n            m[7] === om[7] &&\n            m[8] === om[8] &&\n            m[9] === om[9] &&\n            m[10] === om[10] &&\n            m[11] === om[11] &&\n            m[12] === om[12] &&\n            m[13] === om[13] &&\n            m[14] === om[14] &&\n            m[15] === om[15]);\n    }\n    Matrix.equals = equals;\n    /**\n     * Clone the current matrix\n     * @returns a new matrix from the current matrix\n     */\n    function clone(self) {\n        const result = create();\n        copy(self, result);\n        return result;\n    }\n    Matrix.clone = clone;\n    /**\n     * Gets the hash code of the current matrix\n     * @returns the hash code\n     */\n    function getHashCode(self) {\n        let hash = self._m[0] || 0;\n        for (let i = 1; i < 16; i++) {\n            hash = (hash * 397) ^ (self._m[i] || 0);\n        }\n        return hash;\n    }\n    Matrix.getHashCode = getHashCode;\n    /**\n     * Decomposes the current Matrix into a translation, rotation and scaling components\n     * @param scale - defines the scale vector3 given as a reference to update\n     * @param rotation - defines the rotation quaternion given as a reference to update\n     * @param translation - defines the translation vector3 given as a reference to update\n     * @returns true if operation was successful\n     */\n    function decompose(self, scale, rotation, translation) {\n        if (self.isIdentity) {\n            if (translation) {\n                translation = Vector3_1.Vector3.create(0, 0, 0);\n            }\n            if (scale) {\n                scale = Vector3_1.Vector3.create(0, 0, 0);\n            }\n            if (rotation) {\n                rotation = Quaternion_1.Quaternion.create(0, 0, 0, 1);\n            }\n            return true;\n        }\n        const m = self._m;\n        if (translation) {\n            translation = Vector3_1.Vector3.create(m[12], m[13], m[14]);\n        }\n        const usedScale = scale || Vector3_1.Vector3.Zero();\n        usedScale.x = Math.sqrt(m[0] * m[0] + m[1] * m[1] + m[2] * m[2]);\n        usedScale.y = Math.sqrt(m[4] * m[4] + m[5] * m[5] + m[6] * m[6]);\n        usedScale.z = Math.sqrt(m[8] * m[8] + m[9] * m[9] + m[10] * m[10]);\n        if (determinant(self) <= 0) {\n            usedScale.y *= -1;\n        }\n        if (usedScale.x === 0 || usedScale.y === 0 || usedScale.z === 0) {\n            if (rotation) {\n                rotation = Quaternion_1.Quaternion.create(0, 0, 0, 1);\n            }\n            return false;\n        }\n        if (rotation) {\n            // tslint:disable-next-line:one-variable-per-declaration\n            const sx = 1 / usedScale.x, sy = 1 / usedScale.y, sz = 1 / usedScale.z;\n            const tmpMatrix = create();\n            fromValuesToRef(m[0] * sx, m[1] * sx, m[2] * sx, 0.0, m[4] * sy, m[5] * sy, m[6] * sy, 0.0, m[8] * sz, m[9] * sz, m[10] * sz, 0.0, 0.0, 0.0, 0.0, 1.0, tmpMatrix);\n            Quaternion_1.Quaternion.fromRotationMatrixToRef(tmpMatrix, rotation);\n        }\n        return true;\n    }\n    Matrix.decompose = decompose;\n    /**\n     * Gets specific row of the matrix\n     * @param index - defines the number of the row to get\n     * @returns the index-th row of the current matrix as a new Vector4\n     */\n    // TODO\n    // export function getRow(index: number): Nullable<Vector4> {\n    //   if (index < 0 || index > 3) {\n    //     return null\n    //   }\n    //   const i = index * 4\n    //   return new Vector4(\n    //     self._m[i + 0],\n    //     self._m[i + 1],\n    //     self._m[i + 2],\n    //     self._m[i + 3]\n    //   )\n    // }\n    /**\n     * Sets the index-th row of the current matrix to the vector4 values\n     * @param index - defines the number of the row to set\n     * @param row - defines the target vector4\n     * @returns the updated current matrix\n     */\n    // TODO\n    // export function setRow(index: number, row: Vector4): MutableMatrix {\n    //   return setRowFromFloats(index, row.x, row.y, row.z, row.w)\n    // }\n    /**\n     * Sets the index-th row of the current matrix with the given 4 x float values\n     * @param index - defines the row index\n     * @param x - defines the x component to set\n     * @param y - defines the y component to set\n     * @param z - defines the z component to set\n     * @param w - defines the w component to set\n     * @returns the updated current matrix\n     */\n    function setRowFromFloats(self, index, x, y, z, w) {\n        if (index < 0 || index > 3) {\n            return;\n        }\n        const i = index * 4;\n        self._m[i + 0] = x;\n        self._m[i + 1] = y;\n        self._m[i + 2] = z;\n        self._m[i + 3] = w;\n        _markAsUpdated(self);\n    }\n    Matrix.setRowFromFloats = setRowFromFloats;\n    /**\n     * Compute a new matrix set with the current matrix values multiplied by scale (float)\n     * @param scale - defines the scale factor\n     * @returns a new matrix\n     */\n    function scale(self, scale) {\n        const result = create();\n        scaleToRef(self, scale, result);\n        return result;\n    }\n    Matrix.scale = scale;\n    /**\n     * Scale the current matrix values by a factor to a given result matrix\n     * @param scale - defines the scale factor\n     * @param result - defines the matrix to store the result\n     * @returns the current matrix\n     */\n    function scaleToRef(self, scale, result) {\n        for (let index = 0; index < 16; index++) {\n            result._m[index] = self._m[index] * scale;\n        }\n        _markAsUpdated(result);\n    }\n    Matrix.scaleToRef = scaleToRef;\n    /**\n     * Scale the current matrix values by a factor and add the result to a given matrix\n     * @param scale - defines the scale factor\n     * @param result - defines the Matrix to store the result\n     * @returns the current matrix\n     */\n    function scaleAndAddToRef(self, scale, result) {\n        for (let index = 0; index < 16; index++) {\n            result._m[index] += self._m[index] * scale;\n        }\n        _markAsUpdated(result);\n    }\n    Matrix.scaleAndAddToRef = scaleAndAddToRef;\n    /**\n     * Writes to the given matrix a normal matrix, computed from self one (using values from identity matrix for fourth row and column).\n     * @param ref - matrix to store the result\n     */\n    function normalMatrixToRef(self, ref) {\n        const tmp = create();\n        invertToRef(self, tmp);\n        transposeToRef(tmp, ref);\n        const m = ref._m;\n        fromValuesToRef(m[0], m[1], m[2], 0.0, m[4], m[5], m[6], 0.0, m[8], m[9], m[10], 0.0, 0.0, 0.0, 0.0, 1.0, ref);\n    }\n    Matrix.normalMatrixToRef = normalMatrixToRef;\n    /**\n     * Gets only rotation part of the current matrix\n     * @returns a new matrix sets to the extracted rotation matrix from the current one\n     */\n    function getRotationMatrix(self) {\n        const result = create();\n        getRotationMatrixToRef(self, result);\n        return result;\n    }\n    Matrix.getRotationMatrix = getRotationMatrix;\n    /**\n     * Extracts the rotation matrix from the current one and sets it as the given \"result\"\n     * @param result - defines the target matrix to store data to\n     * @returns the current matrix\n     */\n    function getRotationMatrixToRef(self, result) {\n        const scale = Vector3_1.Vector3.Zero();\n        if (!decompose(self, scale)) {\n            result = Identity();\n            return;\n        }\n        const m = self._m;\n        // tslint:disable-next-line:one-variable-per-declaration\n        const sx = 1 / scale.x, sy = 1 / scale.y, sz = 1 / scale.z;\n        fromValuesToRef(m[0] * sx, m[1] * sx, m[2] * sx, 0.0, m[4] * sy, m[5] * sy, m[6] * sy, 0.0, m[8] * sz, m[9] * sz, m[10] * sz, 0.0, 0.0, 0.0, 0.0, 1.0, result);\n    }\n    Matrix.getRotationMatrixToRef = getRotationMatrixToRef;\n    /**\n     * Toggles model matrix from being right handed to left handed in place and vice versa\n     */\n    function toggleModelMatrixHandInPlace(self) {\n        self._m[2] *= -1;\n        self._m[6] *= -1;\n        self._m[8] *= -1;\n        self._m[9] *= -1;\n        self._m[14] *= -1;\n        _markAsUpdated(self);\n    }\n    Matrix.toggleModelMatrixHandInPlace = toggleModelMatrixHandInPlace;\n    /**\n     * Toggles projection matrix from being right handed to left handed in place and vice versa\n     */\n    function toggleProjectionMatrixHandInPlace(self) {\n        self._m[8] *= -1;\n        self._m[9] *= -1;\n        self._m[10] *= -1;\n        self._m[11] *= -1;\n        _markAsUpdated(self);\n    }\n    Matrix.toggleProjectionMatrixHandInPlace = toggleProjectionMatrixHandInPlace;\n    /** @internal */\n    function _updateIdentityStatus(self, isIdentity, isIdentityDirty = false, isIdentity3x2 = false, isIdentity3x2Dirty = true) {\n        self.updateFlag = _updateFlagSeed++;\n        self.isIdentity = isIdentity;\n        self.isIdentity3x2 = isIdentity || isIdentity3x2;\n        self._isIdentityDirty = self.isIdentity ? false : isIdentityDirty;\n        self._isIdentity3x2Dirty = self.isIdentity3x2 ? false : isIdentity3x2Dirty;\n    }\n})(Matrix = exports.Matrix || (exports.Matrix = {}));\n//# sourceMappingURL=Matrix.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quaternion = void 0;\nconst Vector3_1 = require(\"./Vector3\");\nconst Scalar_1 = require(\"./Scalar\");\nconst types_1 = require(\"./types\");\nconst Matrix_1 = require(\"./Matrix\");\n/**\n * @public\n */\nvar Quaternion;\n(function (Quaternion) {\n    /**\n     * Creates a new Quaternion from the given floats\n     * @param x - defines the first component (0 by default)\n     * @param y - defines the second component (0 by default)\n     * @param z - defines the third component (0 by default)\n     * @param w - defines the fourth component (1.0 by default)\n     */\n    function create(\n    /** defines the first component (0 by default) */\n    x = 0.0, \n    /** defines the second component (0 by default) */\n    y = 0.0, \n    /** defines the third component (0 by default) */\n    z = 0.0, \n    /** defines the fourth component (1.0 by default) */\n    w = 1.0) {\n        return { x, y, z, w };\n    }\n    Quaternion.create = create;\n    /**\n     * Returns a new Quaternion as the result of the addition of the two given quaternions.\n     * @param q1 - the first quaternion\n     * @param q2 - the second quaternion\n     * @returns the resulting quaternion\n     */\n    function add(q1, q2) {\n        return { x: q1.x + q2.x, y: q1.y + q2.y, z: q1.z + q2.z, w: q1.w + q2.w };\n    }\n    Quaternion.add = add;\n    /**\n     * Creates a new rotation from the given Euler float angles (y, x, z) and stores it in the target quaternion\n     * @param yaw - defines the rotation around Y axis\n     * @param pitch - defines the rotation around X axis\n     * @param roll - defines the rotation around Z axis\n     * @param result - defines the target quaternion\n     */\n    function rotationYawPitchRoll(yaw, pitch, roll) {\n        // Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\n        const halfPitch = pitch * 0.5;\n        const halfYaw = yaw * 0.5;\n        const halfRoll = roll * 0.5;\n        const c1 = Math.cos(halfPitch);\n        const c2 = Math.cos(halfYaw);\n        const c3 = Math.cos(halfRoll);\n        const s1 = Math.sin(halfPitch);\n        const s2 = Math.sin(halfYaw);\n        const s3 = Math.sin(halfRoll);\n        return create(c2 * s1 * c3 + s2 * c1 * s3, s2 * c1 * c3 - c2 * s1 * s3, c2 * c1 * s3 - s2 * s1 * c3, c2 * c1 * c3 + s2 * s1 * s3);\n    }\n    Quaternion.rotationYawPitchRoll = rotationYawPitchRoll;\n    /**\n     * Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis.\n     * @param x - the rotation on the x axis in euler degrees\n     * @param y - the rotation on the y axis in euler degrees\n     * @param z - the rotation on the z axis in euler degrees\n     */\n    function euler(x, y, z) {\n        return rotationYawPitchRoll(y * types_1.DEG2RAD, x * types_1.DEG2RAD, z * types_1.DEG2RAD);\n    }\n    Quaternion.euler = euler;\n    /**\n     * Gets length of current quaternion\n     * @returns the quaternion length (float)\n     */\n    function length(q) {\n        return Math.sqrt(lengthSquared(q));\n    }\n    Quaternion.length = length;\n    /**\n     * Gets length of current quaternion\n     * @returns the quaternion length (float)\n     */\n    function lengthSquared(q) {\n        return q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w;\n    }\n    Quaternion.lengthSquared = lengthSquared;\n    /**\n     * Returns the dot product (float) between the quaternions \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @returns the dot product\n     */\n    function dot(left, right) {\n        return (left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w);\n    }\n    Quaternion.dot = dot;\n    /**\n     * Returns the angle in degrees between two rotations a and b.\n     * @param quat1 - defines the first quaternion\n     * @param quat2 - defines the second quaternion\n     */\n    function angle(quat1, quat2) {\n        const dotVal = dot(quat1, quat2);\n        return Math.acos(Math.min(Math.abs(dotVal), 1)) * 2 * types_1.RAD2DEG;\n    }\n    Quaternion.angle = angle;\n    /**\n     * The from quaternion is rotated towards to by an angular step of maxDegreesDelta.\n     * @param from - defines the first quaternion\n     * @param to - defines the second quaternion\n     * @param maxDegreesDelta - the interval step\n     */\n    function rotateTowards(from, to, maxDegreesDelta) {\n        const num = angle(from, to);\n        if (num === 0) {\n            return to;\n        }\n        const t = Math.min(1, maxDegreesDelta / num);\n        return slerp(from, to, t);\n    }\n    Quaternion.rotateTowards = rotateTowards;\n    /**\n     * Creates a rotation with the specified forward and upwards directions.\n     * @param forward - the direction to look in\n     * @param up - the vector that defines in which direction up is\n     */\n    function lookRotation(forward, up = { x: 0.0, y: 1.0, z: 0.0 }) {\n        const forwardNew = Vector3_1.Vector3.normalize(forward);\n        const right = Vector3_1.Vector3.normalize(Vector3_1.Vector3.cross(up, forwardNew));\n        const upNew = Vector3_1.Vector3.cross(forwardNew, right);\n        const m00 = right.x;\n        const m01 = right.y;\n        const m02 = right.z;\n        const m10 = upNew.x;\n        const m11 = upNew.y;\n        const m12 = upNew.z;\n        const m20 = forwardNew.x;\n        const m21 = forwardNew.y;\n        const m22 = forwardNew.z;\n        const num8 = m00 + m11 + m22;\n        const quaternion = create();\n        if (num8 > 0) {\n            let num = Math.sqrt(num8 + 1);\n            quaternion.w = num * 0.5;\n            num = 0.5 / num;\n            quaternion.x = (m12 - m21) * num;\n            quaternion.y = (m20 - m02) * num;\n            quaternion.z = (m01 - m10) * num;\n            return quaternion;\n        }\n        if (m00 >= m11 && m00 >= m22) {\n            const num7 = Math.sqrt(1 + m00 - m11 - m22);\n            const num4 = 0.5 / num7;\n            quaternion.x = 0.5 * num7;\n            quaternion.y = (m01 + m10) * num4;\n            quaternion.z = (m02 + m20) * num4;\n            quaternion.w = (m12 - m21) * num4;\n            return quaternion;\n        }\n        if (m11 > m22) {\n            const num6 = Math.sqrt(1 + m11 - m00 - m22);\n            const num3 = 0.5 / num6;\n            quaternion.x = (m10 + m01) * num3;\n            quaternion.y = 0.5 * num6;\n            quaternion.z = (m21 + m12) * num3;\n            quaternion.w = (m20 - m02) * num3;\n            return quaternion;\n        }\n        const num5 = Math.sqrt(1 + m22 - m00 - m11);\n        const num2 = 0.5 / num5;\n        quaternion.x = (m20 + m02) * num2;\n        quaternion.y = (m21 + m12) * num2;\n        quaternion.z = 0.5 * num5;\n        quaternion.w = (m01 - m10) * num2;\n        return quaternion;\n    }\n    Quaternion.lookRotation = lookRotation;\n    /**\n     * Normalize in place the current quaternion\n     * @returns the current updated quaternion\n     */\n    function normalize(q) {\n        const qLength = 1.0 / length(q);\n        return create(q.x * qLength, q.y * qLength, q.z * qLength, q.w * qLength);\n    }\n    Quaternion.normalize = normalize;\n    /**\n     * Creates a rotation which rotates from fromDirection to toDirection.\n     * @param from - defines the first direction Vector\n     * @param to - defines the target direction Vector\n     */\n    function fromToRotation(from, to, up = Vector3_1.Vector3.Up()) {\n        // Unity-based calculations implemented from https://forum.unity.com/threads/quaternion-lookrotation-around-an-axis.608470/#post-4069888\n        const v0 = Vector3_1.Vector3.normalize(from);\n        const v1 = Vector3_1.Vector3.normalize(to);\n        const a = Vector3_1.Vector3.cross(v0, v1);\n        const w = Math.sqrt(Vector3_1.Vector3.lengthSquared(v0) * Vector3_1.Vector3.lengthSquared(v1)) +\n            Vector3_1.Vector3.dot(v0, v1);\n        if (Vector3_1.Vector3.lengthSquared(a) < 0.0001) {\n            // the vectors are parallel, check w to find direction\n            // if w is 0 then values are opposite, and we sould rotate 180 degrees around the supplied axis\n            // otherwise the vectors in the same direction and no rotation should occur\n            return Math.abs(w) < 0.0001\n                ? normalize(create(up.x, up.y, up.z, 0))\n                : Identity();\n        }\n        else {\n            return normalize(create(a.x, a.y, a.z, w));\n        }\n    }\n    Quaternion.fromToRotation = fromToRotation;\n    /**\n     * Creates an identity quaternion\n     * @returns - the identity quaternion\n     */\n    function Identity() {\n        return create(0.0, 0.0, 0.0, 1.0);\n    }\n    Quaternion.Identity = Identity;\n    /**\n     * Gets or sets the euler angle representation of the rotation.\n     * Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\n     */\n    function eulerAngles(q) {\n        const out = Vector3_1.Vector3.create();\n        // if the input quaternion is normalized, this is exactly one. Otherwise, this acts as a correction factor for the quaternion's not-normalizedness\n        const unit = q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w;\n        // q will have a magnitude of 0.5 or greater if and only if q is a singularity case\n        const test = q.x * q.w - q.y * q.z;\n        if (test > 0.4995 * unit) {\n            // singularity at north pole\n            out.x = Math.PI / 2;\n            out.y = 2 * Math.atan2(q.y, q.x);\n            out.z = 0;\n        }\n        else if (test < -0.4995 * unit) {\n            // singularity at south pole\n            out.x = -Math.PI / 2;\n            out.y = -2 * Math.atan2(q.y, q.x);\n            out.z = 0;\n        }\n        else {\n            // no singularity - q is the majority of cases\n            out.x = Math.asin(2 * (q.w * q.x - q.y * q.z));\n            out.y = Math.atan2(2 * q.w * q.y + 2 * q.z * q.x, 1 - 2 * (q.x * q.x + q.y * q.y));\n            out.z = Math.atan2(2 * q.w * q.z + 2 * q.x * q.y, 1 - 2 * (q.z * q.z + q.x * q.x));\n        }\n        out.x *= types_1.RAD2DEG;\n        out.y *= types_1.RAD2DEG;\n        out.z *= types_1.RAD2DEG;\n        // ensure the degree values are between 0 and 360\n        out.x = Scalar_1.Scalar.repeat(out.x, 360);\n        out.y = Scalar_1.Scalar.repeat(out.y, 360);\n        out.z = Scalar_1.Scalar.repeat(out.z, 360);\n        return out;\n    }\n    Quaternion.eulerAngles = eulerAngles;\n    /**\n     * Creates a new rotation from the given Euler float angles (y, x, z) and stores it in the target quaternion\n     * @param yaw - defines the rotation around Y axis\n     * @param pitch - defines the rotation around X axis\n     * @param roll - defines the rotation around Z axis\n     * @param result - defines the target quaternion\n     */\n    function rotationYawPitchRollToRef(yaw, pitch, roll, result) {\n        // Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\n        const halfPitch = pitch * 0.5;\n        const halfYaw = yaw * 0.5;\n        const halfRoll = roll * 0.5;\n        const c1 = Math.cos(halfPitch);\n        const c2 = Math.cos(halfYaw);\n        const c3 = Math.cos(halfRoll);\n        const s1 = Math.sin(halfPitch);\n        const s2 = Math.sin(halfYaw);\n        const s3 = Math.sin(halfRoll);\n        result.x = c2 * s1 * c3 + s2 * c1 * s3;\n        result.y = s2 * c1 * c3 - c2 * s1 * s3;\n        result.z = c2 * c1 * s3 - s2 * s1 * c3;\n        result.w = c2 * c1 * c3 + s2 * s1 * s3;\n    }\n    Quaternion.rotationYawPitchRollToRef = rotationYawPitchRollToRef;\n    /**\n     * Updates the given quaternion with the given rotation matrix values\n     * @param matrix - defines the source matrix\n     * @param result - defines the target quaternion\n     */\n    function fromRotationMatrixToRef(matrix, result) {\n        const data = matrix._m;\n        // tslint:disable:one-variable-per-declaration\n        const m11 = data[0], m12 = data[4], m13 = data[8];\n        const m21 = data[1], m22 = data[5], m23 = data[9];\n        const m31 = data[2], m32 = data[6], m33 = data[10];\n        // tslint:enable:one-variable-per-declaration\n        const trace = m11 + m22 + m33;\n        let s;\n        if (trace > 0) {\n            s = 0.5 / Math.sqrt(trace + 1.0);\n            result.w = 0.25 / s;\n            result.x = (m32 - m23) * s;\n            result.y = (m13 - m31) * s;\n            result.z = (m21 - m12) * s;\n        }\n        else if (m11 > m22 && m11 > m33) {\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n            result.w = (m32 - m23) / s;\n            result.x = 0.25 * s;\n            result.y = (m12 + m21) / s;\n            result.z = (m13 + m31) / s;\n        }\n        else if (m22 > m33) {\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n            result.w = (m13 - m31) / s;\n            result.x = (m12 + m21) / s;\n            result.y = 0.25 * s;\n            result.z = (m23 + m32) / s;\n        }\n        else {\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n            result.w = (m21 - m12) / s;\n            result.x = (m13 + m31) / s;\n            result.y = (m23 + m32) / s;\n            result.z = 0.25 * s;\n        }\n    }\n    Quaternion.fromRotationMatrixToRef = fromRotationMatrixToRef;\n    /**\n     * Interpolates between two quaternions\n     * @param left - defines first quaternion\n     * @param right - defines second quaternion\n     * @param amount - defines the gradient to use\n     * @returns the new interpolated quaternion\n     */\n    function slerp(left, right, amount) {\n        const result = Quaternion.Identity();\n        Quaternion.slerpToRef(left, right, amount, result);\n        return result;\n    }\n    Quaternion.slerp = slerp;\n    /**\n     * Interpolates between two quaternions and stores it into a target quaternion\n     * @param left - defines first quaternion\n     * @param right - defines second quaternion\n     * @param amount - defines the gradient to use\n     * @param result - defines the target quaternion\n     */\n    function slerpToRef(left, right, amount, result) {\n        let num2;\n        let num3;\n        let num4 = left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\n        let flag = false;\n        if (num4 < 0) {\n            flag = true;\n            num4 = -num4;\n        }\n        if (num4 > 0.999999) {\n            num3 = 1 - amount;\n            num2 = flag ? -amount : amount;\n        }\n        else {\n            const num5 = Math.acos(num4);\n            const num6 = 1.0 / Math.sin(num5);\n            num3 = Math.sin((1.0 - amount) * num5) * num6;\n            num2 = flag\n                ? -Math.sin(amount * num5) * num6\n                : Math.sin(amount * num5) * num6;\n        }\n        result.x = num3 * left.x + num2 * right.x;\n        result.y = num3 * left.y + num2 * right.y;\n        result.z = num3 * left.z + num2 * right.z;\n        result.w = num3 * left.w + num2 * right.w;\n    }\n    Quaternion.slerpToRef = slerpToRef;\n    /**\n     * Multiplies two quaternions\n     * @param self - defines the first operand\n     * @param q1 - defines the second operand\n     * @returns a new quaternion set as the multiplication result of the self one with the given one \"q1\"\n     */\n    function multiply(self, q1) {\n        const result = create(0, 0, 0, 1.0);\n        multiplyToRef(self, q1, result);\n        return result;\n    }\n    Quaternion.multiply = multiply;\n    /**\n     * Sets the given \"result\" as the the multiplication result of the self one with the given one \"q1\"\n     * @param self - defines the first operand\n     * @param q1 - defines the second operand\n     * @param result - defines the target quaternion\n     * @returns the current quaternion\n     */\n    function multiplyToRef(self, q1, result) {\n        result.x = self.x * q1.w + self.y * q1.z - self.z * q1.y + self.w * q1.x;\n        result.y = -self.x * q1.z + self.y * q1.w + self.z * q1.x + self.w * q1.y;\n        result.z = self.x * q1.y - self.y * q1.x + self.z * q1.w + self.w * q1.z;\n        result.w = -self.x * q1.x - self.y * q1.y - self.z * q1.z + self.w * q1.w;\n    }\n    Quaternion.multiplyToRef = multiplyToRef;\n    function angleAxis(degress, axis) {\n        if (Vector3_1.Vector3.lengthSquared(axis) === 0) {\n            return Quaternion.Identity();\n        }\n        const result = Identity();\n        let radians = degress * types_1.DEG2RAD;\n        radians *= 0.5;\n        const a2 = Vector3_1.Vector3.normalize(axis);\n        Vector3_1.Vector3.scaleToRef(a2, Math.sin(radians), a2);\n        result.x = a2.x;\n        result.y = a2.y;\n        result.z = a2.z;\n        result.w = Math.cos(radians);\n        return normalize(result);\n    }\n    Quaternion.angleAxis = angleAxis;\n    /**\n     * Creates a new quaternion containing the rotation value to reach the target (axis1, axis2, axis3) orientation as a rotated XYZ system (axis1, axis2 and axis3 are normalized during this operation)\n     * @param axis1 - defines the first axis\n     * @param axis2 - defines the second axis\n     * @param axis3 - defines the third axis\n     * @returns the new quaternion\n     */\n    function rotationQuaternionFromAxis(axis1, axis2, axis3) {\n        const quat = Quaternion.create(0.0, 0.0, 0.0, 0.0);\n        rotationQuaternionFromAxisToRef(axis1, axis2, axis3, quat);\n        return quat;\n    }\n    Quaternion.rotationQuaternionFromAxis = rotationQuaternionFromAxis;\n    /**\n     * Creates a rotation value to reach the target (axis1, axis2, axis3) orientation as a rotated XYZ system (axis1, axis2 and axis3 are normalized during this operation) and stores it in the target quaternion\n     * @param axis1 - defines the first axis\n     * @param axis2 - defines the second axis\n     * @param axis3 - defines the third axis\n     * @param ref - defines the target quaternion\n     */\n    function rotationQuaternionFromAxisToRef(axis1, axis2, axis3, ref) {\n        const rotMat = Matrix_1.Matrix.create();\n        Matrix_1.Matrix.fromXYZAxesToRef(Vector3_1.Vector3.normalize(axis1), Vector3_1.Vector3.normalize(axis2), Vector3_1.Vector3.normalize(axis3), rotMat);\n        Quaternion.fromRotationMatrixToRef(rotMat, ref);\n    }\n    Quaternion.rotationQuaternionFromAxisToRef = rotationQuaternionFromAxisToRef;\n    /**\n     * Returns a zero filled quaternion\n     */\n    function Zero() {\n        return create(0.0, 0.0, 0.0, 0.0);\n    }\n    Quaternion.Zero = Zero;\n})(Quaternion = exports.Quaternion || (exports.Quaternion = {}));\n//# sourceMappingURL=Quaternion.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Quaternion\"), exports);\n__exportStar(require(\"./Vector3\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBAnimator {\n  states: PBAnimationState[]\n}\n\nexport interface PBAnimationState {\n  name: string\n  clip: string\n  playing?: boolean | undefined\n  /** default=1.0s */\n  weight?: number | undefined\n  /** default=1.0 */\n  speed?: number | undefined\n  /** default=true */\n  loop?: boolean | undefined\n  shouldReset?: boolean | undefined\n}\n\nfunction createBasePBAnimator(): PBAnimator {\n  return { states: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBAnimator = {\n  encode(message: PBAnimator, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.states) {\n      PBAnimationState.encode(v!, writer.uint32(10).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAnimator {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAnimator()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.states.push(PBAnimationState.decode(reader, reader.uint32()))\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBAnimationState(): PBAnimationState {\n  return {\n    name: '',\n    clip: '',\n    playing: undefined,\n    weight: undefined,\n    speed: undefined,\n    loop: undefined,\n    shouldReset: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBAnimationState = {\n  encode(message: PBAnimationState, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.name !== '') {\n      writer.uint32(10).string(message.name)\n    }\n    if (message.clip !== '') {\n      writer.uint32(18).string(message.clip)\n    }\n    if (message.playing !== undefined) {\n      writer.uint32(24).bool(message.playing)\n    }\n    if (message.weight !== undefined) {\n      writer.uint32(37).float(message.weight)\n    }\n    if (message.speed !== undefined) {\n      writer.uint32(45).float(message.speed)\n    }\n    if (message.loop !== undefined) {\n      writer.uint32(48).bool(message.loop)\n    }\n    if (message.shouldReset !== undefined) {\n      writer.uint32(56).bool(message.shouldReset)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAnimationState {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAnimationState()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string()\n          break\n        case 2:\n          message.clip = reader.string()\n          break\n        case 3:\n          message.playing = reader.bool()\n          break\n        case 4:\n          message.weight = reader.float()\n          break\n        case 5:\n          message.speed = reader.float()\n          break\n        case 6:\n          message.loop = reader.bool()\n          break\n        case 7:\n          message.shouldReset = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAnimator } from './pb/Animator.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1042\n\n/**\n * @internal\n */\nexport const AnimatorSchema: ISchema<PBAnimator> = {\n  serialize(value: PBAnimator, builder: ByteBuffer): void {\n    const writer = PBAnimator.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAnimator {\n    return PBAnimator.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAnimator {\n    // TODO: this is a hack.\n    return PBAnimator.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBAudioSource {\n  playing?: boolean | undefined\n  /** default=1.0f */\n  volume?: number | undefined\n  loop?: boolean | undefined\n  /** default=1.0f */\n  pitch?: number | undefined\n  audioClipUrl: string\n}\n\nfunction createBasePBAudioSource(): PBAudioSource {\n  return { playing: undefined, volume: undefined, loop: undefined, pitch: undefined, audioClipUrl: '' }\n}\n\n\n/**\n * @internal\n */\nexport const PBAudioSource = {\n  encode(message: PBAudioSource, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.playing !== undefined) {\n      writer.uint32(8).bool(message.playing)\n    }\n    if (message.volume !== undefined) {\n      writer.uint32(21).float(message.volume)\n    }\n    if (message.loop !== undefined) {\n      writer.uint32(24).bool(message.loop)\n    }\n    if (message.pitch !== undefined) {\n      writer.uint32(37).float(message.pitch)\n    }\n    if (message.audioClipUrl !== '') {\n      writer.uint32(42).string(message.audioClipUrl)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAudioSource {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAudioSource()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.playing = reader.bool()\n          break\n        case 2:\n          message.volume = reader.float()\n          break\n        case 3:\n          message.loop = reader.bool()\n          break\n        case 4:\n          message.pitch = reader.float()\n          break\n        case 5:\n          message.audioClipUrl = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAudioSource } from './pb/AudioSource.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1020\n\n/**\n * @internal\n */\nexport const AudioSourceSchema: ISchema<PBAudioSource> = {\n  serialize(value: PBAudioSource, builder: ByteBuffer): void {\n    const writer = PBAudioSource.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAudioSource {\n    return PBAudioSource.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAudioSource {\n    // TODO: this is a hack.\n    return PBAudioSource.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum AvatarAnchorPoint {\n  POSITION = 0,\n  NAME_TAG = 1,\n  LEFT_HAND = 2,\n  RIGHT_HAND = 3,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBAvatarAttach {\n  avatarId: string\n  anchorPointId: AvatarAnchorPoint\n}\n\nfunction createBasePBAvatarAttach(): PBAvatarAttach {\n  return { avatarId: '', anchorPointId: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBAvatarAttach = {\n  encode(message: PBAvatarAttach, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.avatarId !== '') {\n      writer.uint32(10).string(message.avatarId)\n    }\n    if (message.anchorPointId !== 0) {\n      writer.uint32(16).int32(message.anchorPointId)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarAttach {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAvatarAttach()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.avatarId = reader.string()\n          break\n        case 2:\n          message.anchorPointId = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAvatarAttach } from './pb/AvatarAttach.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1073\n\n/**\n * @internal\n */\nexport const AvatarAttachSchema: ISchema<PBAvatarAttach> = {\n  serialize(value: PBAvatarAttach, builder: ByteBuffer): void {\n    const writer = PBAvatarAttach.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAvatarAttach {\n    return PBAvatarAttach.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAvatarAttach {\n    // TODO: this is a hack.\n    return PBAvatarAttach.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface Vector3 {\n  x: number\n  y: number\n  z: number\n}\n\nfunction createBaseVector3(): Vector3 {\n  return { x: 0, y: 0, z: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const Vector3 = {\n  encode(message: Vector3, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.x !== 0) {\n      writer.uint32(13).float(message.x)\n    }\n    if (message.y !== 0) {\n      writer.uint32(21).float(message.y)\n    }\n    if (message.z !== 0) {\n      writer.uint32(29).float(message.z)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Vector3 {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBaseVector3()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.x = reader.float()\n          break\n        case 2:\n          message.y = reader.float()\n          break\n        case 3:\n          message.z = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","/* eslint-disable */\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum AvatarModifier {\n  HIDE_AVATARS = 0,\n  DISABLE_PASSPORTS = 1,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBAvatarModifierArea {\n  area: Vector3 | undefined\n  excludeIds: string[]\n  modifiers: AvatarModifier[]\n}\n\nfunction createBasePBAvatarModifierArea(): PBAvatarModifierArea {\n  return { area: undefined, excludeIds: [], modifiers: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBAvatarModifierArea = {\n  encode(message: PBAvatarModifierArea, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.area !== undefined) {\n      Vector3.encode(message.area, writer.uint32(10).fork()).ldelim()\n    }\n    for (const v of message.excludeIds) {\n      writer.uint32(18).string(v!)\n    }\n    writer.uint32(26).fork()\n    for (const v of message.modifiers) {\n      writer.int32(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarModifierArea {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAvatarModifierArea()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.area = Vector3.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.excludeIds.push(reader.string())\n          break\n        case 3:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.modifiers.push(reader.int32() as any)\n            }\n          } else {\n            message.modifiers.push(reader.int32() as any)\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAvatarModifierArea } from './pb/AvatarModifierArea.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1070\n\n/**\n * @internal\n */\nexport const AvatarModifierAreaSchema: ISchema<PBAvatarModifierArea> = {\n  serialize(value: PBAvatarModifierArea, builder: ByteBuffer): void {\n    const writer = PBAvatarModifierArea.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAvatarModifierArea {\n    return PBAvatarModifierArea.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAvatarModifierArea {\n    // TODO: this is a hack.\n    return PBAvatarModifierArea.decode(new Uint8Array())\n  }\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface Color3 {\n  r: number\n  g: number\n  b: number\n}\n\nfunction createBaseColor3(): Color3 {\n  return { r: 0, g: 0, b: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const Color3 = {\n  encode(message: Color3, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.r !== 0) {\n      writer.uint32(13).float(message.r)\n    }\n    if (message.g !== 0) {\n      writer.uint32(21).float(message.g)\n    }\n    if (message.b !== 0) {\n      writer.uint32(29).float(message.b)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Color3 {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBaseColor3()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.r = reader.float()\n          break\n        case 2:\n          message.g = reader.float()\n          break\n        case 3:\n          message.b = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","/* eslint-disable */\nimport Long from 'long'\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBAvatarShape {\n  id: string\n  /** default = NPC */\n  name?: string | undefined\n  /** default = urn:decentraland:off-chain:base-avatars:BaseFemale */\n  bodyShape?: string | undefined\n  /** default = Color3(R = 0.6f, G = 0.462f, B = 0.356f) */\n  skinColor?: Color3 | undefined\n  /** default = Color3(R = 0.283f, G = 0.142f, B = 0f) */\n  hairColor?: Color3 | undefined\n  /** default = Color3(R = 0.6f, G = 0.462f, B = 0.356f) */\n  eyeColor?: Color3 | undefined\n  expressionTriggerId?: string | undefined\n  /** default = timestamp */\n  expressionTriggerTimestamp?: number | undefined\n  talking?: boolean | undefined\n  /**\n   * default = [\"urn:decentraland:off-chain:base-avatars:f_eyes_00\",\n   *  \"urn:decentraland:off-chain:base-avatars:f_eyebrows_00\",\n   *  \"urn:decentraland:off-chain:base-avatars:f_mouth_00\"\n   *  \"urn:decentraland:off-chain:base-avatars:standard_hair\",\n   *  \"urn:decentraland:off-chain:base-avatars:f_simple_yellow_tshirt\",\n   *  \"urn:decentraland:off-chain:base-avatars:f_brown_trousers\",\n   *  \"urn:decentraland:off-chain:base-avatars:bun_shoes\"]\n   */\n  wearables: string[]\n}\n\nfunction createBasePBAvatarShape(): PBAvatarShape {\n  return {\n    id: '',\n    name: undefined,\n    bodyShape: undefined,\n    skinColor: undefined,\n    hairColor: undefined,\n    eyeColor: undefined,\n    expressionTriggerId: undefined,\n    expressionTriggerTimestamp: undefined,\n    talking: undefined,\n    wearables: []\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBAvatarShape = {\n  encode(message: PBAvatarShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.id !== '') {\n      writer.uint32(10).string(message.id)\n    }\n    if (message.name !== undefined) {\n      writer.uint32(18).string(message.name)\n    }\n    if (message.bodyShape !== undefined) {\n      writer.uint32(26).string(message.bodyShape)\n    }\n    if (message.skinColor !== undefined) {\n      Color3.encode(message.skinColor, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.hairColor !== undefined) {\n      Color3.encode(message.hairColor, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.eyeColor !== undefined) {\n      Color3.encode(message.eyeColor, writer.uint32(50).fork()).ldelim()\n    }\n    if (message.expressionTriggerId !== undefined) {\n      writer.uint32(58).string(message.expressionTriggerId)\n    }\n    if (message.expressionTriggerTimestamp !== undefined) {\n      writer.uint32(64).int64(message.expressionTriggerTimestamp)\n    }\n    if (message.talking !== undefined) {\n      writer.uint32(72).bool(message.talking)\n    }\n    for (const v of message.wearables) {\n      writer.uint32(82).string(v!)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAvatarShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string()\n          break\n        case 2:\n          message.name = reader.string()\n          break\n        case 3:\n          message.bodyShape = reader.string()\n          break\n        case 4:\n          message.skinColor = Color3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.hairColor = Color3.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.eyeColor = Color3.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.expressionTriggerId = reader.string()\n          break\n        case 8:\n          message.expressionTriggerTimestamp = longToNumber(reader.int64() as Long)\n          break\n        case 9:\n          message.talking = reader.bool()\n          break\n        case 10:\n          message.wearables.push(reader.string())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\ndeclare var self: any | undefined\ndeclare var window: any | undefined\ndeclare var global: any | undefined\nvar globalThis: any = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis\n  if (typeof self !== 'undefined') return self\n  if (typeof window !== 'undefined') return window\n  if (typeof global !== 'undefined') return global\n  throw 'Unable to locate global object'\n})()\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER')\n  }\n  return long.toNumber()\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any\n  _m0.configure()\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAvatarShape } from './pb/AvatarShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1080\n\n/**\n * @internal\n */\nexport const AvatarShapeSchema: ISchema<PBAvatarShape> = {\n  serialize(value: PBAvatarShape, builder: ByteBuffer): void {\n    const writer = PBAvatarShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAvatarShape {\n    return PBAvatarShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAvatarShape {\n    // TODO: this is a hack.\n    return PBAvatarShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBBillboard {\n  /** default=true */\n  x?: boolean | undefined\n  /** default=true */\n  y?: boolean | undefined\n  /** default=true */\n  z?: boolean | undefined\n}\n\nfunction createBasePBBillboard(): PBBillboard {\n  return { x: undefined, y: undefined, z: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBBillboard = {\n  encode(message: PBBillboard, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.x !== undefined) {\n      writer.uint32(8).bool(message.x)\n    }\n    if (message.y !== undefined) {\n      writer.uint32(16).bool(message.y)\n    }\n    if (message.z !== undefined) {\n      writer.uint32(24).bool(message.z)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBBillboard {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBBillboard()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.x = reader.bool()\n          break\n        case 2:\n          message.y = reader.bool()\n          break\n        case 3:\n          message.z = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBBillboard } from './pb/Billboard.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1090\n\n/**\n * @internal\n */\nexport const BillboardSchema: ISchema<PBBillboard> = {\n  serialize(value: PBBillboard, builder: ByteBuffer): void {\n    const writer = PBBillboard.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBBillboard {\n    return PBBillboard.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBBillboard {\n    // TODO: this is a hack.\n    return PBBillboard.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBBoxShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  uvs: number[]\n}\n\nfunction createBasePBBoxShape(): PBBoxShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined, uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBBoxShape = {\n  encode(message: PBBoxShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    writer.uint32(34).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBBoxShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBBoxShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBBoxShape } from './pb/BoxShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1013\n\n/**\n * @internal\n */\nexport const BoxShapeSchema: ISchema<PBBoxShape> = {\n  serialize(value: PBBoxShape, builder: ByteBuffer): void {\n    const writer = PBBoxShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBBoxShape {\n    return PBBoxShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBBoxShape {\n    // TODO: this is a hack.\n    return PBBoxShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { CameraModeValue } from './common/CameraModeValue.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBCameraMode {\n  mode: CameraModeValue\n}\n\nfunction createBasePBCameraMode(): PBCameraMode {\n  return { mode: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBCameraMode = {\n  encode(message: PBCameraMode, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBCameraMode {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBCameraMode()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBCameraMode } from './pb/CameraMode.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1072\n\n/**\n * @internal\n */\nexport const CameraModeSchema: ISchema<PBCameraMode> = {\n  serialize(value: PBCameraMode, builder: ByteBuffer): void {\n    const writer = PBCameraMode.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBCameraMode {\n    return PBCameraMode.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBCameraMode {\n    // TODO: this is a hack.\n    return PBCameraMode.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { CameraModeValue } from './common/CameraModeValue.gen'\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBCameraModeArea {\n  area: Vector3 | undefined\n  mode: CameraModeValue\n}\n\nfunction createBasePBCameraModeArea(): PBCameraModeArea {\n  return { area: undefined, mode: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBCameraModeArea = {\n  encode(message: PBCameraModeArea, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.area !== undefined) {\n      Vector3.encode(message.area, writer.uint32(10).fork()).ldelim()\n    }\n    if (message.mode !== 0) {\n      writer.uint32(16).int32(message.mode)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBCameraModeArea {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBCameraModeArea()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.area = Vector3.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.mode = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBCameraModeArea } from './pb/CameraModeArea.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1071\n\n/**\n * @internal\n */\nexport const CameraModeAreaSchema: ISchema<PBCameraModeArea> = {\n  serialize(value: PBCameraModeArea, builder: ByteBuffer): void {\n    const writer = PBCameraModeArea.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBCameraModeArea {\n    return PBCameraModeArea.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBCameraModeArea {\n    // TODO: this is a hack.\n    return PBCameraModeArea.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBCylinderShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  /** default=1.0 */\n  radiusTop?: number | undefined\n  /** default=1.0 */\n  radiusBottom?: number | undefined\n}\n\nfunction createBasePBCylinderShape(): PBCylinderShape {\n  return {\n    withCollisions: undefined,\n    isPointerBlocker: undefined,\n    visible: undefined,\n    radiusTop: undefined,\n    radiusBottom: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBCylinderShape = {\n  encode(message: PBCylinderShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    if (message.radiusTop !== undefined) {\n      writer.uint32(37).float(message.radiusTop)\n    }\n    if (message.radiusBottom !== undefined) {\n      writer.uint32(45).float(message.radiusBottom)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBCylinderShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBCylinderShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          message.radiusTop = reader.float()\n          break\n        case 5:\n          message.radiusBottom = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBCylinderShape } from './pb/CylinderShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1016\n\n/**\n * @internal\n */\nexport const CylinderShapeSchema: ISchema<PBCylinderShape> = {\n  serialize(value: PBCylinderShape, builder: ByteBuffer): void {\n    const writer = PBCylinderShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBCylinderShape {\n    return PBCylinderShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBCylinderShape {\n    // TODO: this is a hack.\n    return PBCylinderShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBGLTFShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  src: string\n}\n\nfunction createBasePBGLTFShape(): PBGLTFShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined, src: '' }\n}\n\n\n/**\n * @internal\n */\nexport const PBGLTFShape = {\n  encode(message: PBGLTFShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    if (message.src !== '') {\n      writer.uint32(34).string(message.src)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBGLTFShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBGLTFShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          message.src = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBGLTFShape } from './pb/GLTFShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1041\n\n/**\n * @internal\n */\nexport const GLTFShapeSchema: ISchema<PBGLTFShape> = {\n  serialize(value: PBGLTFShape, builder: ByteBuffer): void {\n    const writer = PBGLTFShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBGLTFShape {\n    return PBGLTFShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBGLTFShape {\n    // TODO: this is a hack.\n    return PBGLTFShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum TextureWrapMode {\n  Repeat = 0,\n  Clamp = 1,\n  Mirror = 2,\n  MirrorOnce = 3,\n  UNRECOGNIZED = -1\n}\n\nexport const enum FilterMode {\n  Point = 0,\n  Bilinear = 1,\n  Trilinear = 2,\n  UNRECOGNIZED = -1\n}\n\nexport const enum TransparencyMode {\n  Opaque = 0,\n  AlphaTest = 1,\n  AlphaBlend = 2,\n  AlphaTestAndAlphaBlend = 3,\n  Auto = 4,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBMaterial {\n  /** default = null */\n  texture?: PBMaterial_Texture | undefined\n  /** default = 0.5. range value: from 0 to 1 */\n  alphaTest?: number | undefined\n  /** default =  true */\n  castShadows?: boolean | undefined\n  /** default = null */\n  alphaTexture?: PBMaterial_Texture | undefined\n  /** default = null */\n  emissiveTexture?: PBMaterial_Texture | undefined\n  /** default = null */\n  bumpTexture?: PBMaterial_Texture | undefined\n  /** default = white; */\n  albedoColor?: Color3 | undefined\n  /** default = black; */\n  emissiveColor?: Color3 | undefined\n  /** default = white; */\n  reflectivityColor?: Color3 | undefined\n  /** default = TransparencyMode.Auto */\n  transparencyMode?: TransparencyMode | undefined\n  /** default = 0.5 */\n  metallic?: number | undefined\n  /** default = 0.5 */\n  roughness?: number | undefined\n  /** default = 1 */\n  glossiness?: number | undefined\n  /** default = 1 */\n  specularIntensity?: number | undefined\n  /** default = 2 */\n  emissiveIntensity?: number | undefined\n  /** default = 1 */\n  directIntensity?: number | undefined\n}\n\nexport interface PBMaterial_Texture {\n  src: string\n  /** default = TextureWrapMode.Clamp */\n  wrapMode?: TextureWrapMode | undefined\n  /** default = FilterMode.Bilinear */\n  filterMode?: FilterMode | undefined\n}\n\nfunction createBasePBMaterial(): PBMaterial {\n  return {\n    texture: undefined,\n    alphaTest: undefined,\n    castShadows: undefined,\n    alphaTexture: undefined,\n    emissiveTexture: undefined,\n    bumpTexture: undefined,\n    albedoColor: undefined,\n    emissiveColor: undefined,\n    reflectivityColor: undefined,\n    transparencyMode: undefined,\n    metallic: undefined,\n    roughness: undefined,\n    glossiness: undefined,\n    specularIntensity: undefined,\n    emissiveIntensity: undefined,\n    directIntensity: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBMaterial = {\n  encode(message: PBMaterial, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.texture !== undefined) {\n      PBMaterial_Texture.encode(message.texture, writer.uint32(10).fork()).ldelim()\n    }\n    if (message.alphaTest !== undefined) {\n      writer.uint32(21).float(message.alphaTest)\n    }\n    if (message.castShadows !== undefined) {\n      writer.uint32(24).bool(message.castShadows)\n    }\n    if (message.alphaTexture !== undefined) {\n      PBMaterial_Texture.encode(message.alphaTexture, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.emissiveTexture !== undefined) {\n      PBMaterial_Texture.encode(message.emissiveTexture, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.bumpTexture !== undefined) {\n      PBMaterial_Texture.encode(message.bumpTexture, writer.uint32(50).fork()).ldelim()\n    }\n    if (message.albedoColor !== undefined) {\n      Color3.encode(message.albedoColor, writer.uint32(58).fork()).ldelim()\n    }\n    if (message.emissiveColor !== undefined) {\n      Color3.encode(message.emissiveColor, writer.uint32(66).fork()).ldelim()\n    }\n    if (message.reflectivityColor !== undefined) {\n      Color3.encode(message.reflectivityColor, writer.uint32(74).fork()).ldelim()\n    }\n    if (message.transparencyMode !== undefined) {\n      writer.uint32(80).int32(message.transparencyMode)\n    }\n    if (message.metallic !== undefined) {\n      writer.uint32(93).float(message.metallic)\n    }\n    if (message.roughness !== undefined) {\n      writer.uint32(101).float(message.roughness)\n    }\n    if (message.glossiness !== undefined) {\n      writer.uint32(109).float(message.glossiness)\n    }\n    if (message.specularIntensity !== undefined) {\n      writer.uint32(117).float(message.specularIntensity)\n    }\n    if (message.emissiveIntensity !== undefined) {\n      writer.uint32(125).float(message.emissiveIntensity)\n    }\n    if (message.directIntensity !== undefined) {\n      writer.uint32(133).float(message.directIntensity)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMaterial {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMaterial()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.texture = PBMaterial_Texture.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.alphaTest = reader.float()\n          break\n        case 3:\n          message.castShadows = reader.bool()\n          break\n        case 4:\n          message.alphaTexture = PBMaterial_Texture.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.emissiveTexture = PBMaterial_Texture.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.bumpTexture = PBMaterial_Texture.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.albedoColor = Color3.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.emissiveColor = Color3.decode(reader, reader.uint32())\n          break\n        case 9:\n          message.reflectivityColor = Color3.decode(reader, reader.uint32())\n          break\n        case 10:\n          message.transparencyMode = reader.int32() as any\n          break\n        case 11:\n          message.metallic = reader.float()\n          break\n        case 12:\n          message.roughness = reader.float()\n          break\n        case 13:\n          message.glossiness = reader.float()\n          break\n        case 14:\n          message.specularIntensity = reader.float()\n          break\n        case 15:\n          message.emissiveIntensity = reader.float()\n          break\n        case 16:\n          message.directIntensity = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMaterial_Texture(): PBMaterial_Texture {\n  return { src: '', wrapMode: undefined, filterMode: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBMaterial_Texture = {\n  encode(message: PBMaterial_Texture, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.src !== '') {\n      writer.uint32(10).string(message.src)\n    }\n    if (message.wrapMode !== undefined) {\n      writer.uint32(16).int32(message.wrapMode)\n    }\n    if (message.filterMode !== undefined) {\n      writer.uint32(24).int32(message.filterMode)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMaterial_Texture {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMaterial_Texture()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.src = reader.string()\n          break\n        case 2:\n          message.wrapMode = reader.int32() as any\n          break\n        case 3:\n          message.filterMode = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBMaterial } from './pb/Material.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1017\n\n/**\n * @internal\n */\nexport const MaterialSchema: ISchema<PBMaterial> = {\n  serialize(value: PBMaterial, builder: ByteBuffer): void {\n    const writer = PBMaterial.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBMaterial {\n    return PBMaterial.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBMaterial {\n    // TODO: this is a hack.\n    return PBMaterial.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum ColliderLayer {\n  None = 0,\n  Pointer = 1,\n  Physics = 2,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBMeshCollider {\n  /** default = ColliderLayer.Physics | ColliderLayer.Pointer */\n  collisionMask?: number | undefined\n  box: PBMeshCollider_BoxMesh | undefined\n  sphere: PBMeshCollider_SphereMesh | undefined\n  cylinder: PBMeshCollider_CylinderMesh | undefined\n  plane: PBMeshCollider_PlaneMesh | undefined\n}\n\nexport interface PBMeshCollider_BoxMesh {}\n\nexport interface PBMeshCollider_CylinderMesh {\n  /** default=1.0 */\n  radiusTop?: number | undefined\n  /** default=1.0 */\n  radiusBottom?: number | undefined\n}\n\nexport interface PBMeshCollider_PlaneMesh {}\n\nexport interface PBMeshCollider_SphereMesh {}\n\nfunction createBasePBMeshCollider(): PBMeshCollider {\n  return { collisionMask: undefined, box: undefined, sphere: undefined, cylinder: undefined, plane: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshCollider = {\n  encode(message: PBMeshCollider, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.collisionMask !== undefined) {\n      writer.uint32(8).int32(message.collisionMask)\n    }\n    if (message.box !== undefined) {\n      PBMeshCollider_BoxMesh.encode(message.box, writer.uint32(18).fork()).ldelim()\n    }\n    if (message.sphere !== undefined) {\n      PBMeshCollider_SphereMesh.encode(message.sphere, writer.uint32(26).fork()).ldelim()\n    }\n    if (message.cylinder !== undefined) {\n      PBMeshCollider_CylinderMesh.encode(message.cylinder, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.plane !== undefined) {\n      PBMeshCollider_PlaneMesh.encode(message.plane, writer.uint32(42).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshCollider {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshCollider()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.collisionMask = reader.int32()\n          break\n        case 2:\n          message.box = PBMeshCollider_BoxMesh.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.sphere = PBMeshCollider_SphereMesh.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.cylinder = PBMeshCollider_CylinderMesh.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.plane = PBMeshCollider_PlaneMesh.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshCollider_BoxMesh(): PBMeshCollider_BoxMesh {\n  return {}\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshCollider_BoxMesh = {\n  encode(_: PBMeshCollider_BoxMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshCollider_BoxMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshCollider_BoxMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshCollider_CylinderMesh(): PBMeshCollider_CylinderMesh {\n  return { radiusTop: undefined, radiusBottom: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshCollider_CylinderMesh = {\n  encode(message: PBMeshCollider_CylinderMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.radiusTop !== undefined) {\n      writer.uint32(13).float(message.radiusTop)\n    }\n    if (message.radiusBottom !== undefined) {\n      writer.uint32(21).float(message.radiusBottom)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshCollider_CylinderMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshCollider_CylinderMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.radiusTop = reader.float()\n          break\n        case 2:\n          message.radiusBottom = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshCollider_PlaneMesh(): PBMeshCollider_PlaneMesh {\n  return {}\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshCollider_PlaneMesh = {\n  encode(_: PBMeshCollider_PlaneMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshCollider_PlaneMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshCollider_PlaneMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshCollider_SphereMesh(): PBMeshCollider_SphereMesh {\n  return {}\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshCollider_SphereMesh = {\n  encode(_: PBMeshCollider_SphereMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshCollider_SphereMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshCollider_SphereMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBMeshCollider } from './pb/MeshCollider.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1019\n\n/**\n * @internal\n */\nexport const MeshColliderSchema: ISchema<PBMeshCollider> = {\n  serialize(value: PBMeshCollider, builder: ByteBuffer): void {\n    const writer = PBMeshCollider.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBMeshCollider {\n    return PBMeshCollider.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBMeshCollider {\n    // TODO: this is a hack.\n    return PBMeshCollider.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBMeshRenderer {\n  box: PBMeshRenderer_BoxMesh | undefined\n  sphere: PBMeshRenderer_SphereMesh | undefined\n  cylinder: PBMeshRenderer_CylinderMesh | undefined\n  plane: PBMeshRenderer_PlaneMesh | undefined\n}\n\nexport interface PBMeshRenderer_BoxMesh {\n  uvs: number[]\n}\n\nexport interface PBMeshRenderer_CylinderMesh {\n  /** default=1.0 */\n  radiusTop?: number | undefined\n  /** default=1.0 */\n  radiusBottom?: number | undefined\n}\n\nexport interface PBMeshRenderer_PlaneMesh {\n  uvs: number[]\n}\n\nexport interface PBMeshRenderer_SphereMesh {}\n\nfunction createBasePBMeshRenderer(): PBMeshRenderer {\n  return { box: undefined, sphere: undefined, cylinder: undefined, plane: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer = {\n  encode(message: PBMeshRenderer, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.box !== undefined) {\n      PBMeshRenderer_BoxMesh.encode(message.box, writer.uint32(10).fork()).ldelim()\n    }\n    if (message.sphere !== undefined) {\n      PBMeshRenderer_SphereMesh.encode(message.sphere, writer.uint32(18).fork()).ldelim()\n    }\n    if (message.cylinder !== undefined) {\n      PBMeshRenderer_CylinderMesh.encode(message.cylinder, writer.uint32(26).fork()).ldelim()\n    }\n    if (message.plane !== undefined) {\n      PBMeshRenderer_PlaneMesh.encode(message.plane, writer.uint32(34).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.box = PBMeshRenderer_BoxMesh.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.sphere = PBMeshRenderer_SphereMesh.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.cylinder = PBMeshRenderer_CylinderMesh.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.plane = PBMeshRenderer_PlaneMesh.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshRenderer_BoxMesh(): PBMeshRenderer_BoxMesh {\n  return { uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer_BoxMesh = {\n  encode(message: PBMeshRenderer_BoxMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    writer.uint32(10).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer_BoxMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer_BoxMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshRenderer_CylinderMesh(): PBMeshRenderer_CylinderMesh {\n  return { radiusTop: undefined, radiusBottom: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer_CylinderMesh = {\n  encode(message: PBMeshRenderer_CylinderMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.radiusTop !== undefined) {\n      writer.uint32(13).float(message.radiusTop)\n    }\n    if (message.radiusBottom !== undefined) {\n      writer.uint32(21).float(message.radiusBottom)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer_CylinderMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer_CylinderMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.radiusTop = reader.float()\n          break\n        case 2:\n          message.radiusBottom = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshRenderer_PlaneMesh(): PBMeshRenderer_PlaneMesh {\n  return { uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer_PlaneMesh = {\n  encode(message: PBMeshRenderer_PlaneMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    writer.uint32(10).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer_PlaneMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer_PlaneMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshRenderer_SphereMesh(): PBMeshRenderer_SphereMesh {\n  return {}\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer_SphereMesh = {\n  encode(_: PBMeshRenderer_SphereMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer_SphereMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer_SphereMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBMeshRenderer } from './pb/MeshRenderer.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1018\n\n/**\n * @internal\n */\nexport const MeshRendererSchema: ISchema<PBMeshRenderer> = {\n  serialize(value: PBMeshRenderer, builder: ByteBuffer): void {\n    const writer = PBMeshRenderer.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBMeshRenderer {\n    return PBMeshRenderer.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBMeshRenderer {\n    // TODO: this is a hack.\n    return PBMeshRenderer.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBNFTShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  src: string\n  assetId?: string | undefined\n  style?: number | undefined\n  color?: Color3 | undefined\n}\n\nfunction createBasePBNFTShape(): PBNFTShape {\n  return {\n    withCollisions: undefined,\n    isPointerBlocker: undefined,\n    visible: undefined,\n    src: '',\n    assetId: undefined,\n    style: undefined,\n    color: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBNFTShape = {\n  encode(message: PBNFTShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    if (message.src !== '') {\n      writer.uint32(34).string(message.src)\n    }\n    if (message.assetId !== undefined) {\n      writer.uint32(42).string(message.assetId)\n    }\n    if (message.style !== undefined) {\n      writer.uint32(48).int32(message.style)\n    }\n    if (message.color !== undefined) {\n      Color3.encode(message.color, writer.uint32(58).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBNFTShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBNFTShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          message.src = reader.string()\n          break\n        case 5:\n          message.assetId = reader.string()\n          break\n        case 6:\n          message.style = reader.int32()\n          break\n        case 7:\n          message.color = Color3.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBNFTShape } from './pb/NFTShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1040\n\n/**\n * @internal\n */\nexport const NFTShapeSchema: ISchema<PBNFTShape> = {\n  serialize(value: PBNFTShape, builder: ByteBuffer): void {\n    const writer = PBNFTShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBNFTShape {\n    return PBNFTShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBNFTShape {\n    // TODO: this is a hack.\n    return PBNFTShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerDown {\n  /** default=ActionButton.ANY */\n  button?: ActionButton | undefined\n  /** default='Interact' */\n  hoverText?: string | undefined\n  /** default=10 */\n  maxDistance?: number | undefined\n  /** default=true */\n  showFeedback?: boolean | undefined\n}\n\nfunction createBasePBOnPointerDown(): PBOnPointerDown {\n  return { button: undefined, hoverText: undefined, maxDistance: undefined, showFeedback: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerDown = {\n  encode(message: PBOnPointerDown, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== undefined) {\n      writer.uint32(8).int32(message.button)\n    }\n    if (message.hoverText !== undefined) {\n      writer.uint32(18).string(message.hoverText)\n    }\n    if (message.maxDistance !== undefined) {\n      writer.uint32(29).float(message.maxDistance)\n    }\n    if (message.showFeedback !== undefined) {\n      writer.uint32(32).bool(message.showFeedback)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerDown {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerDown()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.button = reader.int32() as any\n          break\n        case 2:\n          message.hoverText = reader.string()\n          break\n        case 3:\n          message.maxDistance = reader.float()\n          break\n        case 4:\n          message.showFeedback = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerDown } from './pb/OnPointerDown.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1060\n\n/**\n * @internal\n */\nexport const OnPointerDownSchema: ISchema<PBOnPointerDown> = {\n  serialize(value: PBOnPointerDown, builder: ByteBuffer): void {\n    const writer = PBOnPointerDown.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerDown {\n    return PBOnPointerDown.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerDown {\n    // TODO: this is a hack.\n    return PBOnPointerDown.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerDownResult {\n  button: ActionButton\n  meshName: string\n  origin: Vector3 | undefined\n  direction: Vector3 | undefined\n  point: Vector3 | undefined\n  normal: Vector3 | undefined\n  distance: number\n  timestamp: number\n}\n\nfunction createBasePBOnPointerDownResult(): PBOnPointerDownResult {\n  return {\n    button: 0,\n    meshName: '',\n    origin: undefined,\n    direction: undefined,\n    point: undefined,\n    normal: undefined,\n    distance: 0,\n    timestamp: 0\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerDownResult = {\n  encode(message: PBOnPointerDownResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== 0) {\n      writer.uint32(16).int32(message.button)\n    }\n    if (message.meshName !== '') {\n      writer.uint32(26).string(message.meshName)\n    }\n    if (message.origin !== undefined) {\n      Vector3.encode(message.origin, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.direction !== undefined) {\n      Vector3.encode(message.direction, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.point !== undefined) {\n      Vector3.encode(message.point, writer.uint32(50).fork()).ldelim()\n    }\n    if (message.normal !== undefined) {\n      Vector3.encode(message.normal, writer.uint32(58).fork()).ldelim()\n    }\n    if (message.distance !== 0) {\n      writer.uint32(69).float(message.distance)\n    }\n    if (message.timestamp !== 0) {\n      writer.uint32(72).int32(message.timestamp)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerDownResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerDownResult()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 2:\n          message.button = reader.int32() as any\n          break\n        case 3:\n          message.meshName = reader.string()\n          break\n        case 4:\n          message.origin = Vector3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.direction = Vector3.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.point = Vector3.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.normal = Vector3.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.distance = reader.float()\n          break\n        case 9:\n          message.timestamp = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerDownResult } from './pb/OnPointerDownResult.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1066\n\n/**\n * @internal\n */\nexport const OnPointerDownResultSchema: ISchema<PBOnPointerDownResult> = {\n  serialize(value: PBOnPointerDownResult, builder: ByteBuffer): void {\n    const writer = PBOnPointerDownResult.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerDownResult {\n    return PBOnPointerDownResult.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerDownResult {\n    // TODO: this is a hack.\n    return PBOnPointerDownResult.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerUp {\n  /** default=ActionButton.ANY */\n  button?: ActionButton | undefined\n  /** default='Interact' */\n  hoverText?: string | undefined\n  /** default=10 */\n  maxDistance?: number | undefined\n  /** default=true */\n  showFeedback?: boolean | undefined\n}\n\nfunction createBasePBOnPointerUp(): PBOnPointerUp {\n  return { button: undefined, hoverText: undefined, maxDistance: undefined, showFeedback: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerUp = {\n  encode(message: PBOnPointerUp, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== undefined) {\n      writer.uint32(8).int32(message.button)\n    }\n    if (message.hoverText !== undefined) {\n      writer.uint32(18).string(message.hoverText)\n    }\n    if (message.maxDistance !== undefined) {\n      writer.uint32(29).float(message.maxDistance)\n    }\n    if (message.showFeedback !== undefined) {\n      writer.uint32(32).bool(message.showFeedback)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerUp {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerUp()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.button = reader.int32() as any\n          break\n        case 2:\n          message.hoverText = reader.string()\n          break\n        case 3:\n          message.maxDistance = reader.float()\n          break\n        case 4:\n          message.showFeedback = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerUp } from './pb/OnPointerUp.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1061\n\n/**\n * @internal\n */\nexport const OnPointerUpSchema: ISchema<PBOnPointerUp> = {\n  serialize(value: PBOnPointerUp, builder: ByteBuffer): void {\n    const writer = PBOnPointerUp.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerUp {\n    return PBOnPointerUp.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerUp {\n    // TODO: this is a hack.\n    return PBOnPointerUp.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerUpResult {\n  button: ActionButton\n  meshName: string\n  origin: Vector3 | undefined\n  direction: Vector3 | undefined\n  point: Vector3 | undefined\n  normal: Vector3 | undefined\n  distance: number\n  timestamp: number\n}\n\nfunction createBasePBOnPointerUpResult(): PBOnPointerUpResult {\n  return {\n    button: 0,\n    meshName: '',\n    origin: undefined,\n    direction: undefined,\n    point: undefined,\n    normal: undefined,\n    distance: 0,\n    timestamp: 0\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerUpResult = {\n  encode(message: PBOnPointerUpResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== 0) {\n      writer.uint32(16).int32(message.button)\n    }\n    if (message.meshName !== '') {\n      writer.uint32(26).string(message.meshName)\n    }\n    if (message.origin !== undefined) {\n      Vector3.encode(message.origin, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.direction !== undefined) {\n      Vector3.encode(message.direction, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.point !== undefined) {\n      Vector3.encode(message.point, writer.uint32(50).fork()).ldelim()\n    }\n    if (message.normal !== undefined) {\n      Vector3.encode(message.normal, writer.uint32(58).fork()).ldelim()\n    }\n    if (message.distance !== 0) {\n      writer.uint32(69).float(message.distance)\n    }\n    if (message.timestamp !== 0) {\n      writer.uint32(72).int32(message.timestamp)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerUpResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerUpResult()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 2:\n          message.button = reader.int32() as any\n          break\n        case 3:\n          message.meshName = reader.string()\n          break\n        case 4:\n          message.origin = Vector3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.direction = Vector3.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.point = Vector3.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.normal = Vector3.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.distance = reader.float()\n          break\n        case 9:\n          message.timestamp = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerUpResult } from './pb/OnPointerUpResult.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1065\n\n/**\n * @internal\n */\nexport const OnPointerUpResultSchema: ISchema<PBOnPointerUpResult> = {\n  serialize(value: PBOnPointerUpResult, builder: ByteBuffer): void {\n    const writer = PBOnPointerUpResult.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerUpResult {\n    return PBOnPointerUpResult.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerUpResult {\n    // TODO: this is a hack.\n    return PBOnPointerUpResult.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBPlaneShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  uvs: number[]\n}\n\nfunction createBasePBPlaneShape(): PBPlaneShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined, uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBPlaneShape = {\n  encode(message: PBPlaneShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    writer.uint32(34).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPlaneShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPlaneShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBPlaneShape } from './pb/PlaneShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1014\n\n/**\n * @internal\n */\nexport const PlaneShapeSchema: ISchema<PBPlaneShape> = {\n  serialize(value: PBPlaneShape, builder: ByteBuffer): void {\n    const writer = PBPlaneShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBPlaneShape {\n    return PBPlaneShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBPlaneShape {\n    // TODO: this is a hack.\n    return PBPlaneShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum PointerEventType {\n  UP = 0,\n  DOWN = 1,\n  HOVER_ENTER = 2,\n  HOVER_LEAVE = 3,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBPointerEvents {\n  pointerEvents: PBPointerEvents_Entry[]\n}\n\nexport interface PBPointerEvents_Info {\n  /** default=ActionButton.ANY */\n  button?: ActionButton | undefined\n  /** default='Interact' */\n  hoverText?: string | undefined\n  /** default=10 */\n  maxDistance?: number | undefined\n  /** default=true */\n  showFeedback?: boolean | undefined\n}\n\nexport interface PBPointerEvents_Entry {\n  eventType: PointerEventType\n  eventInfo: PBPointerEvents_Info | undefined\n}\n\nfunction createBasePBPointerEvents(): PBPointerEvents {\n  return { pointerEvents: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBPointerEvents = {\n  encode(message: PBPointerEvents, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.pointerEvents) {\n      PBPointerEvents_Entry.encode(v!, writer.uint32(10).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPointerEvents {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPointerEvents()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.pointerEvents.push(PBPointerEvents_Entry.decode(reader, reader.uint32()))\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBPointerEvents_Info(): PBPointerEvents_Info {\n  return { button: undefined, hoverText: undefined, maxDistance: undefined, showFeedback: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBPointerEvents_Info = {\n  encode(message: PBPointerEvents_Info, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== undefined) {\n      writer.uint32(8).int32(message.button)\n    }\n    if (message.hoverText !== undefined) {\n      writer.uint32(18).string(message.hoverText)\n    }\n    if (message.maxDistance !== undefined) {\n      writer.uint32(29).float(message.maxDistance)\n    }\n    if (message.showFeedback !== undefined) {\n      writer.uint32(32).bool(message.showFeedback)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPointerEvents_Info {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPointerEvents_Info()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.button = reader.int32() as any\n          break\n        case 2:\n          message.hoverText = reader.string()\n          break\n        case 3:\n          message.maxDistance = reader.float()\n          break\n        case 4:\n          message.showFeedback = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBPointerEvents_Entry(): PBPointerEvents_Entry {\n  return { eventType: 0, eventInfo: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBPointerEvents_Entry = {\n  encode(message: PBPointerEvents_Entry, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.eventType !== 0) {\n      writer.uint32(8).int32(message.eventType)\n    }\n    if (message.eventInfo !== undefined) {\n      PBPointerEvents_Info.encode(message.eventInfo, writer.uint32(18).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPointerEvents_Entry {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPointerEvents_Entry()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.eventType = reader.int32() as any\n          break\n        case 2:\n          message.eventInfo = PBPointerEvents_Info.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBPointerEvents } from './pb/PointerEvents.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1062\n\n/**\n * @internal\n */\nexport const PointerEventsSchema: ISchema<PBPointerEvents> = {\n  serialize(value: PBPointerEvents, builder: ByteBuffer): void {\n    const writer = PBPointerEvents.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBPointerEvents {\n    return PBPointerEvents.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBPointerEvents {\n    // TODO: this is a hack.\n    return PBPointerEvents.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport Long from 'long'\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBRaycastResult {\n  timestamp: number\n  origin: Vector3 | undefined\n  direction: Vector3 | undefined\n  hits: RaycastHit[]\n}\n\n/** Position will be relative to the scene */\nexport interface RaycastHit {\n  position: Vector3 | undefined\n  origin: Vector3 | undefined\n  direction: Vector3 | undefined\n  normalHit: Vector3 | undefined\n  length: number\n  meshName?: string | undefined\n  entityId?: number | undefined\n}\n\nfunction createBasePBRaycastResult(): PBRaycastResult {\n  return { timestamp: 0, origin: undefined, direction: undefined, hits: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBRaycastResult = {\n  encode(message: PBRaycastResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.timestamp !== 0) {\n      writer.uint32(8).int32(message.timestamp)\n    }\n    if (message.origin !== undefined) {\n      Vector3.encode(message.origin, writer.uint32(18).fork()).ldelim()\n    }\n    if (message.direction !== undefined) {\n      Vector3.encode(message.direction, writer.uint32(26).fork()).ldelim()\n    }\n    for (const v of message.hits) {\n      RaycastHit.encode(v!, writer.uint32(34).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBRaycastResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBRaycastResult()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.timestamp = reader.int32()\n          break\n        case 2:\n          message.origin = Vector3.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.direction = Vector3.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.hits.push(RaycastHit.decode(reader, reader.uint32()))\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBaseRaycastHit(): RaycastHit {\n  return {\n    position: undefined,\n    origin: undefined,\n    direction: undefined,\n    normalHit: undefined,\n    length: 0,\n    meshName: undefined,\n    entityId: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const RaycastHit = {\n  encode(message: RaycastHit, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.position !== undefined) {\n      Vector3.encode(message.position, writer.uint32(10).fork()).ldelim()\n    }\n    if (message.origin !== undefined) {\n      Vector3.encode(message.origin, writer.uint32(18).fork()).ldelim()\n    }\n    if (message.direction !== undefined) {\n      Vector3.encode(message.direction, writer.uint32(26).fork()).ldelim()\n    }\n    if (message.normalHit !== undefined) {\n      Vector3.encode(message.normalHit, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.length !== 0) {\n      writer.uint32(45).float(message.length)\n    }\n    if (message.meshName !== undefined) {\n      writer.uint32(50).string(message.meshName)\n    }\n    if (message.entityId !== undefined) {\n      writer.uint32(56).int64(message.entityId)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): RaycastHit {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBaseRaycastHit()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.position = Vector3.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.origin = Vector3.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.direction = Vector3.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.normalHit = Vector3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.length = reader.float()\n          break\n        case 6:\n          message.meshName = reader.string()\n          break\n        case 7:\n          message.entityId = longToNumber(reader.int64() as Long)\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\ndeclare var self: any | undefined\ndeclare var window: any | undefined\ndeclare var global: any | undefined\nvar globalThis: any = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis\n  if (typeof self !== 'undefined') return self\n  if (typeof window !== 'undefined') return window\n  if (typeof global !== 'undefined') return global\n  throw 'Unable to locate global object'\n})()\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER')\n  }\n  return long.toNumber()\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any\n  _m0.configure()\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport { PointerEventType } from './PointerEvents.gen'\nimport { RaycastHit } from './RaycastResult.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\n/** the renderer will set this component to the root entity once per frame with all the events */\nexport interface PBPointerEventsResult {\n  /** a list of the last N pointer commands (from the engine) */\n  commands: PBPointerEventsResult_PointerCommand[]\n}\n\n/** this message represents a pointer event, used both for UP and DOWN actions */\nexport interface PBPointerEventsResult_PointerCommand {\n  /** identifier of the input */\n  button: ActionButton\n  hit: RaycastHit | undefined\n  state: PointerEventType\n  /** could be a Lamport timestamp */\n  timestamp: number\n  /** if the input is analog then we store it here */\n  analog?: number | undefined\n}\n\nfunction createBasePBPointerEventsResult(): PBPointerEventsResult {\n  return { commands: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBPointerEventsResult = {\n  encode(message: PBPointerEventsResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.commands) {\n      PBPointerEventsResult_PointerCommand.encode(v!, writer.uint32(10).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPointerEventsResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPointerEventsResult()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.commands.push(PBPointerEventsResult_PointerCommand.decode(reader, reader.uint32()))\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBPointerEventsResult_PointerCommand(): PBPointerEventsResult_PointerCommand {\n  return { button: 0, hit: undefined, state: 0, timestamp: 0, analog: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBPointerEventsResult_PointerCommand = {\n  encode(message: PBPointerEventsResult_PointerCommand, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== 0) {\n      writer.uint32(8).int32(message.button)\n    }\n    if (message.hit !== undefined) {\n      RaycastHit.encode(message.hit, writer.uint32(18).fork()).ldelim()\n    }\n    if (message.state !== 0) {\n      writer.uint32(32).int32(message.state)\n    }\n    if (message.timestamp !== 0) {\n      writer.uint32(40).int32(message.timestamp)\n    }\n    if (message.analog !== undefined) {\n      writer.uint32(53).float(message.analog)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPointerEventsResult_PointerCommand {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPointerEventsResult_PointerCommand()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.button = reader.int32() as any\n          break\n        case 2:\n          message.hit = RaycastHit.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.state = reader.int32() as any\n          break\n        case 5:\n          message.timestamp = reader.int32()\n          break\n        case 6:\n          message.analog = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBPointerEventsResult } from './pb/PointerEventsResult.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1063\n\n/**\n * @internal\n */\nexport const PointerEventsResultSchema: ISchema<PBPointerEventsResult> = {\n  serialize(value: PBPointerEventsResult, builder: ByteBuffer): void {\n    const writer = PBPointerEventsResult.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBPointerEventsResult {\n    return PBPointerEventsResult.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBPointerEventsResult {\n    // TODO: this is a hack.\n    return PBPointerEventsResult.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBPointerLock {\n  isPointerLocked: boolean\n}\n\nfunction createBasePBPointerLock(): PBPointerLock {\n  return { isPointerLocked: false }\n}\n\n\n/**\n * @internal\n */\nexport const PBPointerLock = {\n  encode(message: PBPointerLock, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.isPointerLocked === true) {\n      writer.uint32(8).bool(message.isPointerLocked)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPointerLock {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPointerLock()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.isPointerLocked = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBPointerLock } from './pb/PointerLock.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1074\n\n/**\n * @internal\n */\nexport const PointerLockSchema: ISchema<PBPointerLock> = {\n  serialize(value: PBPointerLock, builder: ByteBuffer): void {\n    const writer = PBPointerLock.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBPointerLock {\n    return PBPointerLock.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBPointerLock {\n    // TODO: this is a hack.\n    return PBPointerLock.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum RaycastQueryType {\n  HIT_FIRST = 0,\n  QUERY_ALL = 1,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBRaycast {\n  timestamp: number\n  origin: Vector3 | undefined\n  direction: Vector3 | undefined\n  maxDistance: number\n  queryType: RaycastQueryType\n}\n\nfunction createBasePBRaycast(): PBRaycast {\n  return { timestamp: 0, origin: undefined, direction: undefined, maxDistance: 0, queryType: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBRaycast = {\n  encode(message: PBRaycast, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.timestamp !== 0) {\n      writer.uint32(8).int32(message.timestamp)\n    }\n    if (message.origin !== undefined) {\n      Vector3.encode(message.origin, writer.uint32(18).fork()).ldelim()\n    }\n    if (message.direction !== undefined) {\n      Vector3.encode(message.direction, writer.uint32(26).fork()).ldelim()\n    }\n    if (message.maxDistance !== 0) {\n      writer.uint32(37).float(message.maxDistance)\n    }\n    if (message.queryType !== 0) {\n      writer.uint32(40).int32(message.queryType)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBRaycast {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBRaycast()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.timestamp = reader.int32()\n          break\n        case 2:\n          message.origin = Vector3.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.direction = Vector3.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.maxDistance = reader.float()\n          break\n        case 5:\n          message.queryType = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBRaycast } from './pb/Raycast.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1067\n\n/**\n * @internal\n */\nexport const RaycastSchema: ISchema<PBRaycast> = {\n  serialize(value: PBRaycast, builder: ByteBuffer): void {\n    const writer = PBRaycast.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBRaycast {\n    return PBRaycast.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBRaycast {\n    // TODO: this is a hack.\n    return PBRaycast.decode(new Uint8Array())\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBRaycastResult } from './pb/RaycastResult.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1068\n\n/**\n * @internal\n */\nexport const RaycastResultSchema: ISchema<PBRaycastResult> = {\n  serialize(value: PBRaycastResult, builder: ByteBuffer): void {\n    const writer = PBRaycastResult.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBRaycastResult {\n    return PBRaycastResult.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBRaycastResult {\n    // TODO: this is a hack.\n    return PBRaycastResult.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBSphereShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n}\n\nfunction createBasePBSphereShape(): PBSphereShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBSphereShape = {\n  encode(message: PBSphereShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBSphereShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBSphereShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBSphereShape } from './pb/SphereShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1015\n\n/**\n * @internal\n */\nexport const SphereShapeSchema: ISchema<PBSphereShape> = {\n  serialize(value: PBSphereShape, builder: ByteBuffer): void {\n    const writer = PBSphereShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBSphereShape {\n    return PBSphereShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBSphereShape {\n    // TODO: this is a hack.\n    return PBSphereShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBTextShape {\n  text: string\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  font?: string | undefined\n  /** default=1.0f */\n  opacity?: number | undefined\n  /** default=10 */\n  fontSize?: number | undefined\n  fontAutoSize?: boolean | undefined\n  /** default='center' */\n  hTextAlign?: string | undefined\n  /** default='center' */\n  vTextAlign?: string | undefined\n  /** default=1 */\n  width?: number | undefined\n  /** default=1 */\n  height?: number | undefined\n  paddingTop?: number | undefined\n  paddingRight?: number | undefined\n  paddingBottom?: number | undefined\n  paddingLeft?: number | undefined\n  lineSpacing?: number | undefined\n  lineCount?: number | undefined\n  textWrapping?: boolean | undefined\n  shadowBlur?: number | undefined\n  shadowOffsetX?: number | undefined\n  shadowOffsetY?: number | undefined\n  outlineWidth?: number | undefined\n  /** default=(1.0,1.0,1.0) */\n  shadowColor?: Color3 | undefined\n  /** default=(1.0,1.0,1.0) */\n  outlineColor?: Color3 | undefined\n  /** default=(1.0,1.0,1.0) */\n  textColor?: Color3 | undefined\n}\n\nfunction createBasePBTextShape(): PBTextShape {\n  return {\n    text: '',\n    visible: undefined,\n    font: undefined,\n    opacity: undefined,\n    fontSize: undefined,\n    fontAutoSize: undefined,\n    hTextAlign: undefined,\n    vTextAlign: undefined,\n    width: undefined,\n    height: undefined,\n    paddingTop: undefined,\n    paddingRight: undefined,\n    paddingBottom: undefined,\n    paddingLeft: undefined,\n    lineSpacing: undefined,\n    lineCount: undefined,\n    textWrapping: undefined,\n    shadowBlur: undefined,\n    shadowOffsetX: undefined,\n    shadowOffsetY: undefined,\n    outlineWidth: undefined,\n    shadowColor: undefined,\n    outlineColor: undefined,\n    textColor: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBTextShape = {\n  encode(message: PBTextShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.text !== '') {\n      writer.uint32(10).string(message.text)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(16).bool(message.visible)\n    }\n    if (message.font !== undefined) {\n      writer.uint32(26).string(message.font)\n    }\n    if (message.opacity !== undefined) {\n      writer.uint32(37).float(message.opacity)\n    }\n    if (message.fontSize !== undefined) {\n      writer.uint32(45).float(message.fontSize)\n    }\n    if (message.fontAutoSize !== undefined) {\n      writer.uint32(48).bool(message.fontAutoSize)\n    }\n    if (message.hTextAlign !== undefined) {\n      writer.uint32(58).string(message.hTextAlign)\n    }\n    if (message.vTextAlign !== undefined) {\n      writer.uint32(66).string(message.vTextAlign)\n    }\n    if (message.width !== undefined) {\n      writer.uint32(77).float(message.width)\n    }\n    if (message.height !== undefined) {\n      writer.uint32(85).float(message.height)\n    }\n    if (message.paddingTop !== undefined) {\n      writer.uint32(93).float(message.paddingTop)\n    }\n    if (message.paddingRight !== undefined) {\n      writer.uint32(101).float(message.paddingRight)\n    }\n    if (message.paddingBottom !== undefined) {\n      writer.uint32(109).float(message.paddingBottom)\n    }\n    if (message.paddingLeft !== undefined) {\n      writer.uint32(117).float(message.paddingLeft)\n    }\n    if (message.lineSpacing !== undefined) {\n      writer.uint32(125).float(message.lineSpacing)\n    }\n    if (message.lineCount !== undefined) {\n      writer.uint32(128).int32(message.lineCount)\n    }\n    if (message.textWrapping !== undefined) {\n      writer.uint32(136).bool(message.textWrapping)\n    }\n    if (message.shadowBlur !== undefined) {\n      writer.uint32(149).float(message.shadowBlur)\n    }\n    if (message.shadowOffsetX !== undefined) {\n      writer.uint32(157).float(message.shadowOffsetX)\n    }\n    if (message.shadowOffsetY !== undefined) {\n      writer.uint32(165).float(message.shadowOffsetY)\n    }\n    if (message.outlineWidth !== undefined) {\n      writer.uint32(173).float(message.outlineWidth)\n    }\n    if (message.shadowColor !== undefined) {\n      Color3.encode(message.shadowColor, writer.uint32(178).fork()).ldelim()\n    }\n    if (message.outlineColor !== undefined) {\n      Color3.encode(message.outlineColor, writer.uint32(186).fork()).ldelim()\n    }\n    if (message.textColor !== undefined) {\n      Color3.encode(message.textColor, writer.uint32(194).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBTextShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBTextShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.text = reader.string()\n          break\n        case 2:\n          message.visible = reader.bool()\n          break\n        case 3:\n          message.font = reader.string()\n          break\n        case 4:\n          message.opacity = reader.float()\n          break\n        case 5:\n          message.fontSize = reader.float()\n          break\n        case 6:\n          message.fontAutoSize = reader.bool()\n          break\n        case 7:\n          message.hTextAlign = reader.string()\n          break\n        case 8:\n          message.vTextAlign = reader.string()\n          break\n        case 9:\n          message.width = reader.float()\n          break\n        case 10:\n          message.height = reader.float()\n          break\n        case 11:\n          message.paddingTop = reader.float()\n          break\n        case 12:\n          message.paddingRight = reader.float()\n          break\n        case 13:\n          message.paddingBottom = reader.float()\n          break\n        case 14:\n          message.paddingLeft = reader.float()\n          break\n        case 15:\n          message.lineSpacing = reader.float()\n          break\n        case 16:\n          message.lineCount = reader.int32()\n          break\n        case 17:\n          message.textWrapping = reader.bool()\n          break\n        case 18:\n          message.shadowBlur = reader.float()\n          break\n        case 19:\n          message.shadowOffsetX = reader.float()\n          break\n        case 20:\n          message.shadowOffsetY = reader.float()\n          break\n        case 21:\n          message.outlineWidth = reader.float()\n          break\n        case 22:\n          message.shadowColor = Color3.decode(reader, reader.uint32())\n          break\n        case 23:\n          message.outlineColor = Color3.decode(reader, reader.uint32())\n          break\n        case 24:\n          message.textColor = Color3.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBTextShape } from './pb/TextShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1030\n\n/**\n * @internal\n */\nexport const TextShapeSchema: ISchema<PBTextShape> = {\n  serialize(value: PBTextShape, builder: ByteBuffer): void {\n    const writer = PBTextShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBTextShape {\n    return PBTextShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBTextShape {\n    // TODO: this is a hack.\n    return PBTextShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum TextAlign {\n  Center = 0,\n  Left = 1,\n  Right = 2,\n  UNRECOGNIZED = -1\n}\n\nexport const enum Font {\n  LiberationSans = 0,\n  SansSerif = 1,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBUiText {\n  value: string\n  /** default=(1.0,1.0,1.0) */\n  color?: Color3 | undefined\n  /** default='center' */\n  textAlign?: TextAlign | undefined\n  /** default=0 */\n  font?: Font | undefined\n  /** default=10 */\n  fontSize?: number | undefined\n}\n\nfunction createBasePBUiText(): PBUiText {\n  return { value: '', color: undefined, textAlign: undefined, font: undefined, fontSize: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBUiText = {\n  encode(message: PBUiText, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.value !== '') {\n      writer.uint32(10).string(message.value)\n    }\n    if (message.color !== undefined) {\n      Color3.encode(message.color, writer.uint32(18).fork()).ldelim()\n    }\n    if (message.textAlign !== undefined) {\n      writer.uint32(24).int32(message.textAlign)\n    }\n    if (message.font !== undefined) {\n      writer.uint32(32).int32(message.font)\n    }\n    if (message.fontSize !== undefined) {\n      writer.uint32(40).int32(message.fontSize)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBUiText {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBUiText()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.value = reader.string()\n          break\n        case 2:\n          message.color = Color3.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.textAlign = reader.int32() as any\n          break\n        case 4:\n          message.font = reader.int32() as any\n          break\n        case 5:\n          message.fontSize = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBUiText } from './pb/UiText.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1052\n\n/**\n * @internal\n */\nexport const UiTextSchema: ISchema<PBUiText> = {\n  serialize(value: PBUiText, builder: ByteBuffer): void {\n    const writer = PBUiText.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBUiText {\n    return PBUiText.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBUiText {\n    // TODO: this is a hack.\n    return PBUiText.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum YGPositionType {\n  YGPositionTypeStatic = 0,\n  YGPositionTypeRelative = 1,\n  YGPositionTypeAbsolute = 2,\n  UNRECOGNIZED = -1\n}\n\nexport const enum YGAlign {\n  YGAlignAuto = 0,\n  YGAlignFlexStart = 1,\n  YGAlignCenter = 2,\n  YGAlignFlexEnd = 3,\n  YGAlignStretch = 4,\n  YGAlignBaseline = 5,\n  YGAlignSpaceBetween = 6,\n  YGAlignSpaceAround = 7,\n  UNRECOGNIZED = -1\n}\n\nexport const enum YGUnit {\n  YGUnitUndefined = 0,\n  YGUnitPoint = 1,\n  YGUnitPercent = 2,\n  YGUnitAuto = 3,\n  UNRECOGNIZED = -1\n}\n\nexport const enum YGDirection {\n  YGDirectionInherit = 0,\n  YGDirectionLTR = 1,\n  YGDirectionRTL = 2,\n  UNRECOGNIZED = -1\n}\n\nexport const enum YGFlexDirection {\n  YGFlexDirectionColumn = 0,\n  YGFlexDirectionColumnReverse = 1,\n  YGFlexDirectionRow = 2,\n  YGFlexDirectionRowReverse = 3,\n  UNRECOGNIZED = -1\n}\n\nexport const enum YGWrap {\n  YGWrapNoWrap = 0,\n  YGWrapWrap = 1,\n  YGWrapWrapReverse = 2,\n  UNRECOGNIZED = -1\n}\n\nexport const enum YGJustify {\n  YGJustifyFlexStart = 0,\n  YGJustifyCenter = 1,\n  YGJustifyFlexEnd = 2,\n  YGJustifySpaceBetween = 3,\n  YGJustifySpaceAround = 4,\n  YGJustifySpaceEvenly = 5,\n  UNRECOGNIZED = -1\n}\n\nexport const enum YGOverflow {\n  YGOverflowVisible = 0,\n  YGOverflowHidden = 1,\n  YGOverflowScroll = 2,\n  UNRECOGNIZED = -1\n}\n\nexport const enum YGDisplay {\n  YGDisplayFlex = 0,\n  YGDisplayNone = 1,\n  UNRECOGNIZED = -1\n}\n\nexport const enum YGEdge {\n  YGEdgeLeft = 0,\n  YGEdgeTop = 1,\n  YGEdgeRight = 2,\n  YGEdgeBottom = 3,\n  YGEdgeStart = 4,\n  YGEdgeEnd = 5,\n  YGEdgeHorizontal = 6,\n  YGEdgeVertical = 7,\n  YGEdgeAll = 8,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBUiTransform {\n  parent: number\n  rightOf: number\n  positionType: YGPositionType\n  alignContent: YGAlign\n  alignItems: YGAlign\n  alignSelf: YGAlign\n  flexDirection: YGFlexDirection\n  flexWrap: YGWrap\n  justifyContent: YGJustify\n  overflow: YGOverflow\n  display: YGDisplay\n  direction: YGDirection\n  flex: number\n  flexBasisUnit: YGUnit\n  flexBasis: number\n  flexGrow: number\n  flexShrink: number\n  widthUnit: YGUnit\n  width: number\n  heightUnit: YGUnit\n  height: number\n  minWidthUnit: YGUnit\n  minWidth: number\n  minHeightUnit: YGUnit\n  minHeight: number\n  maxWidthUnit: YGUnit\n  maxWidth: number\n  maxHeightUnit: YGUnit\n  maxHeight: number\n  positionLeftUnit: YGUnit\n  positionLeft: number\n  positionTopUnit: YGUnit\n  positionTop: number\n  positionRightUnit: YGUnit\n  positionRight: number\n  positionBottomUnit: YGUnit\n  positionBottom: number\n  /** margin */\n  marginLeftUnit: YGUnit\n  marginLeft: number\n  marginTopUnit: YGUnit\n  marginTop: number\n  marginRightUnit: YGUnit\n  marginRight: number\n  marginBottomUnit: YGUnit\n  marginBottom: number\n  paddingLeftUnit: YGUnit\n  paddingLeft: number\n  paddingTopUnit: YGUnit\n  paddingTop: number\n  paddingRightUnit: YGUnit\n  paddingRight: number\n  paddingBottomUnit: YGUnit\n  paddingBottom: number\n  borderLeft: number\n  borderTop: number\n  borderRight: number\n  borderBottom: number\n}\n\nfunction createBasePBUiTransform(): PBUiTransform {\n  return {\n    parent: 0,\n    rightOf: 0,\n    positionType: 0,\n    alignContent: 0,\n    alignItems: 0,\n    alignSelf: 0,\n    flexDirection: 0,\n    flexWrap: 0,\n    justifyContent: 0,\n    overflow: 0,\n    display: 0,\n    direction: 0,\n    flex: 0,\n    flexBasisUnit: 0,\n    flexBasis: 0,\n    flexGrow: 0,\n    flexShrink: 0,\n    widthUnit: 0,\n    width: 0,\n    heightUnit: 0,\n    height: 0,\n    minWidthUnit: 0,\n    minWidth: 0,\n    minHeightUnit: 0,\n    minHeight: 0,\n    maxWidthUnit: 0,\n    maxWidth: 0,\n    maxHeightUnit: 0,\n    maxHeight: 0,\n    positionLeftUnit: 0,\n    positionLeft: 0,\n    positionTopUnit: 0,\n    positionTop: 0,\n    positionRightUnit: 0,\n    positionRight: 0,\n    positionBottomUnit: 0,\n    positionBottom: 0,\n    marginLeftUnit: 0,\n    marginLeft: 0,\n    marginTopUnit: 0,\n    marginTop: 0,\n    marginRightUnit: 0,\n    marginRight: 0,\n    marginBottomUnit: 0,\n    marginBottom: 0,\n    paddingLeftUnit: 0,\n    paddingLeft: 0,\n    paddingTopUnit: 0,\n    paddingTop: 0,\n    paddingRightUnit: 0,\n    paddingRight: 0,\n    paddingBottomUnit: 0,\n    paddingBottom: 0,\n    borderLeft: 0,\n    borderTop: 0,\n    borderRight: 0,\n    borderBottom: 0\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBUiTransform = {\n  encode(message: PBUiTransform, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.parent !== 0) {\n      writer.uint32(632).int32(message.parent)\n    }\n    if (message.rightOf !== 0) {\n      writer.uint32(640).int32(message.rightOf)\n    }\n    if (message.positionType !== 0) {\n      writer.uint32(8).int32(message.positionType)\n    }\n    if (message.alignContent !== 0) {\n      writer.uint32(16).int32(message.alignContent)\n    }\n    if (message.alignItems !== 0) {\n      writer.uint32(24).int32(message.alignItems)\n    }\n    if (message.alignSelf !== 0) {\n      writer.uint32(32).int32(message.alignSelf)\n    }\n    if (message.flexDirection !== 0) {\n      writer.uint32(40).int32(message.flexDirection)\n    }\n    if (message.flexWrap !== 0) {\n      writer.uint32(48).int32(message.flexWrap)\n    }\n    if (message.justifyContent !== 0) {\n      writer.uint32(56).int32(message.justifyContent)\n    }\n    if (message.overflow !== 0) {\n      writer.uint32(64).int32(message.overflow)\n    }\n    if (message.display !== 0) {\n      writer.uint32(72).int32(message.display)\n    }\n    if (message.direction !== 0) {\n      writer.uint32(80).int32(message.direction)\n    }\n    if (message.flex !== 0) {\n      writer.uint32(93).float(message.flex)\n    }\n    if (message.flexBasisUnit !== 0) {\n      writer.uint32(104).int32(message.flexBasisUnit)\n    }\n    if (message.flexBasis !== 0) {\n      writer.uint32(117).float(message.flexBasis)\n    }\n    if (message.flexGrow !== 0) {\n      writer.uint32(125).float(message.flexGrow)\n    }\n    if (message.flexShrink !== 0) {\n      writer.uint32(133).float(message.flexShrink)\n    }\n    if (message.widthUnit !== 0) {\n      writer.uint32(136).int32(message.widthUnit)\n    }\n    if (message.width !== 0) {\n      writer.uint32(149).float(message.width)\n    }\n    if (message.heightUnit !== 0) {\n      writer.uint32(152).int32(message.heightUnit)\n    }\n    if (message.height !== 0) {\n      writer.uint32(165).float(message.height)\n    }\n    if (message.minWidthUnit !== 0) {\n      writer.uint32(168).int32(message.minWidthUnit)\n    }\n    if (message.minWidth !== 0) {\n      writer.uint32(181).float(message.minWidth)\n    }\n    if (message.minHeightUnit !== 0) {\n      writer.uint32(184).int32(message.minHeightUnit)\n    }\n    if (message.minHeight !== 0) {\n      writer.uint32(197).float(message.minHeight)\n    }\n    if (message.maxWidthUnit !== 0) {\n      writer.uint32(248).int32(message.maxWidthUnit)\n    }\n    if (message.maxWidth !== 0) {\n      writer.uint32(261).float(message.maxWidth)\n    }\n    if (message.maxHeightUnit !== 0) {\n      writer.uint32(264).int32(message.maxHeightUnit)\n    }\n    if (message.maxHeight !== 0) {\n      writer.uint32(277).float(message.maxHeight)\n    }\n    if (message.positionLeftUnit !== 0) {\n      writer.uint32(328).int32(message.positionLeftUnit)\n    }\n    if (message.positionLeft !== 0) {\n      writer.uint32(341).float(message.positionLeft)\n    }\n    if (message.positionTopUnit !== 0) {\n      writer.uint32(344).int32(message.positionTopUnit)\n    }\n    if (message.positionTop !== 0) {\n      writer.uint32(357).float(message.positionTop)\n    }\n    if (message.positionRightUnit !== 0) {\n      writer.uint32(360).int32(message.positionRightUnit)\n    }\n    if (message.positionRight !== 0) {\n      writer.uint32(373).float(message.positionRight)\n    }\n    if (message.positionBottomUnit !== 0) {\n      writer.uint32(376).int32(message.positionBottomUnit)\n    }\n    if (message.positionBottom !== 0) {\n      writer.uint32(389).float(message.positionBottom)\n    }\n    if (message.marginLeftUnit !== 0) {\n      writer.uint32(408).int32(message.marginLeftUnit)\n    }\n    if (message.marginLeft !== 0) {\n      writer.uint32(421).float(message.marginLeft)\n    }\n    if (message.marginTopUnit !== 0) {\n      writer.uint32(424).int32(message.marginTopUnit)\n    }\n    if (message.marginTop !== 0) {\n      writer.uint32(437).float(message.marginTop)\n    }\n    if (message.marginRightUnit !== 0) {\n      writer.uint32(440).int32(message.marginRightUnit)\n    }\n    if (message.marginRight !== 0) {\n      writer.uint32(453).float(message.marginRight)\n    }\n    if (message.marginBottomUnit !== 0) {\n      writer.uint32(456).int32(message.marginBottomUnit)\n    }\n    if (message.marginBottom !== 0) {\n      writer.uint32(469).float(message.marginBottom)\n    }\n    if (message.paddingLeftUnit !== 0) {\n      writer.uint32(488).int32(message.paddingLeftUnit)\n    }\n    if (message.paddingLeft !== 0) {\n      writer.uint32(501).float(message.paddingLeft)\n    }\n    if (message.paddingTopUnit !== 0) {\n      writer.uint32(504).int32(message.paddingTopUnit)\n    }\n    if (message.paddingTop !== 0) {\n      writer.uint32(517).float(message.paddingTop)\n    }\n    if (message.paddingRightUnit !== 0) {\n      writer.uint32(520).int32(message.paddingRightUnit)\n    }\n    if (message.paddingRight !== 0) {\n      writer.uint32(533).float(message.paddingRight)\n    }\n    if (message.paddingBottomUnit !== 0) {\n      writer.uint32(536).int32(message.paddingBottomUnit)\n    }\n    if (message.paddingBottom !== 0) {\n      writer.uint32(549).float(message.paddingBottom)\n    }\n    if (message.borderLeft !== 0) {\n      writer.uint32(581).float(message.borderLeft)\n    }\n    if (message.borderTop !== 0) {\n      writer.uint32(597).float(message.borderTop)\n    }\n    if (message.borderRight !== 0) {\n      writer.uint32(613).float(message.borderRight)\n    }\n    if (message.borderBottom !== 0) {\n      writer.uint32(629).float(message.borderBottom)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBUiTransform {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBUiTransform()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 79:\n          message.parent = reader.int32()\n          break\n        case 80:\n          message.rightOf = reader.int32()\n          break\n        case 1:\n          message.positionType = reader.int32() as any\n          break\n        case 2:\n          message.alignContent = reader.int32() as any\n          break\n        case 3:\n          message.alignItems = reader.int32() as any\n          break\n        case 4:\n          message.alignSelf = reader.int32() as any\n          break\n        case 5:\n          message.flexDirection = reader.int32() as any\n          break\n        case 6:\n          message.flexWrap = reader.int32() as any\n          break\n        case 7:\n          message.justifyContent = reader.int32() as any\n          break\n        case 8:\n          message.overflow = reader.int32() as any\n          break\n        case 9:\n          message.display = reader.int32() as any\n          break\n        case 10:\n          message.direction = reader.int32() as any\n          break\n        case 11:\n          message.flex = reader.float()\n          break\n        case 13:\n          message.flexBasisUnit = reader.int32() as any\n          break\n        case 14:\n          message.flexBasis = reader.float()\n          break\n        case 15:\n          message.flexGrow = reader.float()\n          break\n        case 16:\n          message.flexShrink = reader.float()\n          break\n        case 17:\n          message.widthUnit = reader.int32() as any\n          break\n        case 18:\n          message.width = reader.float()\n          break\n        case 19:\n          message.heightUnit = reader.int32() as any\n          break\n        case 20:\n          message.height = reader.float()\n          break\n        case 21:\n          message.minWidthUnit = reader.int32() as any\n          break\n        case 22:\n          message.minWidth = reader.float()\n          break\n        case 23:\n          message.minHeightUnit = reader.int32() as any\n          break\n        case 24:\n          message.minHeight = reader.float()\n          break\n        case 31:\n          message.maxWidthUnit = reader.int32() as any\n          break\n        case 32:\n          message.maxWidth = reader.float()\n          break\n        case 33:\n          message.maxHeightUnit = reader.int32() as any\n          break\n        case 34:\n          message.maxHeight = reader.float()\n          break\n        case 41:\n          message.positionLeftUnit = reader.int32() as any\n          break\n        case 42:\n          message.positionLeft = reader.float()\n          break\n        case 43:\n          message.positionTopUnit = reader.int32() as any\n          break\n        case 44:\n          message.positionTop = reader.float()\n          break\n        case 45:\n          message.positionRightUnit = reader.int32() as any\n          break\n        case 46:\n          message.positionRight = reader.float()\n          break\n        case 47:\n          message.positionBottomUnit = reader.int32() as any\n          break\n        case 48:\n          message.positionBottom = reader.float()\n          break\n        case 51:\n          message.marginLeftUnit = reader.int32() as any\n          break\n        case 52:\n          message.marginLeft = reader.float()\n          break\n        case 53:\n          message.marginTopUnit = reader.int32() as any\n          break\n        case 54:\n          message.marginTop = reader.float()\n          break\n        case 55:\n          message.marginRightUnit = reader.int32() as any\n          break\n        case 56:\n          message.marginRight = reader.float()\n          break\n        case 57:\n          message.marginBottomUnit = reader.int32() as any\n          break\n        case 58:\n          message.marginBottom = reader.float()\n          break\n        case 61:\n          message.paddingLeftUnit = reader.int32() as any\n          break\n        case 62:\n          message.paddingLeft = reader.float()\n          break\n        case 63:\n          message.paddingTopUnit = reader.int32() as any\n          break\n        case 64:\n          message.paddingTop = reader.float()\n          break\n        case 65:\n          message.paddingRightUnit = reader.int32() as any\n          break\n        case 66:\n          message.paddingRight = reader.float()\n          break\n        case 67:\n          message.paddingBottomUnit = reader.int32() as any\n          break\n        case 68:\n          message.paddingBottom = reader.float()\n          break\n        case 72:\n          message.borderLeft = reader.float()\n          break\n        case 74:\n          message.borderTop = reader.float()\n          break\n        case 76:\n          message.borderRight = reader.float()\n          break\n        case 78:\n          message.borderBottom = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBUiTransform } from './pb/UiTransform.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1050\n\n/**\n * @internal\n */\nexport const UiTransformSchema: ISchema<PBUiTransform> = {\n  serialize(value: PBUiTransform, builder: ByteBuffer): void {\n    const writer = PBUiTransform.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBUiTransform {\n    return PBUiTransform.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBUiTransform {\n    // TODO: this is a hack.\n    return PBUiTransform.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBVisibilityComponent {\n  /** default=true */\n  visible?: boolean | undefined\n}\n\nfunction createBasePBVisibilityComponent(): PBVisibilityComponent {\n  return { visible: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBVisibilityComponent = {\n  encode(message: PBVisibilityComponent, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.visible !== undefined) {\n      writer.uint32(8).bool(message.visible)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBVisibilityComponent {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBVisibilityComponent()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.visible = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBVisibilityComponent } from './pb/VisibilityComponent.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1081\n\n/**\n * @internal\n */\nexport const VisibilityComponentSchema: ISchema<PBVisibilityComponent> = {\n  serialize(value: PBVisibilityComponent, builder: ByteBuffer): void {\n    const writer = PBVisibilityComponent.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBVisibilityComponent {\n    return PBVisibilityComponent.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBVisibilityComponent {\n    // TODO: this is a hack.\n    return PBVisibilityComponent.decode(new Uint8Array())\n  }\n}\n","import type { IEngine } from '../../engine/types'\nimport * as TransformSchema from '../legacy/Transform'\nimport * as AnimatorSchema from './Animator.gen'\nimport * as AudioSourceSchema from './AudioSource.gen'\nimport * as AvatarAttachSchema from './AvatarAttach.gen'\nimport * as AvatarModifierAreaSchema from './AvatarModifierArea.gen'\nimport * as AvatarShapeSchema from './AvatarShape.gen'\nimport * as BillboardSchema from './Billboard.gen'\nimport * as BoxShapeSchema from './BoxShape.gen'\nimport * as CameraModeSchema from './CameraMode.gen'\nimport * as CameraModeAreaSchema from './CameraModeArea.gen'\nimport * as CylinderShapeSchema from './CylinderShape.gen'\nimport * as GLTFShapeSchema from './GLTFShape.gen'\nimport * as MaterialSchema from './Material.gen'\nimport * as MeshColliderSchema from './MeshCollider.gen'\nimport * as MeshRendererSchema from './MeshRenderer.gen'\nimport * as NFTShapeSchema from './NFTShape.gen'\nimport * as OnPointerDownSchema from './OnPointerDown.gen'\nimport * as OnPointerDownResultSchema from './OnPointerDownResult.gen'\nimport * as OnPointerUpSchema from './OnPointerUp.gen'\nimport * as OnPointerUpResultSchema from './OnPointerUpResult.gen'\nimport * as PlaneShapeSchema from './PlaneShape.gen'\nimport * as PointerEventsSchema from './PointerEvents.gen'\nimport * as PointerEventsResultSchema from './PointerEventsResult.gen'\nimport * as PointerLockSchema from './PointerLock.gen'\nimport * as RaycastSchema from './Raycast.gen'\nimport * as RaycastResultSchema from './RaycastResult.gen'\nimport * as SphereShapeSchema from './SphereShape.gen'\nimport * as TextShapeSchema from './TextShape.gen'\nimport * as UiTextSchema from './UiText.gen'\nimport * as UiTransformSchema from './UiTransform.gen'\nimport * as VisibilityComponentSchema from './VisibilityComponent.gen'\n\nexport function defineLibraryComponents({\n  defineComponentFromSchema\n}: Pick<IEngine, 'defineComponentFromSchema'>) {\n  return {\n\t\tAnimator: defineComponentFromSchema(AnimatorSchema.AnimatorSchema, AnimatorSchema.COMPONENT_ID),\n\t\tAudioSource: defineComponentFromSchema(AudioSourceSchema.AudioSourceSchema, AudioSourceSchema.COMPONENT_ID),\n\t\tAvatarAttach: defineComponentFromSchema(AvatarAttachSchema.AvatarAttachSchema, AvatarAttachSchema.COMPONENT_ID),\n\t\tAvatarModifierArea: defineComponentFromSchema(AvatarModifierAreaSchema.AvatarModifierAreaSchema, AvatarModifierAreaSchema.COMPONENT_ID),\n\t\tAvatarShape: defineComponentFromSchema(AvatarShapeSchema.AvatarShapeSchema, AvatarShapeSchema.COMPONENT_ID),\n\t\tBillboard: defineComponentFromSchema(BillboardSchema.BillboardSchema, BillboardSchema.COMPONENT_ID),\n\t\tBoxShape: defineComponentFromSchema(BoxShapeSchema.BoxShapeSchema, BoxShapeSchema.COMPONENT_ID),\n\t\tCameraMode: defineComponentFromSchema(CameraModeSchema.CameraModeSchema, CameraModeSchema.COMPONENT_ID),\n\t\tCameraModeArea: defineComponentFromSchema(CameraModeAreaSchema.CameraModeAreaSchema, CameraModeAreaSchema.COMPONENT_ID),\n\t\tCylinderShape: defineComponentFromSchema(CylinderShapeSchema.CylinderShapeSchema, CylinderShapeSchema.COMPONENT_ID),\n\t\tGLTFShape: defineComponentFromSchema(GLTFShapeSchema.GLTFShapeSchema, GLTFShapeSchema.COMPONENT_ID),\n\t\tMaterial: defineComponentFromSchema(MaterialSchema.MaterialSchema, MaterialSchema.COMPONENT_ID),\n\t\tMeshCollider: defineComponentFromSchema(MeshColliderSchema.MeshColliderSchema, MeshColliderSchema.COMPONENT_ID),\n\t\tMeshRenderer: defineComponentFromSchema(MeshRendererSchema.MeshRendererSchema, MeshRendererSchema.COMPONENT_ID),\n\t\tNFTShape: defineComponentFromSchema(NFTShapeSchema.NFTShapeSchema, NFTShapeSchema.COMPONENT_ID),\n\t\tOnPointerDown: defineComponentFromSchema(OnPointerDownSchema.OnPointerDownSchema, OnPointerDownSchema.COMPONENT_ID),\n\t\tOnPointerDownResult: defineComponentFromSchema(OnPointerDownResultSchema.OnPointerDownResultSchema, OnPointerDownResultSchema.COMPONENT_ID),\n\t\tOnPointerUp: defineComponentFromSchema(OnPointerUpSchema.OnPointerUpSchema, OnPointerUpSchema.COMPONENT_ID),\n\t\tOnPointerUpResult: defineComponentFromSchema(OnPointerUpResultSchema.OnPointerUpResultSchema, OnPointerUpResultSchema.COMPONENT_ID),\n\t\tPlaneShape: defineComponentFromSchema(PlaneShapeSchema.PlaneShapeSchema, PlaneShapeSchema.COMPONENT_ID),\n\t\tPointerEvents: defineComponentFromSchema(PointerEventsSchema.PointerEventsSchema, PointerEventsSchema.COMPONENT_ID),\n\t\tPointerEventsResult: defineComponentFromSchema(PointerEventsResultSchema.PointerEventsResultSchema, PointerEventsResultSchema.COMPONENT_ID),\n\t\tPointerLock: defineComponentFromSchema(PointerLockSchema.PointerLockSchema, PointerLockSchema.COMPONENT_ID),\n\t\tRaycast: defineComponentFromSchema(RaycastSchema.RaycastSchema, RaycastSchema.COMPONENT_ID),\n\t\tRaycastResult: defineComponentFromSchema(RaycastResultSchema.RaycastResultSchema, RaycastResultSchema.COMPONENT_ID),\n\t\tSphereShape: defineComponentFromSchema(SphereShapeSchema.SphereShapeSchema, SphereShapeSchema.COMPONENT_ID),\n\t\tTextShape: defineComponentFromSchema(TextShapeSchema.TextShapeSchema, TextShapeSchema.COMPONENT_ID),\n\t\tUiText: defineComponentFromSchema(UiTextSchema.UiTextSchema, UiTextSchema.COMPONENT_ID),\n\t\tUiTransform: defineComponentFromSchema(UiTransformSchema.UiTransformSchema, UiTransformSchema.COMPONENT_ID),\n\t\tVisibilityComponent: defineComponentFromSchema(VisibilityComponentSchema.VisibilityComponentSchema, VisibilityComponentSchema.COMPONENT_ID),\n  }\n}\n","import type { ISchema } from '../../schemas/ISchema'\nimport { Entity } from '../../engine/entity'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ComponentDefinition, IEngine } from '../../engine'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1\n\n/**\n * @public\n */\nexport type TransformType = {\n  position: { x: number; y: number; z: number }\n  rotation: { x: number; y: number; z: number; w: number }\n  scale: { x: number; y: number; z: number }\n  parent?: Entity\n}\n\n/** @internal */\nexport const TRANSFORM_LENGTH = 44\n\n/** @internal */\nexport const TransformSchema: ISchema<TransformType> = {\n  serialize(value: TransformType, builder: ByteBuffer): void {\n    const ptr = builder.incrementWriteOffset(TRANSFORM_LENGTH)\n    builder.setFloat32(ptr, value.position.x)\n    builder.setFloat32(ptr + 4, value.position.y)\n    builder.setFloat32(ptr + 8, value.position.z)\n    builder.setFloat32(ptr + 12, value.rotation.x)\n    builder.setFloat32(ptr + 16, value.rotation.y)\n    builder.setFloat32(ptr + 20, value.rotation.z)\n    builder.setFloat32(ptr + 24, value.rotation.w)\n    builder.setFloat32(ptr + 28, value.scale.x)\n    builder.setFloat32(ptr + 32, value.scale.y)\n    builder.setFloat32(ptr + 36, value.scale.z)\n    builder.setUint32(ptr + 40, value.parent || 0)\n  },\n  deserialize(reader: ByteBuffer): TransformType {\n    const ptr = reader.incrementReadOffset(TRANSFORM_LENGTH)\n    return {\n      position: {\n        x: reader.getFloat32(ptr),\n        y: reader.getFloat32(ptr + 4),\n        z: reader.getFloat32(ptr + 8)\n      },\n      rotation: {\n        x: reader.getFloat32(ptr + 12),\n        y: reader.getFloat32(ptr + 16),\n        z: reader.getFloat32(ptr + 20),\n        w: reader.getFloat32(ptr + 24)\n      },\n      scale: {\n        x: reader.getFloat32(ptr + 28),\n        y: reader.getFloat32(ptr + 32),\n        z: reader.getFloat32(ptr + 36)\n      },\n      parent: reader.getUint32(ptr + 40) as Entity\n    }\n  },\n  create(): TransformType {\n    return {\n      position: { x: 0, y: 0, z: 0 },\n      scale: { x: 1, y: 1, z: 1 },\n      rotation: { x: 0, y: 0, z: 0, w: 1 }\n    }\n  }\n}\n\nexport function defineTransformComponent({\n  defineComponentFromSchema\n}: Pick<IEngine, 'defineComponentFromSchema'>): ComponentDefinition<\n  ISchema<TransformType>,\n  Partial<TransformType>\n> {\n  return defineComponentFromSchema(TransformSchema, COMPONENT_ID)\n}\n","import { PreEngine } from '../engine'\nimport { ISchema } from '../schemas/ISchema'\n\nimport { defineLibraryComponents } from './generated/index.gen'\nimport * as MeshRendererSchema from './generated/MeshRenderer.gen'\nimport * as MeshColliderSchema from './generated/MeshCollider.gen'\nimport { PBMeshCollider } from './generated/pb/MeshCollider.gen'\nimport { PBMeshRenderer } from './generated/pb/MeshRenderer.gen'\nimport { defineTransformComponent } from './legacy/Transform'\n\nexport enum COMPONENT_ID {\n  SYNC = 1000\n}\n\n/**\n * @public\n */\nexport type SdkComponents = ReturnType<typeof defineSdkComponents>\n\nexport function defineSdkComponents(engine: PreEngine) {\n  const autogeneratedComponents = defineLibraryComponents(engine)\n\n  // This components are redefined below\n  engine.removeComponentDefinition(autogeneratedComponents.MeshRenderer._id)\n  engine.removeComponentDefinition(autogeneratedComponents.MeshCollider._id)\n\n  return {\n    ...autogeneratedComponents,\n    Transform: defineTransformComponent(engine),\n    MeshRenderer: engine.defineComponentFromSchema<\n      ISchema<PBMeshRenderer>,\n      Partial<PBMeshRenderer>\n    >(MeshRendererSchema.MeshRendererSchema, MeshRendererSchema.COMPONENT_ID),\n    MeshCollider: engine.defineComponentFromSchema<\n      ISchema<PBMeshCollider>,\n      Partial<PBMeshCollider>\n    >(MeshColliderSchema.MeshColliderSchema, MeshColliderSchema.COMPONENT_ID)\n  }\n}\n","import { ByteBuffer } from '../serialization/ByteBuffer'\nimport { ISchema } from './ISchema'\n\n/**\n * @public\n */\nexport function IArray<T>(type: ISchema<T>): ISchema<Array<T>> {\n  return {\n    serialize(value: Array<T>, builder: ByteBuffer): void {\n      builder.writeUint32(value.length)\n      for (const item of value) {\n        type.serialize(item, builder)\n      }\n    },\n    deserialize(reader: ByteBuffer): Array<T> {\n      const newArray: Array<T> = []\n      const length = reader.readUint32()\n      for (let index = 0; index < length; index++) {\n        newArray.push(type.deserialize(reader))\n      }\n      return newArray\n    },\n    create() {\n      return []\n    }\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const Bool: ISchema<boolean> = {\n  serialize(value: boolean, builder: ByteBuffer): void {\n    builder.writeInt8(value ? 1 : 0)\n  },\n  deserialize(reader: ByteBuffer): boolean {\n    return reader.readInt8() === 1\n  },\n  create() {\n    return false\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport function IEnum<T>(type: ISchema<any>): ISchema<T> {\n  return {\n    serialize(value: T, builder: ByteBuffer): void {\n      type.serialize(value, builder)\n    },\n    deserialize(reader: ByteBuffer): T {\n      return type.deserialize(reader)\n    },\n    create() {\n      return type.create()\n    }\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const Float32: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeFloat32(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readFloat32()\n  },\n  create() {\n    return 0.0\n  }\n}\n\n/**\n * @public\n */\nexport const Float64: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeFloat64(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readFloat64()\n  },\n  create() {\n    return 0.0\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const Int64: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt64(BigInt(value))\n  },\n  deserialize(reader: ByteBuffer): number {\n    return Number(reader.readInt64())\n  },\n  create() {\n    return 0\n  }\n}\n\n/**\n * @public\n */\nexport const Int32: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt32(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readInt32()\n  },\n  create() {\n    return 0\n  }\n}\n\n/**\n * @public\n */\nexport const Int16: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt16(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readInt16()\n  },\n  create() {\n    return 0\n  }\n}\n\n/**\n * @public\n */\nexport const Int8: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt8(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readInt8()\n  },\n  create() {\n    return 0\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const FlatString: ISchema<string> = {\n  serialize(value: string, builder: ByteBuffer): void {\n    builder.writeBuffer(new TextEncoder().encode(value))\n  },\n  deserialize(reader: ByteBuffer): string {\n    return new TextDecoder().decode(reader.readBuffer())\n  },\n  create() {\n    return ''\n  }\n}\n\n/**\n * @public\n */\nexport const EcsString = FlatString\n","import { ByteBuffer } from '../serialization/ByteBuffer'\nimport { ISchema } from './ISchema'\nimport { ToOptional } from './typing'\n\n/**\n * @public\n */\nexport interface Spec {\n  [key: string]: ISchema\n}\n\n/**\n * @public\n */\nexport type Result<T extends Spec> = ToOptional<{\n  [K in keyof T]: T[K] extends ISchema\n    ? ReturnType<T[K]['deserialize']>\n    : T[K] extends Spec\n    ? Result<T[K]>\n    : never\n}>\n\nexport type MapSchemaType<T extends Spec> = ISchema<Result<T>>\n\n/**\n * @public\n */\nexport function IMap<T extends Spec>(spec: T): ISchema<Result<T>> {\n  return {\n    serialize(value: Result<T>, builder: ByteBuffer): void {\n      for (const key in spec) {\n        // TODO: as any\n        spec[key].serialize((value as any)[key], builder)\n      }\n    },\n    deserialize(reader: ByteBuffer): Result<T> {\n      const newValue: Result<T> = {} as any\n      for (const key in spec) {\n        // TODO: as any\n        ;(newValue as any)[key] = spec[key].deserialize(reader)\n      }\n      return newValue\n    },\n    create() {\n      const newValue: Result<T> = {} as any\n      for (const key in spec) {\n        // TODO: as any\n        ;(newValue as any)[key] = spec[key].create()\n      }\n      return newValue\n    }\n  }\n}\n","import { ByteBuffer } from '../serialization/ByteBuffer'\nimport { ISchema } from './ISchema'\n\n/**\n * @public\n */\nexport function IOptional<T>(spec: ISchema<T>): ISchema<T | undefined> {\n  return {\n    serialize(value: T | undefined, builder: ByteBuffer): void {\n      if (value) {\n        builder.writeInt8(1)\n        spec.serialize(value, builder)\n      } else {\n        builder.writeInt8(0)\n      }\n    },\n    deserialize(reader: ByteBuffer): T | undefined {\n      const exists = reader.readInt8()\n      if (exists) {\n        return spec.deserialize(reader)\n      }\n    },\n    create() {\n      return undefined\n    }\n  }\n}\n","import { IArray } from './Array'\nimport { Bool } from './basic/Boolean'\nimport { IEnum } from './basic/Enum'\nimport { Float32, Float64 } from './basic/Float'\nimport { Int16, Int32, Int8, Int64 as iInt64 } from './basic/Integer'\nimport { EcsString } from './basic/String'\nimport { ISchema } from './ISchema'\nimport { IMap } from './Map'\nimport { IOptional } from './Optional'\n\n/**\n * @public\n */\nexport namespace Schemas {\n  export type SchemaType = ISchema\n\n  export const Boolean = Bool\n\n  export const String = EcsString\n\n  export const Float = Float32\n  export const Double = Float64\n\n  export const Byte = Int8\n  export const Short = Int16\n  export const Int = Int32\n  export const Int64 = iInt64\n\n  export const Number = Float32\n\n  export const Enum = IEnum\n  export const Array = IArray\n  export const Map = IMap\n  export const Optional = IOptional\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3RydWN0IG9mIHRoZSBtZXNzYWdlIHRoYXQncyBiZWluZyB0cmFuc2ZlcmVkIGJldHdlZW4gY2xpZW50cy5cbiAqIEBwdWJsaWNcbiAqL1xuZXhwb3J0IHR5cGUgTWVzc2FnZTxUID0gdW5rbm93bj4gPSB7XG4gIGtleTE6IG51bWJlclxuICBrZXkyOiBudW1iZXJcbiAgdGltZXN0YW1wOiBudW1iZXJcbiAgZGF0YTogVCB8IG51bGxcbn1cblxuLyoqXG4gKiBQYXlsb2FkIHRoYXQgaXRzIGJlaW5nIHN0b3JlZCBpbiB0aGUgc3RhdGUuXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCB0eXBlIFBheWxvYWQ8VCA9IHVua25vd24+ID0ge1xuICB0aW1lc3RhbXA6IG51bWJlclxuICBkYXRhOiBUIHwgbnVsbFxufVxuXG4vKipcbiAqIExvY2FsIHN0YXRlXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCB0eXBlIFN0YXRlPFQgPSB1bmtub3duPiA9IE1hcDxudW1iZXIsIE1hcDxudW1iZXIsIFBheWxvYWQ8VD4gfCBudWxsPj5cblxuLyoqXG4gKiBDUkRUIHJldHVybiB0eXBlXG4gKiBAcHVibGljXG4gKi9cbmV4cG9ydCB0eXBlIENSRFQ8VCA9IHVua25vd24+ID0ge1xuICBjcmVhdGVFdmVudChrZXkxOiBudW1iZXIsIGtleTI6IG51bWJlciwgZGF0YTogVCB8IG51bGwpOiBNZXNzYWdlPFQ+XG4gIHByb2Nlc3NNZXNzYWdlKG1lc3NhZ2U6IE1lc3NhZ2U8VD4pOiBNZXNzYWdlPFQ+XG4gIGdldFN0YXRlKCk6IFN0YXRlPFQ+XG59XG4iXX0=","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crdtProtocol = exports.stateIterator = exports.sameData = void 0;\n__exportStar(require(\"./types\"), exports);\nconst globalBuffer = globalThis.Buffer;\n/**\n * Compare raw data.\n * @internal\n */\nfunction sameData(a, b) {\n    // At reference level\n    if (a === b)\n        return true;\n    if (a instanceof Uint8Array && b instanceof Uint8Array) {\n        if (a.byteLength !== b.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < a.byteLength; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (globalBuffer) {\n        if (a instanceof globalBuffer && b instanceof globalBuffer) {\n            // Deep level\n            return a.equals(b);\n        }\n    }\n    return false;\n}\nexports.sameData = sameData;\n/**\n * State iterator\n * @internal\n */\nfunction* stateIterator(state) {\n    for (const [key1, value1] of state.entries()) {\n        for (const [key2, value2] of value1.entries()) {\n            yield [key1, key2, value2];\n        }\n    }\n}\nexports.stateIterator = stateIterator;\n/**\n * @public\n * CRDT protocol.\n * Stores the latest state, and decides whenever we have\n * to process and store the new data in case its an update, or\n * to discard and send our local value cause remote it's outdated.\n */\nfunction crdtProtocol() {\n    /**\n     * Local state where we store the latest lamport timestamp\n     * and the raw data value\n     * @internal\n     */\n    const state = new Map();\n    /**\n     * We should call this fn in order to update the state\n     * @internal\n     */\n    function updateState(key1, key2, data, remoteTimestamp) {\n        const key1Value = state.get(key1);\n        const timestamp = Math.max(remoteTimestamp, key1Value?.get(key2)?.timestamp || 0);\n        if (key1Value) {\n            key1Value.set(key2, { timestamp, data });\n        }\n        else {\n            const newKey1Value = new Map();\n            newKey1Value.set(key2, { timestamp, data });\n            state.set(key1, newKey1Value);\n        }\n        return { timestamp, data };\n    }\n    /**\n     * Create an event for the specified key and store the new data and\n     * lamport timestmap incremented by one in the state.\n     * @public\n     */\n    function createEvent(key1, key2, data) {\n        // Increment the timestamp\n        const timestamp = (state.get(key1)?.get(key2)?.timestamp || 0) + 1;\n        updateState(key1, key2, data, timestamp);\n        return { key1, key2, data, timestamp };\n    }\n    /**\n     * Process the received message only if the lamport number recieved is higher\n     * than the stored one. If its lower, we spread it to the network to correct the peer.\n     * If they are equal, the bigger raw data wins.\n  \n     * Returns the recieved data if the lamport number was bigger than ours.\n     * If it was an outdated message, then we return void\n     * @public\n     */\n    function processMessage(message) {\n        const { key1, key2, data, timestamp } = message;\n        const current = state.get(key1)?.get(key2);\n        // The received message is > than our current value, update our state.\n        if (!current || current.timestamp < timestamp) {\n            updateState(key1, key2, data, timestamp);\n            return message;\n        }\n        // Outdated Message. Resend our state message through the wire.\n        if (current.timestamp > timestamp) {\n            return {\n                key1,\n                key2,\n                data: current.data,\n                timestamp: current.timestamp\n            };\n        }\n        // Same data, same timestamp. Weirdo echo message.\n        if (sameData(current.data, data)) {\n            return message;\n        }\n        // Race condition, same timestamp diff data.\n        function compareData(current, data) {\n            return current > data;\n        }\n        if (compareData(current.data, data)) {\n            return {\n                key1,\n                key2,\n                data: current.data,\n                timestamp: current.timestamp\n            };\n        }\n        updateState(key1, key2, data, timestamp).data;\n        return message;\n    }\n    /**\n     * Returns the current state\n     * @public\n     */\n    function getState() {\n        return state;\n    }\n    return {\n        createEvent,\n        processMessage,\n        getState\n    };\n}\nexports.crdtProtocol = crdtProtocol;\n//# sourceMappingURL=data:application/json;base64,","/**\n * Take the max between currentSize and intendedSize and then plus 1024. Then,\n *  find the next nearer multiple of 1024.\n * @param currentSize - number\n * @param intendedSize - number\n * @returns the calculated number\n */\nfunction getNextSize(currentSize: number, intendedSize: number) {\n  const minNewSize = Math.max(currentSize, intendedSize) + 1024\n  return Math.ceil(minNewSize / 1024) * 1024\n}\n\n/**\n * @param writing - writing option, see object specs.\n * @param reading - reading option, see object specs.\n * @param initialCapacity - Initial capacity of buffer to allocate, ignored if you use writing or reading options\n */\nexport interface CreateByteBufferOptions {\n  /**\n   * @param buffer - a buffer already allocated to read from there.\n   * @param currentOffset - set the cursor where begins to read. Default 0\n   * @param length - delimite where the valid data ends. Default: buffer.length\n   */\n  reading?: {\n    buffer: Uint8Array\n    length?: number\n    currentOffset: number\n  }\n\n  /**\n   * @param buffer - a buffer already allocated to write there.\n   * @param currentOffset - set the cursor to not start writing from the begin of it. Default 0\n   */\n  writing?: {\n    buffer: Uint8Array\n    currentOffset?: number\n  }\n\n  initialCapacity?: number\n}\n\nconst defaultInitialCapacity = 10240\n\n/**\n * ByteBuffer is a wrapper of DataView which also adds a read and write offset.\n *  Also in a write operation it resizes the buffer is being used if it needs.\n *\n * - Use read and write function to generate or consume data.\n * - Use set and get only if you are sure that you're doing.\n */\nexport function createByteBuffer(options: CreateByteBufferOptions = {}) {\n  const initialROffset: number = options.reading?.currentOffset || 0\n  let initialBuffer: Uint8Array | null = null\n  let initialWOffset: number = 0\n\n  if (options.writing) {\n    initialBuffer = options.writing.buffer\n    if (options.writing.currentOffset) {\n      initialWOffset = options.writing.currentOffset\n    }\n  } else if (options.reading) {\n    initialBuffer = options.reading.buffer\n    initialWOffset = options.reading.length || options.reading.buffer.length\n  } else {\n    initialBuffer = new Uint8Array(\n      options.initialCapacity || defaultInitialCapacity\n    )\n  }\n\n  let buffer: Uint8Array = initialBuffer!\n  let view: DataView = new DataView(buffer.buffer, buffer.byteOffset)\n  let woffset: number = initialWOffset\n  let roffset: number = initialROffset\n\n  /**\n   * Increement the write offset and resize the buffer if it needs.\n   */\n  const woAdd = (amount: number) => {\n    if (woffset + amount > buffer.byteLength) {\n      const newsize = getNextSize(buffer.byteLength, woffset + amount)\n      const newBuffer = new Uint8Array(newsize)\n      newBuffer.set(buffer)\n      buffer = newBuffer\n      view = new DataView(buffer.buffer)\n    }\n\n    woffset += amount\n    return woffset - amount\n  }\n\n  /**\n   * Increment the read offset and throw an error if it's trying to read\n   *  outside the bounds.\n   */\n  const roAdd = (amount: number) => {\n    if (roffset + amount > woffset) {\n      throw new Error('Outside of the bounds of writen data.')\n    }\n\n    roffset += amount\n    return roffset - amount\n  }\n\n  return {\n    /**\n     * @returns The entire current Uint8Array.\n     *\n     * WARNING: if the buffer grows, the view had changed itself,\n     *  and the reference will be a invalid one.\n     */\n    buffer(): Uint8Array {\n      return buffer\n    },\n    /**\n     * @returns The capacity of the current buffer\n     */\n    bufferLength(): number {\n      return buffer.length\n    },\n    /**\n     * Resets byteBuffer to avoid creating a new one\n     */\n    resetBuffer(): void {\n      roffset = 0\n      woffset = 0\n    },\n    /**\n     * @returns The current read offset\n     */\n    currentReadOffset(): number {\n      return roffset\n    },\n    /**\n     * @returns The current write offset\n     */\n    currentWriteOffset(): number {\n      return woffset\n    },\n    /**\n     * Reading purpose\n     * Returns the previuos offsset size before incrementing\n     */\n    incrementReadOffset(amount: number): number {\n      return roAdd(amount)\n    },\n    /**\n     * @returns How many bytes are available to read.\n     */\n    remainingBytes(): number {\n      return woffset - roffset\n    },\n    readFloat32(): number {\n      return view.getFloat32(roAdd(4))\n    },\n    readFloat64(): number {\n      return view.getFloat64(roAdd(8))\n    },\n    readInt8(): number {\n      return view.getInt8(roAdd(1))\n    },\n    readInt16(): number {\n      return view.getInt16(roAdd(2))\n    },\n    readInt32(): number {\n      return view.getInt32(roAdd(4))\n    },\n    readInt64(): bigint {\n      return view.getBigInt64(roAdd(8))\n    },\n    readUint8(): number {\n      return view.getUint8(roAdd(1))\n    },\n    readUint16(): number {\n      return view.getUint16(roAdd(2))\n    },\n    readUint32(): number {\n      return view.getUint32(roAdd(4))\n    },\n    readUint64(): bigint {\n      return view.getBigUint64(roAdd(8))\n    },\n    readBuffer() {\n      const length = view.getUint32(roAdd(4))\n      return buffer.subarray(roAdd(length), roAdd(0))\n    },\n    /**\n     * Writing purpose\n     */\n    /**\n     * Increment offset\n     * @param amount - how many bytes\n     * @returns The offset when this reserving starts.\n     */\n    incrementWriteOffset(amount: number): number {\n      return woAdd(amount)\n    },\n    /**\n     * @returns The total number of bytes writen in the buffer.\n     */\n    size(): number {\n      return woffset\n    },\n    /**\n     * Take care using this function, if you modify the data after, the\n     * returned subarray will change too. If you'll modify the content of the\n     * bytebuffer, maybe you want to use toCopiedBinary()\n     *\n     * @returns The subarray from 0 to offset as reference.\n     */\n    toBinary() {\n      return buffer.subarray(0, woffset)\n    },\n\n    /**\n     * Safe copied buffer of the current data of ByteBuffer\n     *\n     * @returns The subarray from 0 to offset.\n     */\n    toCopiedBinary() {\n      return new Uint8Array(this.toBinary())\n    },\n\n    writeBuffer(value: Uint8Array, writeLength: boolean = true) {\n      if (writeLength) {\n        this.writeUint32(value.byteLength)\n      }\n\n      const o = woAdd(value.byteLength)\n      buffer.set(value, o)\n    },\n    writeFloat32(value: number): void {\n      const o = woAdd(4)\n      view.setFloat32(o, value)\n    },\n    writeFloat64(value: number): void {\n      const o = woAdd(8)\n      view.setFloat64(o, value)\n    },\n    writeInt8(value: number): void {\n      const o = woAdd(1)\n      view.setInt8(o, value)\n    },\n    writeInt16(value: number): void {\n      const o = woAdd(2)\n      view.setInt16(o, value)\n    },\n    writeInt32(value: number): void {\n      const o = woAdd(4)\n      view.setInt32(o, value)\n    },\n    writeInt64(value: bigint): void {\n      const o = woAdd(8)\n      view.setBigInt64(o, value)\n    },\n    writeUint8(value: number): void {\n      const o = woAdd(1)\n      view.setUint8(o, value)\n    },\n    writeUint16(value: number): void {\n      const o = woAdd(2)\n      view.setUint16(o, value)\n    },\n    writeUint32(value: number): void {\n      const o = woAdd(4)\n      view.setUint32(o, value)\n    },\n    writeUint64(value: bigint): void {\n      const o = woAdd(8)\n      view.setBigUint64(o, value)\n    },\n    // Dataview Proxy\n    getFloat32(offset: number): number {\n      return view.getFloat32(offset)\n    },\n    getFloat64(offset: number): number {\n      return view.getFloat64(offset)\n    },\n    getInt8(offset: number): number {\n      return view.getInt8(offset)\n    },\n    getInt16(offset: number): number {\n      return view.getInt16(offset)\n    },\n    getInt32(offset: number): number {\n      return view.getInt32(offset)\n    },\n    getInt64(offset: number): bigint {\n      return view.getBigInt64(offset)\n    },\n    getUint8(offset: number): number {\n      return view.getUint8(offset)\n    },\n    getUint16(offset: number): number {\n      return view.getUint16(offset)\n    },\n    getUint32(offset: number): number {\n      return view.getUint32(offset)\n    },\n    getUint64(offset: number): bigint {\n      return view.getBigUint64(offset)\n    },\n    setFloat32(offset: number, value: number): void {\n      view.setFloat32(offset, value)\n    },\n    setFloat64(offset: number, value: number): void {\n      view.setFloat64(offset, value)\n    },\n    setInt8(offset: number, value: number): void {\n      view.setInt8(offset, value)\n    },\n    setInt16(offset: number, value: number): void {\n      view.setInt16(offset, value)\n    },\n    setInt32(offset: number, value: number): void {\n      view.setInt32(offset, value)\n    },\n    setInt64(offset: number, value: bigint): void {\n      view.setBigInt64(offset, value)\n    },\n    setUint8(offset: number, value: number): void {\n      view.setUint8(offset, value)\n    },\n    setUint16(offset: number, value: number): void {\n      view.setUint16(offset, value)\n    },\n    setUint32(offset: number, value: number): void {\n      view.setUint32(offset, value)\n    },\n    setUint64(offset: number, value: bigint): void {\n      view.setBigUint64(offset, value)\n    }\n  }\n}\n\n/**\n * @public\n */\nexport type ByteBuffer = ReturnType<typeof createByteBuffer>\n","/**\n * The wire message is the top-level message that can be packed\n *  inside it can contain a data with another structure or protocol\n *\n * Each wire message has three primitive property that it'll never change\n *   ---> length        uint32 (message size up to 4,294,967,295)\n *   ---> version       uint32 (for now just a number which is zero)\n *   ---> message type  uint32\n * The length indicates how many bytes are above self, the version in\n * combination with message type defines the set of handlers that will be\n * available to process the message\n *\n */\n\nimport { ByteBuffer } from './ByteBuffer'\n\ntype Uint32 = number\n\nexport namespace WireMessage {\n  export enum Enum {\n    RESERVED = 0,\n\n    // Component Operation\n    PUT_COMPONENT = 1,\n    DELETE_COMPONENT = 2,\n\n    MAX_MESSAGE_TYPE\n  }\n\n  /**\n   * @param length - Uint32 the length of all message (including the header)\n   * @param type - define the function which handles the data\n   */\n  export type Header = {\n    length: Uint32\n    type: Uint32\n  }\n\n  export const HEADER_LENGTH = 8\n  /**\n   * Validate if the message incoming is completed\n   * @param buf - ByteBuffer\n   */\n  export function validate(buf: ByteBuffer) {\n    const rem = buf.remainingBytes()\n    if (rem < HEADER_LENGTH) {\n      return false\n    }\n\n    const messageLength = buf.getUint32(buf.currentReadOffset())\n    if (rem < messageLength) {\n      return false\n    }\n\n    return true\n  }\n\n  export function readHeader(buf: ByteBuffer): Header | null {\n    if (!validate(buf)) {\n      return null\n    }\n\n    return {\n      length: buf.readUint32(),\n      type: buf.readUint32() as Enum\n    }\n  }\n}\n\nexport default WireMessage\n","import { ComponentDefinition } from '../../engine/component'\nimport { Entity } from '../../engine/entity'\nimport { ByteBuffer } from '../ByteBuffer'\nimport WireMessage from '../wireMessage'\n\nexport namespace ComponentOperation {\n  /**\n   * @param entity - Uint32 number of the entity\n   * @param componentId - Uint32 number of id\n   * @param timestamp - Uint64 Lamport timestamp\n   * @param data - Uint8[] data of component\n   */\n  export type IPutComponent = {\n    entity: Entity\n    componentId: number\n    timestamp: number\n    data: Uint8Array\n  }\n  export type IDeleteComponent = {\n    entity: Entity\n    componentId: number\n    timestamp: number\n    data?: undefined\n  }\n\n  export const MESSAGE_HEADER_LENGTH = 20\n  /**\n   * Call this function for an optimal writing data passing the ByteBuffer\n   *  already allocated\n   */\n  export function write(\n    type: WireMessage.Enum,\n    entity: Entity,\n    timestamp: number,\n    componentDefinition: ComponentDefinition,\n    buf: ByteBuffer\n  ) {\n    // reserve the beginning\n    const startMessageOffset = buf.incrementWriteOffset(\n      WireMessage.HEADER_LENGTH + MESSAGE_HEADER_LENGTH\n    )\n\n    // write body\n    if (type === WireMessage.Enum.PUT_COMPONENT) {\n      componentDefinition.writeToByteBuffer(entity, buf)\n    }\n    const messageLength = buf.size() - startMessageOffset\n\n    // Write WireMessage header\n    buf.setUint32(startMessageOffset, messageLength)\n    buf.setUint32(startMessageOffset + 4, type)\n\n    // Write ComponentOperation header\n    buf.setUint32(startMessageOffset + 8, entity)\n    buf.setUint32(startMessageOffset + 12, componentDefinition._id)\n    buf.setUint64(startMessageOffset + 16, BigInt(timestamp))\n    buf.setUint32(\n      startMessageOffset + 24,\n      messageLength - MESSAGE_HEADER_LENGTH - WireMessage.HEADER_LENGTH\n    )\n  }\n\n  export function read(\n    buf: ByteBuffer\n  ): (WireMessage.Header & (IPutComponent | IDeleteComponent)) | null {\n    const header = WireMessage.readHeader(buf)\n\n    if (!header) {\n      return null\n    }\n\n    const common = {\n      ...header,\n      entity: buf.readUint32() as Entity,\n      componentId: buf.readInt32(),\n      timestamp: Number(buf.readUint64())\n    }\n\n    if (header.type === WireMessage.Enum.DELETE_COMPONENT) {\n      return common\n    }\n\n    return {\n      ...common,\n      data: buf.readBuffer()\n    }\n  }\n}\n","import { Entity } from './entity'\n\nexport namespace EntityUtils {\n  /**\n   * Range is the first element and the last possible element, they both are included in the interval.\n   * [start, end]\n   */\n  export type EntityRange = readonly [number, number]\n\n  export const MAX_ENTITIES = 0xffffffff\n  export const DYNAMIC_ENTITIES_START_AT = 100e3\n  export const RESERVED_STATIC_ENTITIES = 512\n\n  export const RESERVED_ENTITIES_RANGE: EntityRange = [\n    0,\n    RESERVED_STATIC_ENTITIES - 1\n  ]\n\n  export const STATIC_ENTITIES_RANGE: EntityRange = [\n    RESERVED_STATIC_ENTITIES,\n    DYNAMIC_ENTITIES_START_AT - 1\n  ]\n\n  export const DYNAMIC_ENTITIES_RANGE: EntityRange = [\n    DYNAMIC_ENTITIES_START_AT,\n    MAX_ENTITIES\n  ]\n\n  function isInRange(entity: Entity, range: EntityRange): boolean {\n    return entity >= range[0] && entity <= range[1]\n  }\n\n  export function isDynamicEntity(entity: Entity) {\n    return isInRange(entity, DYNAMIC_ENTITIES_RANGE)\n  }\n\n  export function isStaticEntity(entity: Entity) {\n    return isInRange(entity, STATIC_ENTITIES_RANGE)\n  }\n\n  export function isReservedEntity(entity: Entity) {\n    return isInRange(entity, RESERVED_ENTITIES_RANGE)\n  }\n}\n\nexport default EntityUtils\n","import { crdtProtocol, Message as CrdtMessage } from '@dcl/crdt'\n\nimport type { PreEngine } from '../../engine'\nimport { Entity } from '../../engine/entity'\nimport { createByteBuffer } from '../../serialization/ByteBuffer'\nimport { ComponentOperation as Message } from '../../serialization/crdt/componentOperation'\nimport WireMessage from '../../serialization/wireMessage'\nimport { Transport } from './transports/types'\nimport { ReceiveMessage, TransportMessage } from './types'\n\nexport function crdtSceneSystem({\n  engine,\n  transports\n}: {\n  engine: PreEngine\n  transports: Transport[]\n}) {\n  // CRDT Client\n  const crdtClient = crdtProtocol<Uint8Array>()\n  // Messages that we received at transport.onMessage waiting to be processed\n  const receivedMessages: ReceiveMessage[] = []\n  // Messages already processed by the engine but that we need to broadcast to other transports.\n  const transportMessages: TransportMessage[] = []\n  // Map of entities already processed at least once\n\n  transports.forEach(\n    (transport) => (transport.onmessage = parseChunkMessage(transport.type))\n  )\n\n  /**\n   *\n   * @param transportType tranport id to identiy messages\n   * @returns a function to process received messages\n   */\n  function parseChunkMessage(transportType: string) {\n    /**\n     * Receives a chunk of binary messages and stores all the valid\n     * Component Operation Messages at messages queue\n     * @param chunkMessage A chunk of binary messages\n     */\n    return function parseChunkMessage(chunkMessage: Uint8Array) {\n      const buffer = createByteBuffer({\n        reading: { buffer: chunkMessage, currentOffset: 0 }\n      })\n\n      while (WireMessage.validate(buffer)) {\n        const offset = buffer.currentReadOffset()\n        const message = Message.read(buffer)!\n\n        const { type, entity, componentId, data, timestamp } = message\n        receivedMessages.push({\n          type,\n          entity,\n          componentId,\n          data,\n          timestamp,\n          transportType,\n          messageBuffer: buffer\n            .buffer()\n            .subarray(offset, buffer.currentReadOffset())\n        })\n      }\n    }\n  }\n\n  /**\n   * Return and clear the messaes queue\n   * @returns messages recieved by the transport to process on the next tick\n   */\n  function getMessages<T = unknown>(value: T[]) {\n    const messagesToProcess = Array.from(value)\n    value.length = 0\n    return messagesToProcess\n  }\n\n  /**\n   * This fn will be called on every tick.\n   * Process all the messages queue received by the transport\n   */\n  function receiveMessages() {\n    const messagesToProcess = getMessages(receivedMessages)\n    for (const transport of transports) {\n      const buffer = createByteBuffer()\n      for (const message of messagesToProcess) {\n        const { data, timestamp, componentId, entity, type } = message\n        const crdtMessage: CrdtMessage<Uint8Array> = {\n          key1: entity,\n          key2: componentId,\n          data: data || null,\n          timestamp: timestamp\n        }\n        const component = engine.getComponent(componentId)\n        const current = crdtClient.processMessage(crdtMessage)\n\n        // CRDT outdated message. Resend this message through the wire\n        if (crdtMessage !== current) {\n          const type = component.has(entity)\n            ? WireMessage.Enum.PUT_COMPONENT\n            : WireMessage.Enum.DELETE_COMPONENT\n          Message.write(type, entity, current.timestamp, component, buffer)\n        } else {\n          // Process CRDT Message\n          if (type === WireMessage.Enum.DELETE_COMPONENT) {\n            component.deleteFrom(entity)\n          } else {\n            const opts = {\n              reading: { buffer: message.data!, currentOffset: 0 }\n            }\n            const bb = createByteBuffer(opts)\n\n            // Update engine component\n            component.upsertFromBinary(message.entity, bb)\n            component.clearDirty()\n          }\n          // Add message to transport queue to be processed by others transports\n          transportMessages.push(message)\n        }\n      }\n\n      if (buffer.size()) {\n        transport.send(buffer.toBinary())\n      }\n    }\n  }\n\n  /**\n   * Iterates the dirty map and generates crdt messages to be send\n   * @param dirtyMap a map of { entities: [componentId] }\n   */\n  function createMessages(dirtyMap: Map<Entity, Set<number>>) {\n    // CRDT Messages will be the merge between the recieved transport messages and the new crdt messages\n    const crdtMessages = getMessages(transportMessages)\n    const buffer = createByteBuffer()\n\n    for (const [entity, componentsId] of dirtyMap) {\n      for (const componentId of componentsId) {\n        const component = engine.getComponent(componentId)\n        const entityComponent = component.has(entity)\n          ? component.toBinary(entity).toBinary()\n          : null\n        const event = crdtClient.createEvent(\n          entity,\n          componentId,\n          entityComponent\n        )\n        const offset = buffer.currentWriteOffset()\n        const type = component.has(entity)\n          ? WireMessage.Enum.PUT_COMPONENT\n          : WireMessage.Enum.DELETE_COMPONENT\n        const transportMessage: Omit<TransportMessage, 'messageBuffer'> = {\n          type,\n          componentId,\n          entity,\n          timestamp: event.timestamp\n        }\n        if (transports.some((t) => t.filter(transportMessage))) {\n          Message.write(type, entity, event.timestamp, component, buffer)\n          crdtMessages.push({\n            ...transportMessage,\n            messageBuffer: buffer\n              .buffer()\n              .subarray(offset, buffer.currentWriteOffset())\n          })\n        }\n      }\n    }\n\n    // Send messages to transports\n    const transportBuffer = createByteBuffer()\n    for (const transport of transports) {\n      transportBuffer.resetBuffer()\n      for (const message of crdtMessages) {\n        if (transport.filter(message)) {\n          transportBuffer.writeBuffer(message.messageBuffer, false)\n        }\n      }\n      if (transportBuffer.size()) {\n        transport.send(transportBuffer.toBinary())\n      }\n    }\n  }\n\n  return {\n    createMessages,\n    receiveMessages\n  }\n}\n","import { ComponentDefinition } from './component'\n\n/**\n * @public\n */\nexport type DeepReadonlyMap<K, V> = ReadonlyMap<\n  DeepReadonly<K>,\n  DeepReadonly<V>\n>\n/**\n * @public\n */\nexport type DeepReadonlySet<T> = ReadonlySet<DeepReadonly<T>>\n/**\n * @public\n */\nexport type DeepReadonlyObject<T> = {\n  readonly [K in keyof T]: DeepReadonly<T[K]>\n}\n/**\n * @public\n */\nexport type ReadonlyPrimitive =\n  | number\n  | string\n  | number[]\n  | string[]\n  | boolean\n  | boolean[]\n\n/**\n * @public\n */\nexport type ReadonlyComponentSchema<\n  T extends [ComponentDefinition, ...ComponentDefinition[]]\n> = {\n  [K in keyof T]: T[K] extends ComponentDefinition\n    ? ReturnType<T[K]['get']>\n    : never\n}\n\n/**\n * @public\n */\nexport type DeepReadonly<T> = T extends ReadonlyPrimitive\n  ? T\n  : T extends Map<infer K, infer V>\n  ? DeepReadonlyMap<K, V>\n  : T extends Set<infer M>\n  ? DeepReadonlySet<M>\n  : DeepReadonlyObject<T>\n\n/**\n * @internal\n */\nexport function deepReadonly<T extends Record<string, unknown>>(\n  val: T\n): DeepReadonly<T> {\n  return Object.freeze({ ...val }) as DeepReadonly<T>\n}\n","import type { ISchema } from '../schemas/ISchema'\nimport { ByteBuffer, createByteBuffer } from '../serialization/ByteBuffer'\nimport { Entity } from './entity'\nimport { deepReadonly, DeepReadonly } from './readonly'\n\n/**\n * @public\n */\nexport type EcsResult<T extends ISchema> = T extends ISchema\n  ? ReturnType<T['deserialize']>\n  : never\n\n/**\n * @public\n */\nexport type ComponentType<T extends ISchema> = EcsResult<T>\n\n/**\n * @public\n */\nexport type ComponentDefinition<\n  T extends ISchema = ISchema<any>,\n  ConstructorType = ComponentType<T>\n> = {\n  _id: number\n\n  /**\n   * Return the default value of the current component\n   */\n  default(): DeepReadonly<ComponentType<T>>\n\n  /**\n   * Get if the entity has this component\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.has(myEntity) // return false\n   * Transform.create(myEntity)\n   * Transform.has(myEntity) // return true\n   * ```\n   */\n  has(entity: Entity): boolean\n\n  /**\n   * Get the readonly component of the entity (to mutate it, use getMutable instead), throw an error if the entity doesn't have the component.\n   * @param entity\n   * @return\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity)\n   * const transform = Transform.get(myEntity) // return true\n   * log(transform.position.x === 0) // log 'true'\n   *\n   * transform.position.y = 10 // illegal statement, to mutate the component use getMutable\n   * ```\n   *\n   * ```ts\n   * const otherEntity = engine.addEntity()\n   * Transform.get(otherEntity) // throw an error!!\n   * ```\n   */\n  get(entity: Entity): DeepReadonly<ComponentType<T>>\n\n  /**\n   * Get the readonly component of the entity (to mutate it, use getMutable instead), or null if the entity doesn't have the component.\n   * @param entity\n   * @return\n   *\n   * Example:\n   * ```ts\n   * const otherEntity = engine.addEntity()\n   * log(Transform.get(otherEntity) === null) // log 'true'\n   * ```\n   */\n  getOrNull(entity: Entity): DeepReadonly<ComponentType<T>> | null\n\n  /**\n   * Add the current component to an entity, throw an error if the component already exists (use `createOrReplace` instead).\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   * @param val The initial value\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity, { ...Transform.default(), position: {x: 4, y: 0, z: 4} }) // ok!\n   * Transform.create(myEntity) // throw an error, the `Transform` component already exists in `myEntity`\n   * ````\n   */\n  create(entity: Entity, val?: ConstructorType): ComponentType<T>\n  /**\n   * Add the current component to an entity or replace the content if the entity already has the component\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   * @param val The initial or new value\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity) // ok!\n   * Transform.createOrReplace(myEntity, { ...Transform.default(), position: {x: 4, y: 0, z: 4} }) // ok!\n   * ````\n   */\n  createOrReplace(entity: Entity, val?: ComponentType<T>): ComponentType<T>\n\n  /**\n   * Delete the current component to an entity, return null if the entity doesn't have the current component.\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity) // ok!\n   * Transform.deleteFrom(myEntity) // return the component\n   * Transform.deleteFrom(myEntity) // return null\n   * ````\n   */\n  deleteFrom(entity: Entity): ComponentType<T> | null\n\n  /**\n   * Get the mutable component of the entity, throw an error if the entity doesn't have the component.\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity)\n   * Transform.getMutable(myEntity).position = {x: 4, y: 0, z: 4}\n   * ````\n   */\n  getMutable(entity: Entity): ComponentType<T>\n\n  /**\n   * Get the mutable component of the entity, return null if the entity doesn't have the component.\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const transform = Transform.getMutableOrNull(myEntity)\n   * if (transform) {\n   *   transform.position = {x: 4, y: 0, z: 4}\n   * }\n   * ````\n   */\n  getMutableOrNull(entity: Entity): ComponentType<T> | null\n\n  /**\n   * @internal\n   * @param entity\n   * @param data\n   */\n  upsertFromBinary(entity: Entity, data: ByteBuffer): ComponentType<T> | null\n  /**\n   * @internal\n   * @param entity\n   * @param data\n   */\n  updateFromBinary(entity: Entity, data: ByteBuffer): ComponentType<T> | null\n\n  // allocates a buffer and returns new buffer\n  /**\n   * @internal\n   * @param entity\n   */\n  toBinary(entity: Entity): ByteBuffer\n\n  // writes to a pre-allocated buffer\n  writeToByteBuffer(entity: Entity, buffer: ByteBuffer): void\n\n  /**\n   * @internal Use engine.getEntitiesWith(Component) instead.\n   * Get the iterator to every entity has the component\n   */\n  iterator(): Iterable<[Entity, ComponentType<T>]>\n\n  // Dirty\n  /**\n   * @internal\n   */\n  dirtyIterator(): Iterable<Entity>\n  /**\n   * @internal\n   */\n  clearDirty(): void\n  /**\n   * @internal\n   */\n  isDirty(entity: Entity): boolean\n}\n\nexport function defineComponent<\n  T extends ISchema,\n  ConstructorType = ComponentType<T>\n>(\n  componentId: number,\n  spec: T,\n  constructorDefault?: ConstructorType\n  // meta: { syncFlags }\n): ComponentDefinition<T, ConstructorType> {\n  const data = new Map<Entity, ComponentType<T>>()\n  const dirtyIterator = new Set<Entity>()\n\n  const defaultBuffer = createByteBuffer()\n  if (constructorDefault) {\n    spec.serialize(constructorDefault, defaultBuffer)\n  }\n\n  function getDefaultValue() {\n    if (constructorDefault) {\n      return spec.deserialize(\n        createByteBuffer({\n          writing: {\n            buffer: defaultBuffer.buffer(),\n            currentOffset: defaultBuffer.currentWriteOffset()\n          }\n        })\n      )\n    } else {\n      return spec.create()\n    }\n  }\n\n  function prefillValue(value: ConstructorType) {\n    return { ...getDefaultValue(), ...value }\n  }\n\n  return {\n    _id: componentId,\n    default: function () {\n      return getDefaultValue()\n    },\n    isDirty: function (entity: Entity): boolean {\n      return dirtyIterator.has(entity)\n    },\n    has: function (entity: Entity): boolean {\n      return data.has(entity)\n    },\n    deleteFrom: function (entity: Entity): ComponentType<T> | null {\n      const component = data.get(entity)\n      data.delete(entity)\n      dirtyIterator.add(entity)\n      return component || null\n    },\n    getOrNull: function (\n      entity: Entity\n    ): DeepReadonly<ComponentType<T>> | null {\n      const component = data.get(entity)\n      return component ? deepReadonly(component) : null\n    },\n    get: function (entity: Entity): DeepReadonly<ComponentType<T>> {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[getFrom] Component ${componentId} for ${entity} not found`\n        )\n      }\n      return deepReadonly(component)\n    },\n    create: function (\n      entity: Entity,\n      value?: ConstructorType\n    ): ComponentType<T> {\n      const component = data.get(entity)\n      if (component) {\n        throw new Error(\n          `[create] Component ${componentId} for ${entity} already exists`\n        )\n      }\n      const usedValue =\n        value === undefined ? getDefaultValue() : prefillValue(value)\n      data.set(entity, usedValue)\n      dirtyIterator.add(entity)\n      return usedValue\n    },\n    createOrReplace: function (\n      entity: Entity,\n      value?: ConstructorType\n    ): ComponentType<T> {\n      const usedValue =\n        value === undefined ? getDefaultValue() : prefillValue(value)\n      data.set(entity, usedValue!)\n      dirtyIterator.add(entity)\n      return usedValue!\n    },\n    getMutableOrNull: function (entity: Entity): ComponentType<T> | null {\n      const component = data.get(entity)\n      if (!component) {\n        return null\n      }\n      dirtyIterator.add(entity)\n      return component\n    },\n    getMutable: function (entity: Entity): ComponentType<T> {\n      const component = this.getMutableOrNull(entity)\n      if (component === null) {\n        throw new Error(\n          `[mutable] Component ${componentId} for ${entity} not found`\n        )\n      }\n      return component\n    },\n    iterator: function* (): Iterable<[Entity, ComponentType<T>]> {\n      for (const [entity, component] of data) {\n        yield [entity, component]\n      }\n    },\n    dirtyIterator: function* (): Iterable<Entity> {\n      for (const entity of dirtyIterator) {\n        yield entity\n      }\n    },\n    toBinary(entity: Entity): ByteBuffer {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[toBinary] Component ${componentId} for ${entity} not found`\n        )\n      }\n\n      const writeBuffer = createByteBuffer()\n      spec.serialize(component, writeBuffer)\n      return writeBuffer\n    },\n    writeToByteBuffer(entity: Entity, buffer: ByteBuffer): void {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[writeToByteBuffer] Component ${componentId} for ${entity} not found`\n        )\n      }\n\n      spec.serialize(component, buffer)\n    },\n    updateFromBinary(\n      entity: Entity,\n      buffer: ByteBuffer\n    ): ComponentType<T> | null {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[updateFromBinary] Component ${componentId} for ${entity} not found`\n        )\n      }\n      return this.upsertFromBinary(entity, buffer)\n    },\n    upsertFromBinary(\n      entity: Entity,\n      buffer: ByteBuffer\n    ): ComponentType<T> | null {\n      const newValue = spec.deserialize(buffer)\n      data.set(entity, newValue)\n      dirtyIterator.add(entity)\n      return newValue\n    },\n    clearDirty: function () {\n      dirtyIterator.clear()\n    }\n  }\n}\n","import { EntityUtils } from './entity-utils'\n\ndeclare const entitySymbol: unique symbol\n/**\n * @public\n */\nexport type Entity = number & { [entitySymbol]: true }\n\nexport function EntityContainer() {\n  const staticEntity = Entity(EntityUtils.STATIC_ENTITIES_RANGE)\n  const dynamicEntity = Entity(EntityUtils.DYNAMIC_ENTITIES_RANGE)\n  return {\n    generateEntity(dynamic: boolean = false): Entity {\n      if (dynamic) {\n        return dynamicEntity.generateEntity()\n      } else {\n        return staticEntity.generateEntity()\n      }\n    },\n    removeEntity(entity: Entity): boolean {\n      return (\n        staticEntity.removeEntity(entity) || dynamicEntity.removeEntity(entity)\n      )\n    },\n    isEntityExists(entity: Entity): boolean {\n      return (\n        EntityUtils.isReservedEntity(entity) ||\n        staticEntity.getExistingEntities().has(entity) ||\n        dynamicEntity.getExistingEntities().has(entity)\n      )\n    },\n    getExistingEntities(): Set<Entity> {\n      return new Set([\n        ...staticEntity.getExistingEntities(),\n        ...dynamicEntity.getExistingEntities()\n      ])\n    }\n  }\n}\n\nfunction Entity(range: EntityUtils.EntityRange) {\n  function createEntity(entity: number): Entity {\n    return entity as Entity\n  }\n\n  let entityCounter = range[0]\n  const usedEntities: Set<Entity> = new Set()\n\n  function generateEntity(): Entity {\n    if (entityCounter >= range[1]) {\n      throw new Error(\n        `It fails trying to generate an entity out of range [${range[0]}, ${range[1]}].`\n      )\n    }\n\n    const entity = createEntity(entityCounter)\n    entityCounter++\n\n    usedEntities.add(entity)\n    return entity\n  }\n\n  function removeEntity(entity: Entity) {\n    return usedEntities.delete(entity)\n  }\n\n  return {\n    getExistingEntities() {\n      return new Set(usedEntities)\n    },\n    generateEntity,\n    removeEntity\n  }\n}\n","/**\n * @public\n */\nexport type SystemFn = (dt: number) => void\n\nexport const SYSTEMS_REGULAR_PRIORITY = 100e3\n\ntype System = {\n  fn: SystemFn\n  priority: number\n  name?: string\n}\n\nexport function SystemContainer() {\n  const systems: System[] = []\n\n  function sort() {\n    systems.sort((a, b) => b.priority - a.priority)\n  }\n\n  function add(fn: SystemFn, priority: number, name?: string): void {\n    if (systems.find((item) => item.fn === fn)) {\n      throw new Error('System already added')\n    } else if (name && systems.find((item) => item.name === name)) {\n      throw new Error('System name already used')\n    }\n\n    systems.push({\n      fn,\n      priority,\n      name\n    })\n    sort()\n  }\n\n  function remove(selector: string | SystemFn) {\n    let index = -1\n\n    if (typeof selector === 'string') {\n      index = systems.findIndex((item) => item.name === selector)\n    } else {\n      index = systems.findIndex((item) => item.fn === selector)\n    }\n\n    if (index === -1) {\n      return false\n    }\n\n    systems.splice(index, 1)\n    sort()\n    return true\n  }\n\n  return {\n    add,\n    remove,\n    getSystems() {\n      return systems\n    }\n  }\n}\n","import { defineSdkComponents } from '../components'\nimport { Schemas } from '../schemas'\nimport { ISchema } from '../schemas/ISchema'\nimport { Result, Spec } from '../schemas/Map'\nimport { ByteBuffer } from '../serialization/ByteBuffer'\nimport { crdtSceneSystem } from '../systems/crdt'\nimport {\n  ComponentDefinition,\n  ComponentType,\n  defineComponent as defComponent\n} from './component'\nimport { Entity, EntityContainer } from './entity'\nimport { SystemContainer, SYSTEMS_REGULAR_PRIORITY, SystemFn } from './systems'\nimport type { IEngineParams, IEngine } from './types'\nimport { ReadonlyComponentSchema } from './readonly'\n\nexport * from './readonly'\nexport * from './types'\nexport { ComponentType, Entity, ByteBuffer, ComponentDefinition }\n\nfunction preEngine() {\n  const entityContainer = EntityContainer()\n  const componentsDefinition = new Map<number, ComponentDefinition<any>>()\n  // TODO: find a way to make this work.\n  // Maybe a proxy/callback to be up-to-date\n  const entitiesComponent = new Map<\n    number,\n    Set<ComponentDefinition<any>['_id']>\n  >()\n  const systems = SystemContainer()\n\n  function addSystem(\n    fn: SystemFn,\n    priority: number = SYSTEMS_REGULAR_PRIORITY,\n    name?: string\n  ) {\n    systems.add(fn, priority, name)\n  }\n\n  function removeSystem(selector: string | SystemFn) {\n    return systems.remove(selector)\n  }\n\n  function addEntity(dynamic: boolean = false) {\n    // entitiesCompnonent.set(entity, new Set())\n    const entity = entityContainer.generateEntity(dynamic)\n    return entity\n  }\n\n  function addDynamicEntity() {\n    return addEntity(true)\n  }\n\n  function removeEntity(entity: Entity) {\n    for (const [, component] of componentsDefinition) {\n      if (component.has(entity)) {\n        component.deleteFrom(entity)\n      }\n    }\n\n    return entityContainer.removeEntity(entity)\n  }\n\n  function defineComponentFromSchema<\n    T extends ISchema,\n    ConstructorType = ComponentType<T>\n  >(\n    spec: T,\n    componentId: number,\n    constructorDefault?: ConstructorType\n  ): ComponentDefinition<T, ConstructorType> {\n    if (componentsDefinition.get(componentId)) {\n      throw new Error(`Component ${componentId} already declared`)\n    }\n    const newComponent = defComponent<T, ConstructorType>(\n      componentId,\n      spec,\n      constructorDefault\n    )\n    componentsDefinition.set(componentId, newComponent)\n    return newComponent\n  }\n\n  function defineComponent<\n    T extends Spec,\n    ConstructorType = Partial<Result<T>>\n  >(\n    spec: T,\n    componentId: number,\n    constructorDefault?: ConstructorType\n  ): ComponentDefinition<ISchema<Result<T>>, ConstructorType> {\n    return defineComponentFromSchema(\n      Schemas.Map(spec),\n      componentId,\n      constructorDefault\n    )\n  }\n\n  function getComponent<T extends ISchema>(\n    componentId: number\n  ): ComponentDefinition<T> {\n    const component = componentsDefinition.get(componentId)\n    if (!component) {\n      throw new Error(\n        `Component ${componentId} not found. You need to declare the components at the beginnig of the engine declaration`\n      )\n    }\n    return component\n  }\n\n  function* getEntitiesWith<\n    T extends [ComponentDefinition, ...ComponentDefinition[]]\n  >(...components: T): Iterable<[Entity, ...ReadonlyComponentSchema<T>]> {\n    for (const [entity, ...groupComp] of getComponentDefGroup(...components)) {\n      yield [entity, ...groupComp.map((c) => c.get(entity))] as [\n        Entity,\n        ...ReadonlyComponentSchema<T>\n      ]\n    }\n  }\n\n  function* getComponentDefGroup<T extends ComponentDefinition[]>(\n    ...args: T\n  ): Iterable<[Entity, ...T]> {\n    const [firstComponentDef, ...componentDefinitions] = args\n    for (const [entity] of firstComponentDef.iterator()) {\n      let matches = true\n      for (const componentDef of componentDefinitions) {\n        if (!componentDef.has(entity)) {\n          matches = false\n          break\n        }\n      }\n\n      if (matches) {\n        yield [entity, ...args]\n      }\n    }\n  }\n\n  function getSystems() {\n    return systems.getSystems()\n  }\n\n  function removeComponentDefinition(componentId: number) {\n    componentsDefinition.delete(componentId)\n  }\n\n  return {\n    entitiesComponent,\n    componentsDefinition,\n    addEntity,\n    addDynamicEntity,\n    removeEntity,\n    addSystem,\n    getSystems,\n    removeSystem,\n    defineComponent,\n    defineComponentFromSchema,\n    getEntitiesWith,\n    getComponent,\n    removeComponentDefinition\n  }\n}\n\n/**\n * @public\n */\nexport type PreEngine = ReturnType<typeof preEngine>\n\n/**\n * @public\n */\nexport function Engine({ transports }: IEngineParams = {}): IEngine {\n  const engine = preEngine()\n  const crdtSystem = crdtSceneSystem({ engine, transports: transports || [] })\n  const baseComponents = defineSdkComponents(engine)\n\n  function update(dt: number) {\n    crdtSystem.receiveMessages()\n\n    for (const system of engine.getSystems()) {\n      system.fn(dt)\n    }\n\n    // Selected components that only exist one frame\n    //  then, they are deleted but their crdt state keeps\n    const removeSelectedComponents = [\n      baseComponents.OnPointerDownResult,\n      baseComponents.OnPointerUpResult\n    ]\n    const excludeComponentIds = removeSelectedComponents.map((item) => item._id)\n    for (const componentDef of removeSelectedComponents) {\n      for (const [entity] of engine.getEntitiesWith(componentDef)) {\n        componentDef.deleteFrom(entity)\n      }\n    }\n\n    // TODO: Perf tip\n    // Should we add some dirtyIteratorSet at engine level so we dont have\n    // to iterate all the component definitions to get the dirty ones ?\n    const dirtySet = new Map<Entity, Set<number>>()\n    for (const [componentId, definition] of engine.componentsDefinition) {\n      if (excludeComponentIds.includes(componentId)) continue\n\n      for (const entity of definition.dirtyIterator()) {\n        if (!dirtySet.has(entity)) {\n          dirtySet.set(entity, new Set())\n        }\n        dirtySet.get(entity)!.add(componentId)\n      }\n    }\n    crdtSystem.createMessages(dirtySet)\n\n    for (const [_componentId, definition] of engine.componentsDefinition) {\n      definition.clearDirty()\n    }\n  }\n\n  return {\n    addEntity: engine.addEntity,\n    addDynamicEntity: engine.addDynamicEntity,\n    removeEntity: engine.removeEntity,\n    addSystem: engine.addSystem,\n    removeSystem: engine.removeSystem,\n    defineComponent: engine.defineComponent,\n    defineComponentFromSchema: engine.defineComponentFromSchema,\n    getEntitiesWith: engine.getEntitiesWith,\n    getComponent: engine.getComponent,\n    removeComponentDefinition: engine.removeComponentDefinition,\n    update,\n    RootEntity: 0 as Entity,\n    baseComponents\n  }\n}\n","import { Entity } from './entity'\nimport { PBPointerEventsResult_PointerCommand } from '../components/generated/pb/PointerEventsResult.gen'\nimport { PointerEventType } from '../components/generated/pb/PointerEvents.gen'\nimport { ActionButton } from '../components/generated/pb/common/ActionButton.gen'\nimport { IEngine } from './types'\nimport { Schemas } from '../schemas'\n\nconst UpdateTimestampStateSchema = {\n  timestampLastUpdate: Schemas.Number,\n  currentTimestamp: Schemas.Number\n}\n\nconst WasEntityClickComponentID = 1500\nconst IsPointerEventActiveComponentID = 1501\nconst EventSystemPriority = 1 << 20\n\nexport function wasEntityClickedGenerator(engine: IEngine) {\n  const WasEntityClickComponentState = engine.defineComponent(\n    UpdateTimestampStateSchema,\n    WasEntityClickComponentID\n  )\n\n  WasEntityClickComponentState.create(engine.RootEntity)\n\n  engine.addSystem(() => {\n    const state = WasEntityClickComponentState.get(engine.RootEntity)\n    if (state.currentTimestamp > state.timestampLastUpdate) {\n      WasEntityClickComponentState.getMutable(\n        engine.RootEntity\n      ).timestampLastUpdate = state.currentTimestamp\n    }\n  }, EventSystemPriority)\n\n  return function (entity: Entity, actionButton: ActionButton) {\n    const component = engine.baseComponents.PointerEventsResult.getOrNull(\n      engine.RootEntity\n    )\n\n    if (!component) return false\n\n    const commands = component.commands\n\n    // We search the last DOWN command sorted by timestamp\n    const down = findLastAction(\n      commands,\n      PointerEventType.DOWN,\n      actionButton,\n      entity\n    )\n    // We search the last UP command sorted by timestamp\n    const up = findLastAction(\n      commands,\n      PointerEventType.UP,\n      actionButton,\n      entity\n    )\n\n    if (!down) return false\n    if (!up) return false\n\n    const state = WasEntityClickComponentState.get(engine.RootEntity)\n\n    // If the DOWN command has happen before the UP commands, it means that that a clicked has happen\n    if (\n      down.timestamp < up.timestamp &&\n      up.timestamp > state.timestampLastUpdate\n    ) {\n      WasEntityClickComponentState.getMutable(\n        engine.RootEntity\n      ).currentTimestamp = Math.max(up.timestamp, state.currentTimestamp)\n      return true // clicked\n    }\n    return false\n  }\n}\n\nexport function isPointerEventActiveGenerator(engine: IEngine) {\n  const IsPointerEventActiveComponentState = engine.defineComponent(\n    UpdateTimestampStateSchema,\n    IsPointerEventActiveComponentID\n  )\n\n  IsPointerEventActiveComponentState.create(engine.RootEntity)\n\n  engine.addSystem(() => {\n    const state = IsPointerEventActiveComponentState.get(engine.RootEntity)\n    if (state.currentTimestamp > state.timestampLastUpdate) {\n      IsPointerEventActiveComponentState.getMutable(\n        engine.RootEntity\n      ).timestampLastUpdate = state.currentTimestamp\n    }\n  }, EventSystemPriority)\n\n  return function (\n    entity: Entity,\n    actionButton: ActionButton,\n    pointerEventType: PointerEventType\n  ) {\n    const component = engine.baseComponents.PointerEventsResult.getOrNull(\n      engine.RootEntity\n    )\n\n    if (!component) return false\n\n    const commands = component.commands\n\n    // We search the last pointer Event command sorted by timestamp\n    const command = findLastAction(\n      commands,\n      pointerEventType,\n      actionButton,\n      entity\n    )\n\n    if (!command) return false\n\n    const state = IsPointerEventActiveComponentState.get(engine.RootEntity)\n\n    if (command.timestamp > state.timestampLastUpdate) {\n      IsPointerEventActiveComponentState.getMutable(\n        engine.RootEntity\n      ).currentTimestamp = Math.max(command.timestamp, state.currentTimestamp)\n      return true // up component is from an old click\n    } else {\n      return false\n    }\n  }\n}\n\nfunction findLastAction(\n  commands: readonly PBPointerEventsResult_PointerCommand[],\n  pointerEventType: PointerEventType,\n  actionButton: ActionButton,\n  entity?: Entity\n): PBPointerEventsResult_PointerCommand | undefined {\n  let commandToReturn: PBPointerEventsResult_PointerCommand | undefined =\n    undefined\n\n  for (const command of commands) {\n    if (\n      command.button === actionButton &&\n      command.state === pointerEventType &&\n      (!entity || (command.hit && entity === command.hit.entityId))\n    ) {\n      if (!commandToReturn || command.timestamp >= commandToReturn.timestamp)\n        commandToReturn = command\n    }\n  }\n\n  return commandToReturn\n}\n","import { TransportMessage } from '../types'\nimport { Transport } from './types'\n\nexport function createNetworkTransport(): Transport {\n  // const rpc = new RpcTransport()\n  function send(..._args: any[]) {\n    // console.log('NetworkMessage Sent: ', ...args)\n  }\n\n  const type = 'network-transport'\n  return {\n    send,\n    type,\n    filter(message: TransportMessage): boolean {\n      // Echo message, ignore them\n      if (message.transportType === type) {\n        return false\n      }\n\n      // TODO: Static entities & Network components\n\n      return !!message // validComponents.includes(componentId)\n    }\n  }\n}\n","/** @public */\nexport enum ECSComponentIDs {\n\tTransform = 1,\n\tAnimator = 1042,\n\tAudioSource = 1020,\n\tAvatarAttach = 1073,\n\tAvatarModifierArea = 1070,\n\tAvatarShape = 1080,\n\tBillboard = 1090,\n\tBoxShape = 1013,\n\tCameraMode = 1072,\n\tCameraModeArea = 1071,\n\tCylinderShape = 1016,\n\tGLTFShape = 1041,\n\tMaterial = 1017,\n\tMeshCollider = 1019,\n\tMeshRenderer = 1018,\n\tNFTShape = 1040,\n\tOnPointerDown = 1060,\n\tOnPointerDownResult = 1066,\n\tOnPointerUp = 1061,\n\tOnPointerUpResult = 1065,\n\tPlaneShape = 1014,\n\tPointerEvents = 1062,\n\tPointerEventsResult = 1063,\n\tPointerLock = 1074,\n\tRaycast = 1067,\n\tRaycastResult = 1068,\n\tSphereShape = 1015,\n\tTextShape = 1030,\n\tUiText = 1052,\n\tUiTransform = 1050,\n\tVisibilityComponent = 1081,\n}\n","import { TransportMessage } from '../types'\nimport { Transport } from './types'\nimport { ECSComponentIDs } from '../../../components/generated/ids.gen'\n\nconst componentIds = Object.values(ECSComponentIDs)\n  .filter((a) => typeof a === 'number')\n  .map(Number)\n\nexport function createRendererTransport(): Transport {\n  if (typeof dcl === 'undefined') {\n    // TODO: replace with new rpc\n    throw new Error(\n      'Cannot create createRendererTransport without global dcl object'\n    )\n  }\n\n  const type = 'renderer'\n  return {\n    type,\n    send(message: Uint8Array): void {\n      // TODO: replace with new rpc\n      dcl\n        .callRpc('~system/ExperimentalAPI', 'sendToRenderer', [\n          { data: new Uint8Array(message) }\n        ])\n        .catch(dcl.error)\n    },\n    filter(message: TransportMessage): boolean {\n      // Echo message, ignore them\n      if (message.transportType === type) {\n        return false\n      }\n\n      // Only send renderer components (Proto Generated)\n      if (!componentIds.includes(message.componentId)) {\n        return false\n      }\n\n      return !!message\n    }\n  }\n}\n","declare let Promise: any\n\n/**\n * A class serves as a medium between the observable and its observers\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed\n */\nexport class ObserverEventState {\n  /**\n   * An Observer can set this property to true to prevent subsequent observers of being notified\n   */\n  public skipNextObservers!: boolean\n\n  /**\n   * Get the mask value that were used to trigger the event corresponding to this EventState object\n   */\n  public mask!: number\n\n  /**\n   * The object that originally notified the event\n   */\n  public target?: any\n\n  /**\n   * The current object in the bubbling phase\n   */\n  public currentTarget?: any\n\n  /**\n   * This will be populated with the return value of the last function that was executed.\n   * If it is the first function in the callback chain it will be the event data.\n   */\n  public lastReturnValue?: any\n\n  /**\n   * Create a new EventState\n   * @param mask - defines the mask associated with this state\n   * @param skipNextObservers - defines a flag which will instruct the observable to skip following observers when set to true\n   * @param target - defines the original target of the state\n   * @param currentTarget - defines the current target of the state\n   */\n  constructor(\n    mask: number,\n    skipNextObservers = false,\n    target?: any,\n    currentTarget?: any\n  ) {\n    this.initalize(mask, skipNextObservers, target, currentTarget)\n  }\n\n  /**\n   * Initialize the current event state\n   * @param mask - defines the mask associated with this state\n   * @param skipNextObservers - defines a flag which will instruct the observable to skip following observers when set to true\n   * @param target - defines the original target of the state\n   * @param currentTarget - defines the current target of the state\n   * @returns the current event state\n   */\n  public initalize(\n    mask: number,\n    skipNextObservers = false,\n    target?: any,\n    currentTarget?: any\n  ): ObserverEventState {\n    this.mask = mask\n    this.skipNextObservers = skipNextObservers\n    this.target = target\n    this.currentTarget = currentTarget\n    return this\n  }\n}\n\n/**\n * Represent an Observer registered to a given Observable object.\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed\n */\nexport class Observer<T> {\n  /**\n   * Gets or sets a property defining that the observer as to be unregistered after the next notification\n   */\n  public unregisterOnNextCall = false\n\n  /** For internal usage */\n  public _willBeUnregistered = false\n\n  /**\n   * Creates a new observer\n   * @param callback - defines the callback to call when the observer is notified\n   * @param mask - defines the mask of the observer (used to filter notifications)\n   * @param scope - defines the current scope used to restore the JS context\n   */\n  constructor(\n    /**\n     * Defines the callback to call when the observer is notified\n     */\n    public callback: (eventData: T, eventState: ObserverEventState) => void,\n    /**\n     * Defines the mask of the observer (used to filter notifications)\n     */\n    public mask: number,\n    /**\n     * Defines the current scope used to restore the JS context\n     */\n    public scope: any = null\n  ) {}\n}\n\n/**\n * The Observable class is a simple implementation of the Observable pattern.\n *\n * There's one slight particularity though: a given Observable can notify its observer using a particular mask value, only the Observers registered with this mask value will be notified.\n * This enable a more fine grained execution without having to rely on multiple different Observable objects.\n * For instance you may have a given Observable that have four different types of notifications: Move (mask = 0x01), Stop (mask = 0x02), Turn Right (mask = 0X04), Turn Left (mask = 0X08).\n * A given observer can register itself with only Move and Stop (mask = 0x03), then it will only be notified when one of these two occurs and will never be for Turn Left/Right.\n *\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed\n */\nexport class Observable<T> {\n  private _observers = new Array<Observer<T>>()\n\n  private _eventState: ObserverEventState\n\n  private _onObserverAdded: null | ((observer: Observer<T>) => void) = null\n\n  /**\n   * Creates a new observable\n   * @param onObserverAdded - defines a callback to call when a new observer is added\n   */\n  constructor(onObserverAdded?: (observer: Observer<T>) => void) {\n    this._eventState = new ObserverEventState(0)\n\n    if (onObserverAdded) {\n      this._onObserverAdded = onObserverAdded\n    }\n  }\n\n  /**\n   * Create a new Observer with the specified callback\n   * @param callback - the callback that will be executed for that Observer\n   * @param mask - the mask used to filter observers\n   * @param insertFirst - if true the callback will be inserted at the first position, hence executed before the others ones. If false (default behavior) the callback will be inserted at the last position, executed after all the others already present.\n   * @param scope - optional scope for the callback to be called from\n   * @param unregisterOnFirstCall - defines if the observer as to be unregistered after the next notification\n   * @returns the new observer created for the callback\n   */\n  public add(\n    callback: (eventData: T, eventState: ObserverEventState) => void,\n    mask: number = -1,\n    insertFirst = false,\n    scope: any = null,\n    unregisterOnFirstCall = false\n  ): null | Observer<T> {\n    if (!callback) {\n      return null\n    }\n\n    const observer = new Observer(callback, mask, scope)\n    observer.unregisterOnNextCall = unregisterOnFirstCall\n\n    if (insertFirst) {\n      this._observers.unshift(observer)\n    } else {\n      this._observers.push(observer)\n    }\n\n    if (this._onObserverAdded) {\n      this._onObserverAdded(observer)\n    }\n\n    return observer\n  }\n\n  /**\n   * Create a new Observer with the specified callback and unregisters after the next notification\n   * @param callback - the callback that will be executed for that Observer\n   * @returns the new observer created for the callback\n   */\n  public addOnce(\n    callback: (eventData: T, eventState: ObserverEventState) => void\n  ): null | Observer<T> {\n    return this.add(callback, undefined, undefined, undefined, true)\n  }\n\n  /**\n   * Remove an Observer from the Observable object\n   * @param observer - the instance of the Observer to remove\n   * @returns false if it doesn't belong to this Observable\n   */\n  public remove(observer: null | Observer<T>): boolean {\n    if (!observer) {\n      return false\n    }\n\n    const index = this._observers.indexOf(observer)\n\n    if (index !== -1) {\n      this._deferUnregister(observer)\n      return true\n    }\n\n    return false\n  }\n\n  /**\n   * Remove a callback from the Observable object\n   * @param callback - the callback to remove\n   * @param scope - optional scope. If used only the callbacks with this scope will be removed\n   * @returns false if it doesn't belong to this Observable\n   */\n  public removeCallback(\n    callback: (eventData: T, eventState: ObserverEventState) => void,\n    scope?: any\n  ): boolean {\n    for (let index = 0; index < this._observers.length; index++) {\n      if (\n        this._observers[index].callback === callback &&\n        (!scope || scope === this._observers[index].scope)\n      ) {\n        this._deferUnregister(this._observers[index])\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Notify all Observers by calling their respective callback with the given data\n   * Will return true if all observers were executed, false if an observer set skipNextObservers to true, then prevent the subsequent ones to execute\n   * @param eventData - defines the data to send to all observers\n   * @param mask - defines the mask of the current notification (observers with incompatible mask (ie mask & observer.mask === 0) will not be notified)\n   * @param target - defines the original target of the state\n   * @param currentTarget - defines the current target of the state\n   * @returns false if the complete observer chain was not processed (because one observer set the skipNextObservers to true)\n   */\n  public notifyObservers(\n    eventData: T,\n    mask: number = -1,\n    target?: any,\n    currentTarget?: any\n  ): boolean {\n    if (!this._observers.length) {\n      return true\n    }\n\n    const state = this._eventState\n    state.mask = mask\n    state.target = target\n    state.currentTarget = currentTarget\n    state.skipNextObservers = false\n    state.lastReturnValue = eventData\n\n    for (const obs of this._observers) {\n      if (obs._willBeUnregistered) {\n        continue\n      }\n\n      if (obs.mask & mask) {\n        if (obs.scope) {\n          state.lastReturnValue = obs.callback.apply(obs.scope, [\n            eventData,\n            state\n          ])\n        } else {\n          state.lastReturnValue = obs.callback(eventData, state)\n        }\n\n        if (obs.unregisterOnNextCall) {\n          this._deferUnregister(obs)\n        }\n      }\n      if (state.skipNextObservers) {\n        return false\n      }\n    }\n    return true\n  }\n\n  /**\n   * Calling this will execute each callback, expecting it to be a promise or return a value.\n   * If at any point in the chain one function fails, the promise will fail and the execution will not continue.\n   * This is useful when a chain of events (sometimes async events) is needed to initialize a certain object\n   * and it is crucial that all callbacks will be executed.\n   * The order of the callbacks is kept, callbacks are not executed parallel.\n   *\n   * @param eventData - The data to be sent to each callback\n   * @param mask - is used to filter observers defaults to -1\n   * @param target - defines the callback target (see EventState)\n   * @param currentTarget - defines he current object in the bubbling phase\n   * @returns will return a Promise than resolves when all callbacks executed successfully.\n   */\n  public notifyObserversWithPromise(\n    eventData: T,\n    mask: number = -1,\n    target?: any,\n    currentTarget?: any\n  ): Promise<T> {\n    // create an empty promise\n    let p: Promise<any> = Promise.resolve(eventData)\n\n    // no observers? return this promise.\n    if (!this._observers.length) {\n      return p\n    }\n\n    const state = this._eventState\n    state.mask = mask\n    state.target = target\n    state.currentTarget = currentTarget\n    state.skipNextObservers = false\n\n    // execute one callback after another (not using Promise.all, the order is important)\n    this._observers.forEach((obs) => {\n      if (state.skipNextObservers) {\n        return\n      }\n      if (obs._willBeUnregistered) {\n        return\n      }\n      if (obs.mask & mask) {\n        if (obs.scope) {\n          p = p.then((lastReturnedValue) => {\n            state.lastReturnValue = lastReturnedValue\n            return obs.callback.apply(obs.scope, [eventData, state])\n          })\n        } else {\n          p = p.then((lastReturnedValue) => {\n            state.lastReturnValue = lastReturnedValue\n            return obs.callback(eventData, state)\n          })\n        }\n        if (obs.unregisterOnNextCall) {\n          this._deferUnregister(obs)\n        }\n      }\n    })\n\n    // return the eventData\n    return p.then(() => {\n      return eventData\n    })\n  }\n\n  /**\n   * Notify a specific observer\n   * @param observer - defines the observer to notify\n   * @param eventData - defines the data to be sent to each callback\n   * @param mask - is used to filter observers defaults to -1\n   */\n  public notifyObserver(\n    observer: Observer<T>,\n    eventData: T,\n    mask: number = -1\n  ): void {\n    const state = this._eventState\n    state.mask = mask\n    state.skipNextObservers = false\n\n    observer.callback(eventData, state)\n  }\n\n  /**\n   * Gets a boolean indicating if the observable has at least one observer\n   * @returns true is the Observable has at least one Observer registered\n   */\n  public hasObservers(): boolean {\n    return this._observers.length > 0\n  }\n\n  /**\n   * Clear the list of observers\n   */\n  public clear(): void {\n    this._observers = new Array<Observer<T>>()\n    this._onObserverAdded = null\n  }\n\n  /**\n   * Clone the current observable\n   * @returns a new observable\n   */\n  public clone(): Observable<T> {\n    const result = new Observable<T>()\n\n    result._observers = this._observers.slice(0)\n\n    return result\n  }\n\n  /**\n   * Does this observable handles observer registered with a given mask\n   * @param mask - defines the mask to be tested\n   * @returns whether or not one observer registered with the given mask is handeled\n   */\n  public hasSpecificMask(mask: number = -1): boolean {\n    for (const obs of this._observers) {\n      if (obs.mask & mask || obs.mask === mask) {\n        return true\n      }\n    }\n    return false\n  }\n\n  private _deferUnregister(observer: Observer<T>): void {\n    observer.unregisterOnNextCall = false\n    observer._willBeUnregistered = true\n    Promise.resolve().then.bind(Promise.resolve())(async () =>\n      this._remove(observer)\n    )\n  }\n\n  // This should only be called when not iterating over _observers to avoid callback skipping.\n  // Removes an observer from the _observer Array.\n  private _remove(observer: null | Observer<T>): boolean {\n    if (!observer) {\n      return false\n    }\n\n    const index = this._observers.indexOf(observer)\n\n    if (index !== -1) {\n      this._observers.splice(index, 1)\n      return true\n    }\n\n    return false\n  }\n}\n","import { Observable } from './temp-fp/Observable'\n\n/**\n * @internal\n * This function generates a callback that is passed to the Observable\n * constructor to subscribe to the events of the DecentralandInterface\n */\nfunction createSubscriber(eventName: keyof IEvents) {\n  return () => {\n    if (typeof dcl !== 'undefined') dcl.subscribe(eventName)\n  }\n}\n\n/**\n * These events are triggered after your character enters the scene.\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onEnterSceneObservable = new Observable<IEvents['onEnterScene']>(\n  createSubscriber('onEnterScene')\n)\n\n/** @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed. Use onEnterSceneObservable instead. */\nexport const onEnterScene = onEnterSceneObservable\n\n/**\n * These events are triggered after your character leaves the scene.\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onLeaveSceneObservable = new Observable<IEvents['onLeaveScene']>(\n  createSubscriber('onLeaveScene')\n)\n\n/** @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed. Use onLeaveSceneObservable instead. */\nexport const onLeaveScene = onLeaveSceneObservable\n\n/**\n * This event is triggered after all the resources of the scene were loaded (models, textures, etc...)\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onSceneReadyObservable = new Observable<IEvents['sceneStart']>(\n  createSubscriber('sceneStart')\n)\n\n/**\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onPlayerExpressionObservable = new Observable<\n  IEvents['playerExpression']\n>(createSubscriber('playerExpression'))\n\n/**\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onVideoEvent = new Observable<IEvents['videoEvent']>(\n  createSubscriber('videoEvent')\n)\n\n/**\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onProfileChanged = new Observable<IEvents['profileChanged']>(\n  createSubscriber('profileChanged')\n)\n\n/**\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onPlayerConnectedObservable = new Observable<\n  IEvents['playerConnected']\n>(createSubscriber('playerConnected'))\n\n/**\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onPlayerDisconnectedObservable = new Observable<\n  IEvents['playerDisconnected']\n>(createSubscriber('playerDisconnected'))\n\n/**\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onRealmChangedObservable = new Observable<\n  IEvents['onRealmChanged']\n>(createSubscriber('onRealmChanged'))\n\n/**\n * @public\n * @deprecated This function is an inheritance of ECS6, it's here temporary for the feature parity, please read the news and docs to know how handle when it's removed.\n */\nexport const onPlayerClickedObservable = new Observable<\n  IEvents['playerClicked']\n>(createSubscriber('playerClicked'))\n\n/**\n * @internal\n * This function adds _one_ listener to the onEvent event of dcl interface.\n * Leveraging a switch to route events to the Observable handlers.\n */\nexport function _initEventObservables() {\n  if (typeof dcl !== 'undefined') {\n    dcl.onEvent((event) => {\n      switch (event.type) {\n        case 'onEnterScene': {\n          onEnterSceneObservable.notifyObservers(\n            event.data as IEvents['onEnterScene']\n          )\n          return\n        }\n        case 'onLeaveScene': {\n          onLeaveSceneObservable.notifyObservers(\n            event.data as IEvents['onLeaveScene']\n          )\n          return\n        }\n        case 'sceneStart': {\n          onSceneReadyObservable.notifyObservers(\n            event.data as IEvents['sceneStart']\n          )\n          return\n        }\n        case 'playerExpression': {\n          onPlayerExpressionObservable.notifyObservers(\n            event.data as IEvents['playerExpression']\n          )\n          return\n        }\n        case 'videoEvent': {\n          const videoData = event.data as IEvents['videoEvent']\n          onVideoEvent.notifyObservers(videoData)\n          return\n        }\n        case 'profileChanged': {\n          onProfileChanged.notifyObservers(\n            event.data as IEvents['profileChanged']\n          )\n          return\n        }\n        case 'playerConnected': {\n          onPlayerConnectedObservable.notifyObservers(\n            event.data as IEvents['playerConnected']\n          )\n          return\n        }\n        case 'playerDisconnected': {\n          onPlayerDisconnectedObservable.notifyObservers(\n            event.data as IEvents['playerDisconnected']\n          )\n          return\n        }\n        case 'onRealmChanged': {\n          onRealmChangedObservable.notifyObservers(\n            event.data as IEvents['onRealmChanged']\n          )\n          return\n        }\n        case 'playerClicked': {\n          onPlayerClickedObservable.notifyObservers(\n            event.data as IEvents['playerClicked']\n          )\n          return\n        }\n      }\n    })\n  }\n}\n","/// <reference types=\"@dcl/posix\" />\n\n/**\n * @alpha * This file initialization is an alpha one. This is based on the old-ecs\n * init and it'll be changing.\n */\n\nimport { ActionButton } from '../components/generated/pb/common/ActionButton.gen'\nimport { PointerEventType } from '../components/generated/pb/PointerEvents.gen'\nimport { Engine, Entity } from '../engine'\nimport {\n  isPointerEventActiveGenerator,\n  wasEntityClickedGenerator\n} from '../engine/events'\nimport { createNetworkTransport } from '../systems/crdt/transports/networkTransport'\nimport { createRendererTransport } from '../systems/crdt/transports/rendererTransport'\nimport { _initEventObservables } from './observables'\n\nconst rendererTransport = createRendererTransport()\nexport const engine = Engine({\n  transports: [rendererTransport, createNetworkTransport()]\n})\n\nif (typeof dcl !== 'undefined') {\n  dcl.loadModule('~system/ExperimentalAPI', {}).catch(dcl.error)\n\n  async function pullRendererMessages() {\n    const response = await dcl.callRpc(\n      '~system/ExperimentalAPI',\n      'messageFromRenderer',\n      []\n    )\n\n    if (response.data?.length) {\n      if (rendererTransport.onmessage) {\n        for (const byteArray of response.data) {\n          rendererTransport.onmessage(byteArray)\n        }\n      }\n    }\n  }\n\n  dcl.onUpdate((dt: number) => {\n    pullRendererMessages()\n      .catch(dcl.error)\n      .finally(() => engine.update(dt))\n  })\n\n  _initEventObservables()\n}\n\nexport const log = dcl.log\nexport const error = dcl.error\n\nlet wasEntityClickedFunc:\n  | ((entity: Entity, actionButton: ActionButton) => boolean)\n  | null = null\n\n/**\n * Check if an entity emitted a clicked event\n * @param entity the entity to query, for global clicks use `engine.RootEntity`\n * @param actionButton\n * @returns true if the entity was clicked in the last tick-update\n */\nexport function wasEntityClicked(entity: Entity, actionButton: ActionButton) {\n  if (!wasEntityClickedFunc) {\n    wasEntityClickedFunc = wasEntityClickedGenerator(engine)\n  }\n  return wasEntityClickedFunc(entity, actionButton)\n}\n\nlet isPointerEventActiveFunc:\n  | ((\n      entity: Entity,\n      actionButton: ActionButton,\n      pointerEventType: PointerEventType\n    ) => boolean)\n  | null = null\n\n/**\n * Check if a pointer event has been emited in the last tick-update.\n * @param entity the entity to query, for global clicks use `engine.RootEntity`\n * @param actionButton\n * @param pointerEventType\n * @returns\n */\nexport function isPointerEventActive(\n  entity: Entity,\n  actionButton: ActionButton,\n  pointerEventType: PointerEventType\n) {\n  if (!isPointerEventActiveFunc) {\n    isPointerEventActiveFunc = isPointerEventActiveGenerator(engine)\n  }\n  return isPointerEventActiveFunc(entity, actionButton, pointerEventType)\n}\n","import { IEngine } from '../engine/types'\n\n/**\n * Transform parenting: cyclic dependency checker\n * It checks only in modified Transforms\n *\n * Add this system with:\n * ```ts\n *  engine.addSystem(cyclicParentingChecker(engine))\n * ````\n * And then it will check every tick the parenting.\n *\n * @public\n *\n * @params engine\n * @returns a system\n */\nexport function cyclicParentingChecker(engine: IEngine) {\n  const Transform = engine.baseComponents.Transform\n  return () => {\n    for (const entity of Transform.dirtyIterator()) {\n      let transform = Transform.getOrNull(entity)\n      while (transform && transform.parent) {\n        if (transform.parent === entity) {\n          dcl.error(`There is a cyclic parent with entity ${entity}`)\n          break\n        } else {\n          transform = Transform.getOrNull(transform.parent)\n        }\n      }\n    }\n  }\n}\n","import { engine } from '../../runtime/initialization'\n\n/** @public */\nexport const Transform = engine.baseComponents.Transform\n/** @public */\nexport const Animator = engine.baseComponents.Animator\n/** @public */\nexport const AudioSource = engine.baseComponents.AudioSource\n/** @public */\nexport const AvatarAttach = engine.baseComponents.AvatarAttach\n/** @public */\nexport const AvatarModifierArea = engine.baseComponents.AvatarModifierArea\n/** @public */\nexport const AvatarShape = engine.baseComponents.AvatarShape\n/** @public */\nexport const Billboard = engine.baseComponents.Billboard\n/** @public */\nexport const BoxShape = engine.baseComponents.BoxShape\n/** @public */\nexport const CameraMode = engine.baseComponents.CameraMode\n/** @public */\nexport const CameraModeArea = engine.baseComponents.CameraModeArea\n/** @public */\nexport const CylinderShape = engine.baseComponents.CylinderShape\n/** @public */\nexport const GLTFShape = engine.baseComponents.GLTFShape\n/** @public */\nexport const Material = engine.baseComponents.Material\n/** @public */\nexport const MeshCollider = engine.baseComponents.MeshCollider\n/** @public */\nexport const MeshRenderer = engine.baseComponents.MeshRenderer\n/** @public */\nexport const NFTShape = engine.baseComponents.NFTShape\n/** @public */\nexport const OnPointerDown = engine.baseComponents.OnPointerDown\n/** @public */\nexport const OnPointerDownResult = engine.baseComponents.OnPointerDownResult\n/** @public */\nexport const OnPointerUp = engine.baseComponents.OnPointerUp\n/** @public */\nexport const OnPointerUpResult = engine.baseComponents.OnPointerUpResult\n/** @public */\nexport const PlaneShape = engine.baseComponents.PlaneShape\n/** @public */\nexport const PointerEvents = engine.baseComponents.PointerEvents\n/** @public */\nexport const PointerEventsResult = engine.baseComponents.PointerEventsResult\n/** @public */\nexport const PointerLock = engine.baseComponents.PointerLock\n/** @public */\nexport const Raycast = engine.baseComponents.Raycast\n/** @public */\nexport const RaycastResult = engine.baseComponents.RaycastResult\n/** @public */\nexport const SphereShape = engine.baseComponents.SphereShape\n/** @public */\nexport const TextShape = engine.baseComponents.TextShape\n/** @public */\nexport const UiText = engine.baseComponents.UiText\n/** @public */\nexport const UiTransform = engine.baseComponents.UiTransform\n/** @public */\nexport const VisibilityComponent = engine.baseComponents.VisibilityComponent\n","import { engine } from '../../runtime/initialization'\n/** @public */\nexport namespace Components {\n\t/** @public */\n\texport const Transform = engine.baseComponents.Transform\n\t/** @public */\n\texport const Animator = engine.baseComponents.Animator\n\t/** @public */\n\texport const AudioSource = engine.baseComponents.AudioSource\n\t/** @public */\n\texport const AvatarAttach = engine.baseComponents.AvatarAttach\n\t/** @public */\n\texport const AvatarModifierArea = engine.baseComponents.AvatarModifierArea\n\t/** @public */\n\texport const AvatarShape = engine.baseComponents.AvatarShape\n\t/** @public */\n\texport const Billboard = engine.baseComponents.Billboard\n\t/** @public */\n\texport const BoxShape = engine.baseComponents.BoxShape\n\t/** @public */\n\texport const CameraMode = engine.baseComponents.CameraMode\n\t/** @public */\n\texport const CameraModeArea = engine.baseComponents.CameraModeArea\n\t/** @public */\n\texport const CylinderShape = engine.baseComponents.CylinderShape\n\t/** @public */\n\texport const GLTFShape = engine.baseComponents.GLTFShape\n\t/** @public */\n\texport const Material = engine.baseComponents.Material\n\t/** @public */\n\texport const MeshCollider = engine.baseComponents.MeshCollider\n\t/** @public */\n\texport const MeshRenderer = engine.baseComponents.MeshRenderer\n\t/** @public */\n\texport const NFTShape = engine.baseComponents.NFTShape\n\t/** @public */\n\texport const OnPointerDown = engine.baseComponents.OnPointerDown\n\t/** @public */\n\texport const OnPointerDownResult = engine.baseComponents.OnPointerDownResult\n\t/** @public */\n\texport const OnPointerUp = engine.baseComponents.OnPointerUp\n\t/** @public */\n\texport const OnPointerUpResult = engine.baseComponents.OnPointerUpResult\n\t/** @public */\n\texport const PlaneShape = engine.baseComponents.PlaneShape\n\t/** @public */\n\texport const PointerEvents = engine.baseComponents.PointerEvents\n\t/** @public */\n\texport const PointerEventsResult = engine.baseComponents.PointerEventsResult\n\t/** @public */\n\texport const PointerLock = engine.baseComponents.PointerLock\n\t/** @public */\n\texport const Raycast = engine.baseComponents.Raycast\n\t/** @public */\n\texport const RaycastResult = engine.baseComponents.RaycastResult\n\t/** @public */\n\texport const SphereShape = engine.baseComponents.SphereShape\n\t/** @public */\n\texport const TextShape = engine.baseComponents.TextShape\n\t/** @public */\n\texport const UiText = engine.baseComponents.UiText\n\t/** @public */\n\texport const UiTransform = engine.baseComponents.UiTransform\n\t/** @public */\n\texport const VisibilityComponent = engine.baseComponents.VisibilityComponent\n}\n","import { Observable, Observer } from './temp-fp/Observable'\n\nlet communicationsController: ModuleDescriptor | null = null\nlet communicationsControllerPromise: PromiseLike<ModuleDescriptor> | null = null\n\nlet _messageObserver: null | Observable<IEvents['comms']> = null\n\n/**\n * @internal\n */\nexport function getMessageObserver() {\n  if (!_messageObserver) {\n    _messageObserver = new Observable<IEvents['comms']>()\n  }\n  return _messageObserver\n}\n\nfunction ensureCommunicationsController() {\n  if (!communicationsControllerPromise) {\n    communicationsControllerPromise = dcl.loadModule(\n      '~system/CommunicationsController',\n      {}\n    )\n\n    void communicationsControllerPromise.then(($) => {\n      communicationsController = $\n    })\n\n    const observer = getMessageObserver()\n\n    dcl.subscribe('comms')\n    dcl.onEvent((event) => {\n      if (event.type === 'comms') {\n        observer.notifyObservers(event.data as any)\n      }\n    })\n  }\n  return communicationsControllerPromise\n}\n\n/**\n * @public\n * @deprecated\n */\nexport class MessageBus {\n  private messageQueue: string[] = []\n  private connected = false\n  private flushing = false\n\n  constructor() {\n    void ensureCommunicationsController().then(() => {\n      this.connected = true\n      this.flush()\n    })\n  }\n\n  on(\n    message: string,\n    callback: (value: any, sender: string) => void\n  ): Observer<IEvents['comms']> {\n    return getMessageObserver().add((e) => {\n      try {\n        const m = JSON.parse(e.message)\n\n        if (m.message === message) {\n          callback(m.payload, e.sender)\n        }\n      } catch (e) {\n        dcl.error(\n          'Error parsing comms message ' + ((e as Error).message || ''),\n          e\n        )\n      }\n    })!\n  }\n\n  // @internal\n  sendRaw(message: string) {\n    this.messageQueue.push(message)\n\n    if (this.connected) {\n      this.flush()\n    }\n  }\n\n  emit(message: string, payload: Record<any, any>) {\n    const messageToSend = JSON.stringify({ message, payload })\n    this.sendRaw(messageToSend)\n    getMessageObserver().notifyObservers({\n      message: messageToSend,\n      sender: 'self'\n    })\n  }\n\n  private flush() {\n    if (this.messageQueue.length === 0) return\n    if (!this.connected) return\n    if (!communicationsController) return\n    if (this.flushing) return\n\n    const message = this.messageQueue.shift()\n\n    this.flushing = true\n\n    dcl.callRpc(communicationsController.rpcHandle, 'send', [message]).then(\n      (_) => {\n        this.flushing = false\n        this.flush()\n      },\n      (e) => {\n        this.flushing = false\n      }\n    )\n  }\n}\n"],"names":["Orientation","Space","Object","defineProperty","exports","value","RAD2DEG","DEG2RAD","ToLinearSpace","ToGammaSpace","Epsilon","Math","PI","Scalar","TwoPi","sign","_value","isNaN","clamp","min","max","repeat","length","floor","deltaAngle","current","target","num","moveTowards","maxDelta","result","abs","withinEpsilon","a","b","epsilon","toHex","i","str","toString","toUpperCase","log2","log","LOG2E","normalize","denormalize","normalized","pingPong","tx","t","smoothStep","from","to","moveTowardsAngle","lerp","start","end","amount","lerpAngle","inverseLerp","hermite","value1","tangent1","value2","tangent2","squared","cubed","randomRange","random","rangeToPercent","percentToRange","percent","normalizeRadians","angle","Vector3","types_1","require$$0","Quaternion_1","require$$1","Scalar_1","require$$2","create","x","y","z","add","vector1","vector2","copy","source","dest","copyFromFloats","clone","assign","fromArray","array","offset","fromArrayToRef","vector","sqrt","scaleToRef","scale","normalizeFromLength","len","normalizeFromLengthToRef","dot","left","right","applyMatrix4ToRef","matrix","m","_m","w","rotateToRef","q","qx","qy","qz","qw","ix","iy","iz","iw","lerpToRef","crossToRef","transformCoordinatesToRef","transformation","transformCoordinatesFromFloatsToRef","rx","ry","rz","rw","transformNormalToRef","transformNormalFromFloatsToRef","clampToRef","distanceSquared","rotationFromAxisToRef","axis1","axis2","axis3","quat","Quaternion","rotationQuaternionFromAxisToRef","eulerAngles","multiplyToRef","multiplyByFloatsToRef","maximizeInPlaceFromFloatsToRef","minimizeInPlaceFromFloatsToRef","isNonUniform","absX","addToRef","subtract","subtractToRef","subtractFromFloatsToRef","negate","getClipFactor","vector0","axis","size","d0","getAngleBetweenVectors","normal","v0","v1","v0v1dot","n","acos","fromFloatArray","fromFloatArrayToRef","lengthSquared","normalizeToRef","applyMatrix4","rotate","cross","Zero","transformCoordinates","transformNormal","catmullRom","value3","value4","v","part1","part2","part3","part4","minimize","maximize","distance","center","rotationFromAxis","rotation","getHashCode","hash","equals","equalsWithEpsilon","equalsToFloats","multiply","multiplyByFloats","divide","divideToRef","fract","One","Up","Down","Forward","Backward","Right","Left","Random","Plane","Vector3_1","Matrix_1","c","d","fromPoints","_point1","_point2","_point3","romPositionAndNormal","origin","signedDistanceToPlaneFromPositionAndNormal","point","asArray","plane","_plane","norm","magnitude","transform","transposedMatrix","Matrix","transposeToRef","dotCoordinate","copyFromPoints","point1","point2","point3","x1","y1","z1","x2","y2","z2","yz","xz","xy","pyth","invPyth","isFrontFacingTo","direction","signedDistanceTo","Plane_1","self","_updateFlagSeed","_identityReadOnly","newMatrix","updateFlag","isIdentity","isIdentity3x2","_isIdentityDirty","_isIdentity3x2Dirty","_updateIdentityStatus","index","_markAsUpdated","fromValuesToRef","initialM11","initialM12","initialM13","initialM14","initialM21","initialM22","initialM23","initialM24","initialM31","initialM32","initialM33","initialM34","initialM41","initialM42","initialM43","initialM44","fromValues","composeToRef","translation","tmpMatrix","scalingToRef","fromQuaternionToRef","setTranslation","Identity","identity","rotationXToRef","s","sin","cos","rotationYToRef","rotationZToRef","rotationAxisToRef","_axis","c1","rotationYawPitchRollToRef","yaw","pitch","roll","quaternionResult","translationToRef","startValue","endValue","gradient","decomposeLerpToRef","startScale","startRotation","startTranslation","decompose","endScale","endRotation","endTranslation","resultScale","resultRotation","slerpToRef","resultTranslation","lookAtLHToRef","eye","up","xAxis","yAxis","zAxis","xSquareLength","ex","ey","ez","lookAtRHToRef","orthoLHToRef","width","height","znear","zfar","orthoOffCenterLHToRef","bottom","top","orthoOffCenterRHToRef","perspectiveFovLHToRef","fov","aspect","isVerticalFovFixed","f","tan","perspectiveFovRHToRef","rm","mm","reflectionToRef","temp","temp2","temp3","xx","yy","zz","zw","zx","yw","xw","determinant","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","det_22_33","det_21_33","det_21_32","det_20_33","det_20_32","det_20_31","other","invertToRef","cofact_00","cofact_01","cofact_02","cofact_03","det","detInv","det_12_33","det_11_33","det_11_32","det_10_33","det_10_32","det_10_31","det_12_23","det_11_23","det_11_22","det_10_23","det_10_22","det_10_21","setTranslationFromFloats","vector3","copyToArray","arrayDest","offsetDest","multiplyToArray","otherM","tm0","tm1","tm2","tm3","tm4","tm5","tm6","tm7","tm8","tm9","tm10","tm11","tm12","tm13","tm14","tm15","om0","om1","om2","om3","om4","om5","om6","om7","om8","om9","om10","om11","om12","om13","om14","om15","usedScale","sx","sy","sz","fromRotationMatrixToRef","getRotationMatrixToRef","isIdentityDirty","isIdentity3x2Dirty","IdentityReadOnly","fromFloatArrayToRefScaled","compose","IdentityToRef","zero","RotationX","rotationY","rotationZ","rotationAxis","rotationYawPitchRoll","scaling","decomposeLerp","LookAtLH","lookAtRH","orthoLH","OrthoOffCenterLH","orthoOffCenterRH","perspectiveLH","perspectiveFovLH","PerspectiveFovRH","perspectiveFovWebVRToRef","rightHanded","rightHandedFactor","upTan","upDegrees","downTan","downDegrees","leftTan","leftDegrees","rightTan","rightDegrees","xScale","yScale","GetAsMatrix2x2","GetAsMatrix3x3","transpose","reflection","fromXYZAxesToRef","xaxis","yaxis","zaxis","isIdentityUpdate","isIdentityAs3x2Update","toArray","reset","addToSelf","invert","addAtIndex","multiplyAtIndex","getTranslation","getTranslationToRef","removeRotationAndScaling","om","setRowFromFloats","scaleAndAddToRef","normalMatrixToRef","ref","tmp","getRotationMatrix","toggleModelMatrixHandInPlace","toggleProjectionMatrixHandInPlace","require$$3","halfPitch","halfYaw","halfRoll","c2","c3","s1","s2","s3","quat1","quat2","dotVal","qLength","slerp","q1","rotMat","q2","euler","rotateTowards","maxDegreesDelta","lookRotation","forward","forwardNew","upNew","num8","quaternion","num7","num4","num6","num3","num5","num2","fromToRotation","out","unit","test","atan2","asin","data","trace","flag","angleAxis","degress","radians","a2","rotationQuaternionFromAxis","__createBinding","this","o","k","k2","undefined","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","aspromise","fn","ctx","params","Array","arguments","pending","Promise","resolve","reject","err","apply","base64","string","charAt","ceil","b64","s64","encode","buffer","parts","chunk","j","push","String","fromCharCode","slice","join","invalidEncoding","decode","charCodeAt","Error","EventEmitter","_listeners","eventemitter","on","evt","off","listeners","splice","emit","args","factory","Float32Array","f32","f8b","Uint8Array","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","float","inquire","moduleName","mod","eval","replace","keys","e","inquire_1","utf8","read","write","pool_1","alloc","SIZE","MAX","slab","longbits","LongBits","util","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","parseInt","fromString","low","high","unsigned","toLong","Boolean","fromHash","toHash","mask","part0","merge","dst","src","ifNotSet","newError","name","CustomError","message","properties","captureStackTrace","stack","constructor","asPromise","require$$4","require$$5","pool","require$$6","require$$7","isNode","global","process","versions","node","window","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","isObject","isset","isSet","obj","prop","isArray","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","bits","fromBits","lcFirst","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","writer","Writer","BufferWriter","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","set","fork","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","byteLength","reader","Reader","BufferReader","indexOutOfRange","writeLength","RangeError","create_array","isBuffer","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","utf8Slice","service","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","rpcCall","method","requestCtor","responseCtor","request","callback","response","setTimeout","endedByRPC","roots","protobuf","configure","build","rpc","minimalExports","requireMinimal","createBasePBAnimator","PBAnimator","_m0","PBAnimationState","input","tag","createBasePBAnimationState","clip","playing","weight","speed","loop","shouldReset","COMPONENT_ID","AnimatorSchema","serialize","builder","writeBuffer","deserialize","remainingBytes","createBasePBAudioSource","volume","audioClipUrl","PBAudioSource","AudioSourceSchema","AvatarAnchorPoint","createBasePBAvatarAttach","avatarId","anchorPointId","PBAvatarAttach","AvatarAttachSchema","createBaseVector3","AvatarModifier","createBasePBAvatarModifierArea","area","excludeIds","modifiers","PBAvatarModifierArea","end2","AvatarModifierAreaSchema","long","wasm","WebAssembly","Instance","Module","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","indexOf","radixToPower","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","get_high","b00","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","longExports","requireLong","createBaseColor3","r","g","Color3","createBasePBAvatarShape","id","bodyShape","skinColor","hairColor","eyeColor","expressionTriggerId","expressionTriggerTimestamp","talking","wearables","PBAvatarShape","longToNumber","globalThis","MAX_SAFE_INTEGER","AvatarShapeSchema","createBasePBBillboard","PBBillboard","BillboardSchema","createBasePBBoxShape","withCollisions","isPointerBlocker","visible","uvs","PBBoxShape","BoxShapeSchema","createBasePBCameraMode","mode","PBCameraMode","CameraModeSchema","createBasePBCameraModeArea","PBCameraModeArea","CameraModeAreaSchema","createBasePBCylinderShape","radiusTop","radiusBottom","PBCylinderShape","CylinderShapeSchema","createBasePBGLTFShape","PBGLTFShape","GLTFShapeSchema","TextureWrapMode","FilterMode","TransparencyMode","createBasePBMaterial","texture","alphaTest","castShadows","alphaTexture","emissiveTexture","bumpTexture","albedoColor","emissiveColor","reflectivityColor","transparencyMode","metallic","roughness","glossiness","specularIntensity","emissiveIntensity","directIntensity","PBMaterial","PBMaterial_Texture","createBasePBMaterial_Texture","wrapMode","filterMode","MaterialSchema","ColliderLayer","createBasePBMeshCollider","collisionMask","box","sphere","cylinder","PBMeshCollider","PBMeshCollider_BoxMesh","PBMeshCollider_SphereMesh","PBMeshCollider_CylinderMesh","PBMeshCollider_PlaneMesh","createBasePBMeshCollider_BoxMesh","_","createBasePBMeshCollider_CylinderMesh","createBasePBMeshCollider_PlaneMesh","createBasePBMeshCollider_SphereMesh","MeshColliderSchema","createBasePBMeshRenderer","PBMeshRenderer","PBMeshRenderer_BoxMesh","PBMeshRenderer_SphereMesh","PBMeshRenderer_CylinderMesh","PBMeshRenderer_PlaneMesh","createBasePBMeshRenderer_BoxMesh","createBasePBMeshRenderer_CylinderMesh","createBasePBMeshRenderer_PlaneMesh","createBasePBMeshRenderer_SphereMesh","MeshRendererSchema","createBasePBNFTShape","assetId","style","color","PBNFTShape","NFTShapeSchema","createBasePBOnPointerDown","button","hoverText","maxDistance","showFeedback","PBOnPointerDown","OnPointerDownSchema","createBasePBOnPointerDownResult","meshName","timestamp","PBOnPointerDownResult","OnPointerDownResultSchema","createBasePBOnPointerUp","PBOnPointerUp","OnPointerUpSchema","createBasePBOnPointerUpResult","PBOnPointerUpResult","OnPointerUpResultSchema","createBasePBPlaneShape","PBPlaneShape","PlaneShapeSchema","PointerEventType","createBasePBPointerEvents","pointerEvents","PBPointerEvents","PBPointerEvents_Entry","createBasePBPointerEvents_Info","PBPointerEvents_Info","createBasePBPointerEvents_Entry","eventType","eventInfo","PointerEventsSchema","createBasePBRaycastResult","hits","PBRaycastResult","RaycastHit","createBaseRaycastHit","position","normalHit","entityId","createBasePBPointerEventsResult","commands","PBPointerEventsResult","PBPointerEventsResult_PointerCommand","createBasePBPointerEventsResult_PointerCommand","hit","state","analog","PointerEventsResultSchema","createBasePBPointerLock","isPointerLocked","PBPointerLock","PointerLockSchema","RaycastQueryType","createBasePBRaycast","queryType","PBRaycast","RaycastSchema","RaycastResultSchema","createBasePBSphereShape","PBSphereShape","SphereShapeSchema","createBasePBTextShape","text","font","opacity","fontSize","fontAutoSize","hTextAlign","vTextAlign","paddingTop","paddingRight","paddingBottom","paddingLeft","lineSpacing","lineCount","textWrapping","shadowBlur","shadowOffsetX","shadowOffsetY","outlineWidth","shadowColor","outlineColor","textColor","PBTextShape","TextShapeSchema","TextAlign","Font","createBasePBUiText","textAlign","PBUiText","UiTextSchema","YGPositionType","YGAlign","YGUnit","YGDirection","YGFlexDirection","YGWrap","YGJustify","YGOverflow","YGDisplay","YGEdge","createBasePBUiTransform","parent","rightOf","positionType","alignContent","alignItems","alignSelf","flexDirection","flexWrap","justifyContent","overflow","display","flex","flexBasisUnit","flexBasis","flexGrow","flexShrink","widthUnit","heightUnit","minWidthUnit","minWidth","minHeightUnit","minHeight","maxWidthUnit","maxWidth","maxHeightUnit","maxHeight","positionLeftUnit","positionLeft","positionTopUnit","positionTop","positionRightUnit","positionRight","positionBottomUnit","positionBottom","marginLeftUnit","marginLeft","marginTopUnit","marginTop","marginRightUnit","marginRight","marginBottomUnit","marginBottom","paddingLeftUnit","paddingTopUnit","paddingRightUnit","paddingBottomUnit","borderLeft","borderTop","borderRight","borderBottom","PBUiTransform","UiTransformSchema","createBasePBVisibilityComponent","PBVisibilityComponent","VisibilityComponentSchema","defineLibraryComponents","defineComponentFromSchema","Animator","AnimatorSchema.AnimatorSchema","AnimatorSchema.COMPONENT_ID","AudioSource","AudioSourceSchema.AudioSourceSchema","AudioSourceSchema.COMPONENT_ID","AvatarAttach","AvatarAttachSchema.AvatarAttachSchema","AvatarAttachSchema.COMPONENT_ID","AvatarModifierArea","AvatarModifierAreaSchema.AvatarModifierAreaSchema","AvatarModifierAreaSchema.COMPONENT_ID","AvatarShape","AvatarShapeSchema.AvatarShapeSchema","AvatarShapeSchema.COMPONENT_ID","Billboard","BillboardSchema.BillboardSchema","BillboardSchema.COMPONENT_ID","BoxShape","BoxShapeSchema.BoxShapeSchema","BoxShapeSchema.COMPONENT_ID","CameraMode","CameraModeSchema.CameraModeSchema","CameraModeSchema.COMPONENT_ID","CameraModeArea","CameraModeAreaSchema.CameraModeAreaSchema","CameraModeAreaSchema.COMPONENT_ID","CylinderShape","CylinderShapeSchema.CylinderShapeSchema","CylinderShapeSchema.COMPONENT_ID","GLTFShape","GLTFShapeSchema.GLTFShapeSchema","GLTFShapeSchema.COMPONENT_ID","Material","MaterialSchema.MaterialSchema","MaterialSchema.COMPONENT_ID","MeshCollider","MeshColliderSchema.MeshColliderSchema","MeshColliderSchema.COMPONENT_ID","MeshRenderer","MeshRendererSchema.MeshRendererSchema","MeshRendererSchema.COMPONENT_ID","NFTShape","NFTShapeSchema.NFTShapeSchema","NFTShapeSchema.COMPONENT_ID","OnPointerDown","OnPointerDownSchema.OnPointerDownSchema","OnPointerDownSchema.COMPONENT_ID","OnPointerDownResult","OnPointerDownResultSchema.OnPointerDownResultSchema","OnPointerDownResultSchema.COMPONENT_ID","OnPointerUp","OnPointerUpSchema.OnPointerUpSchema","OnPointerUpSchema.COMPONENT_ID","OnPointerUpResult","OnPointerUpResultSchema.OnPointerUpResultSchema","OnPointerUpResultSchema.COMPONENT_ID","PlaneShape","PlaneShapeSchema.PlaneShapeSchema","PlaneShapeSchema.COMPONENT_ID","PointerEvents","PointerEventsSchema.PointerEventsSchema","PointerEventsSchema.COMPONENT_ID","PointerEventsResult","PointerEventsResultSchema.PointerEventsResultSchema","PointerEventsResultSchema.COMPONENT_ID","PointerLock","PointerLockSchema.PointerLockSchema","PointerLockSchema.COMPONENT_ID","Raycast","RaycastSchema.RaycastSchema","RaycastSchema.COMPONENT_ID","RaycastResult","RaycastResultSchema.RaycastResultSchema","RaycastResultSchema.COMPONENT_ID","SphereShape","SphereShapeSchema.SphereShapeSchema","SphereShapeSchema.COMPONENT_ID","TextShape","TextShapeSchema.TextShapeSchema","TextShapeSchema.COMPONENT_ID","UiText","UiTextSchema.UiTextSchema","UiTextSchema.COMPONENT_ID","UiTransform","UiTransformSchema.UiTransformSchema","UiTransformSchema.COMPONENT_ID","VisibilityComponent","VisibilityComponentSchema.VisibilityComponentSchema","VisibilityComponentSchema.COMPONENT_ID","TRANSFORM_LENGTH","TransformSchema","ptr","incrementWriteOffset","setFloat32","setUint32","incrementReadOffset","getFloat32","getUint32","defineTransformComponent","defineSdkComponents","engine","autogeneratedComponents","removeComponentDefinition","_id","Transform","IArray","type","writeUint32","item","newArray","readUint32","Bool","writeInt8","readInt8","IEnum","Float32","writeFloat32","readFloat32","Float64","writeFloat64","readFloat64","Int64","writeInt64","BigInt","readInt64","Int32","writeInt32","readInt32","Int16","writeInt16","readInt16","Int8","FlatString","TextEncoder","TextDecoder","readBuffer","EcsString","IMap","spec","key","newValue","IOptional","Schemas","Float","Double","Byte","Short","Int","iInt64","Enum","Map","Optional","dist","types","crdtProtocol","stateIterator","sameData","globalBuffer","key1","entries","key2","updateState","remoteTimestamp","key1Value","newKey1Value","createEvent","processMessage","compareData","getState","distExports","requireDist","getNextSize","currentSize","intendedSize","minNewSize","defaultInitialCapacity","createByteBuffer","options","initialROffset","reading","currentOffset","initialBuffer","initialWOffset","writing","initialCapacity","view","DataView","byteOffset","woffset","roffset","woAdd","newsize","roAdd","bufferLength","resetBuffer","currentReadOffset","currentWriteOffset","getFloat64","getInt8","getInt16","getInt32","getBigInt64","readUint8","getUint8","readUint16","getUint16","readUint64","getBigUint64","toBinary","toCopiedBinary","setFloat64","setInt8","setInt16","setInt32","setBigInt64","writeUint8","setUint8","writeUint16","setUint16","writeUint64","setBigUint64","getInt64","getUint64","setInt64","setUint64","WireMessage","validate","HEADER_LENGTH","readHeader","WireMessage$1","ComponentOperation","EntityUtils","crdtSceneSystem","transports","crdtClient","receivedMessages","transportMessages","getMessages","messagesToProcess","forEach","transport","onmessage","transportType","chunkMessage","Message","entity","componentId","messageBuffer","createMessages","dirtyMap","crdtMessages","componentsId","component","getComponent","entityComponent","has","event","PUT_COMPONENT","DELETE_COMPONENT","transportMessage","some","filter","transportBuffer","send","receiveMessages","crdtMessage","deleteFrom","bb","upsertFromBinary","clearDirty","deepReadonly","defineComponent","constructorDefault","dirtyIterator","Set","defaultBuffer","getDefaultValue","prefillValue","default","isDirty","delete","getOrNull","usedValue","createOrReplace","getMutableOrNull","getMutable","iterator","writeToByteBuffer","updateFromBinary","clear","EntityContainer","staticEntity","Entity","STATIC_ENTITIES_RANGE","dynamicEntity","DYNAMIC_ENTITIES_RANGE","generateEntity","dynamic","removeEntity","isEntityExists","isReservedEntity","getExistingEntities","range","entityCounter","usedEntities","MESSAGE_HEADER_LENGTH","componentDefinition","startMessageOffset","messageLength","header","common","isInRange","MAX_ENTITIES","DYNAMIC_ENTITIES_START_AT","RESERVED_STATIC_ENTITIES","RESERVED_ENTITIES_RANGE","isDynamicEntity","isStaticEntity","SYSTEMS_REGULAR_PRIORITY","SystemContainer","systems","sort","priority","find","remove","selector","findIndex","getSystems","preEngine","entityContainer","componentsDefinition","entitiesComponent","addEntity","newComponent","defComponent","addDynamicEntity","addSystem","removeSystem","getEntitiesWith","components","groupComp","firstComponentDef","componentDefinitions","matches","componentDef","getComponentDefGroup","map","Engine","crdtSystem","baseComponents","update","dt","system","removeSelectedComponents","excludeComponentIds","dirtySet","definition","includes","_componentId","RootEntity","UpdateTimestampStateSchema","timestampLastUpdate","currentTimestamp","WasEntityClickComponentID","IsPointerEventActiveComponentID","EventSystemPriority","wasEntityClickedGenerator","WasEntityClickComponentState","actionButton","down","findLastAction","isPointerEventActiveGenerator","IsPointerEventActiveComponentState","pointerEventType","command","commandToReturn","createNetworkTransport","_args","ECSComponentIDs","componentIds","values","createRendererTransport","dcl","callRpc","catch","error","ObserverEventState","skipNextObservers","currentTarget","initalize","Observer","scope","unregisterOnNextCall","_willBeUnregistered","Observable","onObserverAdded","_observers","_onObserverAdded","_eventState","insertFirst","unregisterOnFirstCall","observer","unshift","addOnce","_deferUnregister","removeCallback","notifyObservers","eventData","lastReturnValue","obs","notifyObserversWithPromise","then","lastReturnedValue","notifyObserver","hasObservers","hasSpecificMask","async","_remove","createSubscriber","eventName","subscribe","onEnterSceneObservable","onEnterScene","onLeaveSceneObservable","onLeaveScene","onSceneReadyObservable","onPlayerExpressionObservable","onVideoEvent","onProfileChanged","onPlayerConnectedObservable","onPlayerDisconnectedObservable","onRealmChangedObservable","onPlayerClickedObservable","_initEventObservables","onEvent","videoData","rendererTransport","pullRendererMessages","byteArray","loadModule","onUpdate","finally","wasEntityClickedFunc","wasEntityClicked","isPointerEventActiveFunc","isPointerEventActive","cyclicParentingChecker","Components","communicationsController","communicationsControllerPromise","_messageObserver","getMessageObserver","ensureCommunicationsController","$","MessageBus","messageQueue","connected","flushing","flush","JSON","parse","payload","sender","sendRaw","messageToSend","stringify","shift","rpcHandle","distExports$1"],"mappings":"4VAQA,IAAWA,EAaAC,EApBXC,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAkBE,QAAAF,EAAAG,QAAkBH,UAAkBA,EAAwBI,cAAAJ,EAAAK,aAAuBL,QAAgBA,EAAsBJ,iBAAA,GAMhIA,EAOMI,EAAQJ,cAAgBI,EAAsBJ,YAAA,CAAA,IAH/CA,EAAgB,GAAI,GAAK,KAErCA,EAAYA,EAAiB,IAAI,GAAK,OAO/BC,EAOAG,EAAQH,QAAUG,EAAgBH,MAAA,CAAA,IALnCA,EAAa,MAAI,GAAK,QAE5BA,EAAMA,EAAa,MAAI,GAAK,QAE5BA,EAAMA,EAAY,KAAI,GAAK,OAM/BG,EAAuBK,aAAA,EAAI,IAK3BL,EAAAI,cAAwB,IAKxBJ,EAAAM,QAAkB,KAKlBN,EAAAG,QAAkBI,KAAKC,GAAK,IAK5BR,EAAkBE,QAAA,KAAiB,EAAVK,KAAKC,0JCpD9BV,OAAOC,eAAeU,OAAS,aAAc,CAAER,OAAO,IACxCQ,OAAAA,YAAG,EAIjB,MAAMC,EAAkB,EAAVH,KAAKC,GA6BnB,SAASG,EAAKV,GACV,MAAMW,GAAUX,EAChB,OAAe,IAAXW,GAAgBC,MAAMD,GACfA,EAEJA,EAAS,EAAI,GAAK,CAC5B,CAUD,SAASE,EAAMb,EAAOc,EAAM,EAAGC,EAAM,GACjC,OAAOT,KAAKQ,IAAIC,EAAKT,KAAKS,IAAID,EAAKd,GACtC,CAoBD,SAASgB,EAAOhB,EAAOiB,GACnB,OAAOjB,EAAQM,KAAKY,MAAMlB,EAAQiB,GAAUA,CAC/C,CA2BD,SAASE,EAAWC,EAASC,GACzB,IAAIC,EAAMN,EAAOK,EAASD,EAAS,KAInC,OAHIE,EAAM,MACNA,GAAO,KAEJA,CACV,CAoCD,SAASC,EAAYH,EAASC,EAAQG,GAClC,IAAIC,EAAS,EAOb,OALIA,EADAnB,KAAKoB,IAAIL,EAASD,IAAYI,EACrBH,EAGAD,EAAUV,EAAKW,EAASD,GAAWI,EAEzCC,CACV,QA8IDjB,OAAAA,OAAiB,CACbmB,cA1RJ,SAAuBC,EAAGC,EAAGC,EAAU,aACnC,MAAMR,EAAMM,EAAIC,EAChB,OAAQC,GAAWR,GAAOA,GAAOQ,CACpC,EAwRGC,MAlRJ,SAAeC,GACX,MAAMC,EAAMD,EAAEE,SAAS,IACvB,OAAIF,GAAK,IACG,IAAMC,GAAKE,cAEhBF,EAAIE,aACd,EA6QGzB,OACAG,QACAuB,KAjPJ,SAAcpC,GACV,OAAOM,KAAK+B,IAAIrC,GAASM,KAAKgC,KACjC,EAgPGtB,SACAuB,UA3NJ,SAAmBvC,EAAOc,EAAKC,GAC3B,OAAQf,EAAQc,IAAQC,EAAMD,EACjC,EA0NG0B,YAlNJ,SAAqBC,EAAY3B,EAAKC,GAClC,OAAO0B,GAAc1B,EAAMD,GAAOA,CACrC,EAiNGK,aACAuB,SA9LJ,SAAkBC,EAAI1B,GAClB,MAAM2B,EAAI5B,EAAO2B,EAAa,EAAT1B,GACrB,OAAOA,EAASX,KAAKoB,IAAIkB,EAAI3B,EAChC,EA4LG4B,WAjLJ,SAAoBC,EAAMC,EAAIJ,GAC1B,IAAIC,EAAI/B,EAAM8B,GAEd,OADAC,GAAK,EAAMA,EAAIA,EAAIA,EAAI,EAAMA,EAAIA,EAC1BG,EAAKH,EAAIE,GAAQ,EAAMF,EACjC,EA8KGrB,cACAyB,iBAhJJ,SAA0B5B,EAASC,EAAQG,GACvC,MAAMF,EAAMH,EAAWC,EAASC,GAChC,IAAII,EAAS,EAOb,OALIA,GADCD,EAAWF,GAAOA,EAAME,EAChBH,EAGAE,EAAYH,EAASA,EAAUE,EAAKE,GAE1CC,CACV,EAuIGwB,KA/HJ,SAAcC,EAAOC,EAAKC,GACtB,OAAOF,GAASC,EAAMD,GAASE,CAClC,EA8HGC,UArHJ,SAAmBH,EAAOC,EAAKC,GAC3B,IAAI9B,EAAMN,EAAOmC,EAAMD,EAAO,KAI9B,OAHI5B,EAAM,MACNA,GAAO,KAEJ4B,EAAQ5B,EAAMT,EAAMuC,EAC9B,EAgHGE,YAxGJ,SAAqB1B,EAAGC,EAAG7B,GACvB,IAAIyB,EAAS,EAOb,OALIA,EADAG,IAAMC,EACGhB,GAAOb,EAAQ4B,IAAMC,EAAID,IAGzB,EAENH,CACV,EAgGG8B,QArFJ,SAAiBC,EAAQC,EAAUC,EAAQC,EAAUP,GACjD,MAAMQ,EAAUR,EAASA,EACnBS,EAAQT,EAASQ,EAKvB,OAAOJ,GAJO,EAAMK,EAAQ,EAAMD,EAAU,GAIpBF,IAHT,EAAMG,EAAQ,EAAMD,GAGMH,GAF3BI,EAAQ,EAAMD,EAAUR,GAEsBO,GAD9CE,EAAQD,EAEzB,EA8EGE,YAvEJ,SAAqBhD,EAAKC,GACtB,OAAID,IAAQC,EACDD,EAEJR,KAAKyD,UAAYhD,EAAMD,GAAOA,CACxC,EAmEGkD,eAxDJ,SAAwB1C,EAAKR,EAAKC,GAC9B,OAAQO,EAAMR,IAAQC,EAAMD,EAC/B,EAuDGmD,eA7CJ,SAAwBC,EAASpD,EAAKC,GAClC,OAAQA,EAAMD,GAAOoD,EAAUpD,CAClC,EA4CGqD,iBAtCJ,SAA0BC,GAWtB,OAAOA,EAAQ3D,EAAQH,KAAKY,OAAOkD,EAAQ9D,KAAKC,IAAME,EACzD,EA2BGA,uGC5TJZ,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAkBsE,aAAA,EAClB,MAAMC,EAAUC,iBACVC,EAAeC,oBACfC,EAAWC,iBAKjB,SAAWN,GA4BP,SAASO,EAITC,EAAI,EAIJC,EAAI,EAIJC,EAAI,GACA,MAAO,CAAEF,IAAGC,IAAGC,IAClB,CAQD,SAASC,EAAIC,EAASC,GAClB,MAAO,CACHL,EAAGI,EAAQJ,EAAIK,EAAQL,EACvBC,EAAGG,EAAQH,EAAII,EAAQJ,EACvBC,EAAGE,EAAQF,EAAIG,EAAQH,EAE9B,CA4DD,SAASI,EAAKC,EAAQC,GAClBA,EAAKR,EAAIO,EAAOP,EAChBQ,EAAKP,EAAIM,EAAON,EAChBO,EAAKN,EAAIK,EAAOL,CACnB,CASD,SAASO,EAAeT,EAAGC,EAAGC,EAAGM,GAC7BA,EAAKR,EAAIA,EACTQ,EAAKP,EAAIA,EACTO,EAAKN,EAAIA,CACZ,CAMD,SAASQ,EAAMH,GACX,OAAOvF,OAAO2F,OAAO,CAAE,EAAEJ,EAC5B,CA0CD,SAASK,EAAUC,EAAOC,EAAS,GAC/B,OAAOf,EAAOc,EAAMC,GAASD,EAAMC,EAAS,GAAID,EAAMC,EAAS,GAClE,CAmBD,SAASC,EAAeF,EAAOC,EAAQlE,GACnCA,EAAOoD,EAAIa,EAAMC,GACjBlE,EAAOqD,EAAIY,EAAMC,EAAS,GAC1BlE,EAAOsD,EAAIW,EAAMC,EAAS,EAC7B,CAkBD,SAAS1E,EAAO4E,GACZ,OAAOvF,KAAKwF,KAAKD,EAAOhB,EAAIgB,EAAOhB,EAAIgB,EAAOf,EAAIe,EAAOf,EAAIe,EAAOd,EAAIc,EAAOd,EAClF,CAeD,SAASgB,EAAWF,EAAQG,EAAOvE,GAC/BA,EAAOoD,EAAIgB,EAAOhB,EAAImB,EACtBvE,EAAOqD,EAAIe,EAAOf,EAAIkB,EACtBvE,EAAOsD,EAAIc,EAAOd,EAAIiB,CACzB,CAiBD,SAASC,EAAoBJ,EAAQK,GACjC,MAAMzE,EAASmD,EAAO,EAAG,EAAG,GAE5B,OADAuB,EAAyBN,EAAQK,EAAKzE,GAC/BA,CACV,CAQD,SAAS0E,EAAyBN,EAAQK,EAAKzE,GAC/B,IAARyE,GAAqB,IAARA,EAIjBH,EAAWF,EAAQ,EAAMK,EAAKzE,GAH1B0D,EAAKU,EAAQpE,EAIpB,CAOD,SAASc,EAAUsD,GACf,OAAOI,EAAoBJ,EAAQ5E,EAAO4E,GAC7C,CAiBD,SAASO,EAAIC,EAAMC,GACf,OAAOD,EAAKxB,EAAIyB,EAAMzB,EAAIwB,EAAKvB,EAAIwB,EAAMxB,EAAIuB,EAAKtB,EAAIuB,EAAMvB,CAC/D,CAkBD,SAASwB,EAAkBV,EAAQW,EAAQ/E,GACvC,MAAMoD,EAAEA,EAACC,EAAEA,EAACC,EAAEA,GAAMc,EACdY,EAAID,EAAOE,GACXC,EAAI,GAAKF,EAAE,GAAK5B,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,IAAM1B,EAAI0B,EAAE,KACnDhF,EAAOoD,GAAK4B,EAAE,GAAK5B,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,KAAOE,EACtDlF,EAAOqD,GAAK2B,EAAE,GAAK5B,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,KAAOE,EACtDlF,EAAOsD,GAAK0B,EAAE,GAAK5B,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,IAAM1B,EAAI0B,EAAE,KAAOE,CAC1D,CAmBD,SAASC,EAAYf,EAAQgB,EAAGpF,GAC5B,MAAMoD,EAAEA,EAACC,EAAEA,EAACC,EAAEA,GAAMc,GACZhB,EAAGiC,EAAIhC,EAAGiC,EAAIhC,EAAGiC,EAAIL,EAAGM,GAAOJ,EAEjCK,EAAKD,EAAKpC,EAAIkC,EAAKhC,EAAIiC,EAAKlC,EAC5BqC,EAAKF,EAAKnC,EAAIkC,EAAKnC,EAAIiC,EAAK/B,EAC5BqC,EAAKH,EAAKlC,EAAI+B,EAAKhC,EAAIiC,EAAKlC,EAC5BwC,GAAMP,EAAKjC,EAAIkC,EAAKjC,EAAIkC,EAAKjC,EAEnCtD,EAAOoD,EAAIqC,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EACjDtF,EAAOqD,EAAIqC,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EACjDvF,EAAOsD,EAAIqC,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,CACpD,CAsBD,SAASQ,EAAUpE,EAAOC,EAAKC,EAAQ3B,GACnCA,EAAOoD,EAAI3B,EAAM2B,GAAK1B,EAAI0B,EAAI3B,EAAM2B,GAAKzB,EACzC3B,EAAOqD,EAAI5B,EAAM4B,GAAK3B,EAAI2B,EAAI5B,EAAM4B,GAAK1B,EACzC3B,EAAOsD,EAAI7B,EAAM6B,GAAK5B,EAAI4B,EAAI7B,EAAM6B,GAAK3B,CAC5C,CAsBD,SAASmE,EAAWlB,EAAMC,EAAO7E,GAC7BA,EAAOoD,EAAIwB,EAAKvB,EAAIwB,EAAMvB,EAAIsB,EAAKtB,EAAIuB,EAAMxB,EAC7CrD,EAAOqD,EAAIuB,EAAKtB,EAAIuB,EAAMzB,EAAIwB,EAAKxB,EAAIyB,EAAMvB,EAC7CtD,EAAOsD,EAAIsB,EAAKxB,EAAIyB,EAAMxB,EAAIuB,EAAKvB,EAAIwB,EAAMzB,CAChD,CAsBD,SAAS2C,EAA0B3B,EAAQ4B,EAAgBhG,GACvD,OAAOiG,EAAoC7B,EAAOhB,EAAGgB,EAAOf,EAAGe,EAAOd,EAAG0C,EAAgBhG,EAC5F,CAWD,SAASiG,EAAoC7C,EAAGC,EAAGC,EAAG0C,EAAgBhG,GAClE,MAAMgF,EAAIgB,EAAef,GACnBiB,EAAK9C,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,GAAKA,EAAE,IACxCmB,EAAK/C,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,GAAKA,EAAE,IACxCoB,EAAKhD,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,IAAMA,EAAE,IACzCqB,EAAK,GAAKjD,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,IAAMA,EAAE,KACpDhF,EAAOoD,EAAI8C,EAAKG,EAChBrG,EAAOqD,EAAI8C,EAAKE,EAChBrG,EAAOsD,EAAI8C,EAAKC,CACnB,CAsBD,SAASC,EAAqBlC,EAAQ4B,EAAgBhG,GAClDuG,EAA+BnC,EAAOhB,EAAGgB,EAAOf,EAAGe,EAAOd,EAAG0C,EAAgBhG,EAChF,CAWD,SAASuG,EAA+BnD,EAAGC,EAAGC,EAAG0C,EAAgBhG,GAC7D,MAAMgF,EAAIgB,EAAef,GACzBjF,EAAOoD,EAAIA,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,GACvChF,EAAOqD,EAAID,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,GACvChF,EAAOsD,EAAIF,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,GAC1C,CA2DD,SAASwB,EAAWjI,EAAOc,EAAKC,EAAKU,GACjC,IAAIoD,EAAI7E,EAAM6E,EACdA,EAAIA,EAAI9D,EAAI8D,EAAI9D,EAAI8D,EAAIA,EACxBA,EAAIA,EAAI/D,EAAI+D,EAAI/D,EAAI+D,EAAIA,EACxB,IAAIC,EAAI9E,EAAM8E,EACdA,EAAIA,EAAI/D,EAAI+D,EAAI/D,EAAI+D,EAAIA,EACxBA,EAAIA,EAAIhE,EAAIgE,EAAIhE,EAAIgE,EAAIA,EACxB,IAAIC,EAAI/E,EAAM+E,EACdA,EAAIA,EAAIhE,EAAIgE,EAAIhE,EAAIgE,EAAIA,EACxBA,EAAIA,EAAIjE,EAAIiE,EAAIjE,EAAIiE,EAAIA,EACxBO,EAAeT,EAAGC,EAAGC,EAAGtD,EAC3B,CAyED,SAASyG,EAAgB1E,EAAQE,GAC7B,MAAMmB,EAAIrB,EAAOqB,EAAInB,EAAOmB,EACtBC,EAAItB,EAAOsB,EAAIpB,EAAOoB,EACtBC,EAAIvB,EAAOuB,EAAIrB,EAAOqB,EAC5B,OAAOF,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,CAC9B,CAqCD,SAASoD,EAAsBC,EAAOC,EAAOC,EAAO7G,GAChD,MAAM8G,EAAO/D,EAAagE,WAAW5D,SACrCJ,EAAagE,WAAWC,gCAAgCL,EAAOC,EAAOC,EAAOC,GAC7EpD,EAAKX,EAAagE,WAAWE,YAAYH,GAAO9G,EACnD,CA0ED,SAASkH,EAAc1D,EAASC,EAASzD,GACrCA,EAAOoD,EAAII,EAAQJ,EAAIK,EAAQL,EAC/BpD,EAAOqD,EAAIG,EAAQH,EAAII,EAAQJ,EAC/BrD,EAAOsD,EAAIE,EAAQF,EAAIG,EAAQH,CAClC,CASD,SAAS6D,EAAsB3D,EAASJ,EAAGC,EAAGC,EAAGtD,GAC7CA,EAAOoD,EAAII,EAAQJ,EAAIA,EACvBpD,EAAOqD,EAAIG,EAAQH,EAAIA,EACvBrD,EAAOsD,EAAIE,EAAQF,EAAIA,CAC1B,CA+CD,SAAS8D,EAA+B5D,EAASJ,EAAGC,EAAGC,EAAGtD,GAClDoD,EAAII,EAAQJ,EACZpD,EAAOoD,EAAIA,EAGXpD,EAAOoD,EAAII,EAAQJ,EAEnBC,EAAIG,EAAQH,EACZrD,EAAOqD,EAAIA,EAGXrD,EAAOqD,EAAIG,EAAQH,EAEnBC,EAAIE,EAAQF,EACZtD,EAAOsD,EAAIA,EAGXtD,EAAOsD,EAAIE,EAAQF,CAE1B,CASD,SAAS+D,EAA+B7D,EAASJ,EAAGC,EAAGC,EAAGtD,GAClDoD,EAAII,EAAQJ,EACZpD,EAAOoD,EAAIA,EAGXpD,EAAOoD,EAAII,EAAQJ,EAEnBC,EAAIG,EAAQH,EACZrD,EAAOqD,EAAIA,EAGXrD,EAAOqD,EAAIG,EAAQH,EAEnBC,EAAIE,EAAQF,EACZtD,EAAOsD,EAAIA,EAGXtD,EAAOsD,EAAIE,EAAQF,CAE1B,CAv1BDV,EAAQ0E,aAhBR,SAAsBlD,GAClB,MAAMmD,EAAO1I,KAAKoB,IAAImE,EAAOhB,GAE7B,OAAImE,IADS1I,KAAKoB,IAAImE,EAAOf,IAKzBkE,IADS1I,KAAKoB,IAAImE,EAAOd,EAShC,EAuBDV,EAAQO,OAASA,EAcjBP,EAAQW,IAAMA,EAWdX,EAAQ4E,SALR,SAAkBhE,EAASC,EAASzD,GAChCA,EAAOoD,EAAII,EAAQJ,EAAIK,EAAQL,EAC/BpD,EAAOqD,EAAIG,EAAQH,EAAII,EAAQJ,EAC/BrD,EAAOsD,EAAIE,EAAQF,EAAIG,EAAQH,CAClC,EAaDV,EAAQ6E,SAPR,SAAkBjE,EAASC,GACvB,MAAO,CACHL,EAAGI,EAAQJ,EAAIK,EAAQL,EACvBC,EAAGG,EAAQH,EAAII,EAAQJ,EACvBC,EAAGE,EAAQF,EAAIG,EAAQH,EAE9B,EAWDV,EAAQ8E,cALR,SAAuBlE,EAASC,EAASzD,GACrCA,EAAOoD,EAAII,EAAQJ,EAAIK,EAAQL,EAC/BpD,EAAOqD,EAAIG,EAAQH,EAAII,EAAQJ,EAC/BrD,EAAOsD,EAAIE,EAAQF,EAAIG,EAAQH,CAClC,EAcDV,EAAQ+E,wBALR,SAAiCnE,EAASJ,EAAGC,EAAGC,EAAGtD,GAC/CA,EAAOoD,EAAII,EAAQJ,EAAIA,EACvBpD,EAAOqD,EAAIG,EAAQH,EAAIA,EACvBrD,EAAOsD,EAAIE,EAAQF,EAAIA,CAC1B,EASDV,EAAQgF,OAHR,SAAgBrJ,GACZ,MAAO,CAAE6E,GAAI7E,EAAM6E,EAAGC,GAAI9E,EAAM8E,EAAGC,GAAI/E,EAAM+E,EAChD,EAWDV,EAAQc,KAAOA,EAafd,EAAQiB,eAAiBA,EAQzBjB,EAAQkB,MAAQA,EAehBlB,EAAQiF,cANR,SAAuBC,EAAStE,EAASuE,EAAMC,GAC3C,MAAMC,EAAKtD,EAAImD,EAASC,GAAQC,EAGhC,OADUC,GAAMA,GADLtD,EAAInB,EAASuE,GAAQC,GAGnC,EAoBDpF,EAAQsF,uBAXR,SAAgCJ,EAAStE,EAAS2E,GAC9C,MAAMC,EAAKtH,EAAUgH,GACfO,EAAKvH,EAAU0C,GACf8E,EAAU3D,EAAIyD,EAAIC,GAClBE,EAAIpF,IAEV,OADA2C,EAAWsC,EAAIC,EAAIE,GACf5D,EAAI4D,EAAGJ,GAAU,EACVtJ,KAAK2J,KAAKF,IAEbzJ,KAAK2J,KAAKF,EACrB,EAWD1F,EAAQoB,UAAYA,EAWpBpB,EAAQ6F,eAHR,SAAwBxE,EAAOC,GAC3B,OAAOF,EAAUC,EAAOC,EAC3B,EAaDtB,EAAQuB,eAAiBA,EAWzBvB,EAAQ8F,oBAHR,SAA6BzE,EAAOC,EAAQlE,GACxC,OAAOmE,EAAeF,EAAOC,EAAQlE,EACxC,EAUD4C,EAAQpD,OAASA,EAQjBoD,EAAQ+F,cAHR,SAAuBvE,GACnB,OAAOA,EAAOhB,EAAIgB,EAAOhB,EAAIgB,EAAOf,EAAIe,EAAOf,EAAIe,EAAOd,EAAIc,EAAOd,CACxE,EAYDV,EAAQ0B,WAAaA,EASrB1B,EAAQ2B,MAHR,SAAeH,EAAQG,GACnB,OAAOpB,EAAOiB,EAAOhB,EAAImB,EAAOH,EAAOf,EAAIkB,EAAOH,EAAOd,EAAIiB,EAChE,EAaD3B,EAAQ4B,oBAAsBA,EAc9B5B,EAAQ8B,yBAA2BA,EASnC9B,EAAQ9B,UAAYA,EASpB8B,EAAQgG,eAHR,SAAwBxE,EAAQpE,GAC5B0E,EAAyBN,EAAQ5E,EAAO4E,GAASpE,EACpD,EAWD4C,EAAQ+B,IAAMA,EAWd/B,EAAQiG,aALR,SAAsBzE,EAAQW,GAC1B,MAAM/E,EAAS8D,EAAMM,GAErB,OADAU,EAAkBV,EAAQW,EAAQ/E,GAC3BA,CACV,EAeD4C,EAAQkC,kBAAoBA,EAW5BlC,EAAQkG,OALR,SAAgB1E,EAAQgB,GACpB,MAAMpF,EAASmD,IAEf,OADAgC,EAAYf,EAAQgB,EAAGpF,GAChBA,CACV,EAqBD4C,EAAQuC,YAAcA,EAatBvC,EAAQpB,KALR,SAAcC,EAAOC,EAAKC,GACtB,MAAM3B,EAASmD,EAAO,EAAG,EAAG,GAE5B,OADA0C,EAAUpE,EAAOC,EAAKC,EAAQ3B,GACvBA,CACV,EAcD4C,EAAQiD,UAAYA,EAapBjD,EAAQmG,MALR,SAAenE,EAAMC,GACjB,MAAM7E,EAAS4C,EAAQoG,OAEvB,OADApG,EAAQkD,WAAWlB,EAAMC,EAAO7E,GACzBA,CACV,EAcD4C,EAAQkD,WAAaA,EAarBlD,EAAQqG,qBALR,SAA8B7E,EAAQ4B,GAClC,MAAMhG,EAAS4C,EAAQoG,OAEvB,OADAjD,EAA0B3B,EAAQ4B,EAAgBhG,GAC3CA,CACV,EAYD4C,EAAQmD,0BAA4BA,EAoBpCnD,EAAQqD,oCAAsCA,EAa9CrD,EAAQsG,gBALR,SAAyB9E,EAAQ4B,GAC7B,MAAMhG,EAAS4C,EAAQoG,OAEvB,OADA1C,EAAqBlC,EAAQ4B,EAAgBhG,GACtCA,CACV,EAYD4C,EAAQ0D,qBAAuBA,EAgB/B1D,EAAQ2D,+BAAiCA,EAiCzC3D,EAAQuG,WAvBR,SAAoBpH,EAAQE,EAAQmH,EAAQC,EAAQ1H,GAChD,MAAMQ,EAAUR,EAASA,EACnBS,EAAQT,EAASQ,EAmBvB,OAAOgB,EAlBG,IACL,EAAMlB,EAAOmB,IACRrB,EAAOqB,EAAIgG,EAAOhG,GAAKzB,GACxB,EAAMI,EAAOqB,EAAI,EAAMnB,EAAOmB,EAAI,EAAMgG,EAAOhG,EAAIiG,EAAOjG,GACvDjB,IACFJ,EAAOqB,EAAI,EAAMnB,EAAOmB,EAAI,EAAMgG,EAAOhG,EAAIiG,EAAOjG,GAAKhB,GACzD,IACL,EAAMH,EAAOoB,IACRtB,EAAOsB,EAAI+F,EAAO/F,GAAK1B,GACxB,EAAMI,EAAOsB,EAAI,EAAMpB,EAAOoB,EAAI,EAAM+F,EAAO/F,EAAIgG,EAAOhG,GACvDlB,IACFJ,EAAOsB,EAAI,EAAMpB,EAAOoB,EAAI,EAAM+F,EAAO/F,EAAIgG,EAAOhG,GAAKjB,GACzD,IACL,EAAMH,EAAOqB,IACRvB,EAAOuB,EAAI8F,EAAO9F,GAAK3B,GACxB,EAAMI,EAAOuB,EAAI,EAAMrB,EAAOqB,EAAI,EAAM8F,EAAO9F,EAAI+F,EAAO/F,GACvDnB,IACFJ,EAAOuB,EAAI,EAAMrB,EAAOqB,EAAI,EAAM8F,EAAO9F,EAAI+F,EAAO/F,GAAKlB,GAEtE,EAgBDQ,EAAQxD,MALR,SAAeb,EAAOc,EAAKC,GACvB,MAAMgK,EAAInG,IAEV,OADAqD,EAAWjI,EAAOc,EAAKC,EAAKgK,GACrBA,CACV,EAuBD1G,EAAQ4D,WAAaA,EA+BrB5D,EAAQd,QArBR,SAAiBC,EAAQC,EAAUC,EAAQC,EAAUP,GACjD,MAAMQ,EAAUR,EAASA,EACnBS,EAAQT,EAASQ,EACjBoH,EAAQ,EAAMnH,EAAQ,EAAMD,EAAU,EACtCqH,GAAS,EAAMpH,EAAQ,EAAMD,EAC7BsH,EAAQrH,EAAQ,EAAMD,EAAUR,EAChC+H,EAAQtH,EAAQD,EAatB,OAAOgB,EAZGpB,EAAOqB,EAAImG,EACjBtH,EAAOmB,EAAIoG,EACXxH,EAASoB,EAAIqG,EACbvH,EAASkB,EAAIsG,EACP3H,EAAOsB,EAAIkG,EACjBtH,EAAOoB,EAAImG,EACXxH,EAASqB,EAAIoG,EACbvH,EAASmB,EAAIqG,EACP3H,EAAOuB,EAAIiG,EACjBtH,EAAOqB,EAAIkG,EACXxH,EAASsB,EAAImG,EACbvH,EAASoB,EAAIoG,EAEpB,EAaD9G,EAAQ+G,SALR,SAAkB/E,EAAMC,GACpB,MAAMxF,EAAM8D,IAEZ,OADAkE,EAA+BxC,EAAOD,EAAKxB,EAAGwB,EAAKvB,EAAGuB,EAAKtB,EAAGjE,GACvDA,CACV,EAaDuD,EAAQgH,SALR,SAAkBhF,EAAMC,GACpB,MAAMvF,EAAM6D,IAEZ,OADAiE,EAA+BxC,EAAMC,EAAMzB,EAAGyB,EAAMxB,EAAGwB,EAAMvB,EAAGhE,GACzDA,CACV,EAWDsD,EAAQiH,SAHR,SAAkB9H,EAAQE,GACtB,OAAOpD,KAAKwF,KAAKoC,EAAgB1E,EAAQE,GAC5C,EAcDW,EAAQ6D,gBAAkBA,EAY1B7D,EAAQkH,OALR,SAAgB/H,EAAQE,GACpB,MAAM6H,EAASvG,EAAIxB,EAAQE,GAE3B,OADAqC,EAAWwF,EAAQ,GAAKA,GACjBA,CACV,EAiBDlH,EAAQmH,iBALR,SAA0BpD,EAAOC,EAAOC,GACpC,MAAMmD,EAAWpH,EAAQoG,OAEzB,OADAtC,EAAsBC,EAAOC,EAAOC,EAAOmD,GACpCA,CACV,EAcDpH,EAAQ8D,sBAAwBA,EAQhC9D,EAAQnC,SAHR,SAAkB2D,GACd,MAAO,IAAIA,EAAOhB,MAAMgB,EAAOf,MAAMe,EAAOd,IAC/C,EAYDV,EAAQqH,YANR,SAAqB7F,GACjB,IAAI8F,EAAO9F,EAAOhB,GAAK,EAGvB,OAFA8G,EAAe,IAAPA,GAAe9F,EAAOf,GAAK,GACnC6G,EAAe,IAAPA,GAAe9F,EAAOd,GAAK,GAC5B4G,CACV,EAaDtH,EAAQuH,OALR,SAAgB3G,EAASC,GACrB,OAAQD,EAAQJ,IAAMK,EAAQL,GAC1BI,EAAQH,IAAMI,EAAQJ,GACtBG,EAAQF,IAAMG,EAAQH,CAC7B,EAaDV,EAAQwH,kBALR,SAA2B5G,EAASC,EAASpD,EAAUwC,EAAQjE,SAC3D,OAAQqE,EAASlE,OAAOmB,cAAcsD,EAAQJ,EAAGK,EAAQL,EAAG/C,IACxD4C,EAASlE,OAAOmB,cAAcsD,EAAQH,EAAGI,EAAQJ,EAAGhD,IACpD4C,EAASlE,OAAOmB,cAAcsD,EAAQF,EAAGG,EAAQH,EAAGjD,EAC3D,EAYDuC,EAAQyH,eAHR,SAAwBjG,EAAQhB,EAAGC,EAAGC,GAClC,OAAOc,EAAOhB,IAAMA,GAAKgB,EAAOf,IAAMA,GAAKe,EAAOd,IAAMA,CAC3D,EAaDV,EAAQ0H,SALR,SAAkB9G,EAASC,GACvB,MAAMzD,EAASmD,IAEf,OADA+D,EAAc1D,EAASC,EAASzD,GACzBA,CACV,EAaD4C,EAAQsE,cAAgBA,EAaxBtE,EAAQuE,sBAAwBA,EAahCvE,EAAQ2H,iBALR,SAA0B/G,EAASJ,EAAGC,EAAGC,GACrC,MAAMtD,EAASmD,IAEf,OADAgE,EAAsB3D,EAASJ,EAAGC,EAAGC,EAAGtD,GACjCA,CACV,EAcD4C,EAAQ4H,OAPR,SAAgBhH,EAASC,GACrB,MAAO,CACHL,EAAGI,EAAQJ,EAAIK,EAAQL,EACvBC,EAAGG,EAAQH,EAAII,EAAQJ,EACvBC,EAAGE,EAAQF,EAAIG,EAAQH,EAE9B,EAaDV,EAAQ6H,YALR,SAAqBjH,EAASC,EAASzD,GACnCA,EAAOoD,EAAII,EAAQJ,EAAIK,EAAQL,EAC/BpD,EAAOqD,EAAIG,EAAQH,EAAII,EAAQJ,EAC/BrD,EAAOsD,EAAIE,EAAQF,EAAIG,EAAQH,CAClC,EA6BDV,EAAQwE,+BAAiCA,EA4BzCxE,EAAQyE,+BAAiCA,EAQzCzE,EAAQnD,MAHR,SAAe+D,GACX,OAAOL,EAAOtE,KAAKY,MAAM+D,EAAQJ,GAAIvE,KAAKY,MAAM+D,EAAQH,GAAIxE,KAAKY,MAAM+D,EAAQF,GAClF,EASDV,EAAQ8H,MAHR,SAAelH,GACX,OAAOL,EAAOK,EAAQJ,EAAIvE,KAAKY,MAAM+D,EAAQJ,GAAII,EAAQH,EAAIxE,KAAKY,MAAM+D,EAAQH,GAAIG,EAAQF,EAAIzE,KAAKY,MAAM+D,EAAQF,GACtH,EASDV,EAAQoG,KAHR,WACI,OAAO7F,EAAO,EAAK,EAAK,EAC3B,EASDP,EAAQ+H,IAHR,WACI,OAAOxH,EAAO,EAAK,EAAK,EAC3B,EASDP,EAAQgI,GAHR,WACI,OAAOzH,EAAO,EAAK,EAAK,EAC3B,EASDP,EAAQiI,KAHR,WACI,OAAO1H,EAAO,GAAM,EAAK,EAC5B,EASDP,EAAQkI,QAHR,WACI,OAAO3H,EAAO,EAAK,EAAK,EAC3B,EASDP,EAAQmI,SAHR,WACI,OAAO5H,EAAO,EAAK,GAAM,EAC5B,EASDP,EAAQoI,MAHR,WACI,OAAO7H,EAAO,EAAK,EAAK,EAC3B,EASDP,EAAQqI,KAHR,WACI,OAAO9H,GAAQ,EAAK,EAAK,EAC5B,EASDP,EAAQsI,OAHR,WACI,OAAO/H,EAAOtE,KAAKyD,SAAUzD,KAAKyD,SAAUzD,KAAKyD,SACpD,CAEJ,CAt8BD,CAs8BahE,EAAQsE,UAAYtE,EAAkBsE,QAAA,CAAA,8MC/8BnDxE,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAgB6M,WAAA,EAChB,MAAMC,EAAYtI,iBACZuI,EAAWrI,iBAMjB,SAAWmI,GAQP,SAAShI,EAAOhD,EAAGC,EAAGkL,EAAGC,GACrB,MAAO,CACHpD,OAAQiD,EAAUxI,QAAQO,OAAOhD,EAAGC,EAAGkL,GACvCC,EAAGA,EAEV,CACDJ,EAAMhI,OAASA,EAUfgI,EAAMnH,UAHN,SAAmBC,GACf,OAAOd,EAAOc,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GACrD,EAeDkH,EAAMK,WANN,SAAoBC,EAASC,EAASC,GAIlC,OAHexI,EAAO,EAAK,EAAK,EAAK,EAIxC,EAiBDgI,EAAMS,qBARN,SAA8BC,EAAQ1D,GAClC,MAAMnI,EAASmD,EAAO,EAAK,EAAK,EAAK,GAKrC,OAJAnD,EAAOmI,OAASiD,EAAUxI,QAAQ9B,UAAUqH,GAC5CnI,EAAOuL,IAAMpD,EAAO/E,EAAIyI,EAAOzI,EAC3B+E,EAAO9E,EAAIwI,EAAOxI,EAClB8E,EAAO7E,EAAIuI,EAAOvI,GACftD,CACV,EAaDmL,EAAMW,2CAJN,SAAoDD,EAAQ1D,EAAQ4D,GAChE,MAAMR,IAAMpD,EAAO/E,EAAIyI,EAAOzI,EAAI+E,EAAO9E,EAAIwI,EAAOxI,EAAI8E,EAAO7E,EAAIuI,EAAOvI,GAC1E,OAAO8H,EAAUxI,QAAQ+B,IAAIoH,EAAO5D,GAAUoD,CACjD,EAQDJ,EAAMa,QAHN,SAAiBC,GACb,MAAO,CAACA,EAAM9D,OAAO/E,EAAG6I,EAAM9D,OAAO9E,EAAG4I,EAAM9D,OAAO7E,EAAG2I,EAAMV,EACjE,EASDJ,EAAMrH,MAHN,SAAemI,GACX,OAAO9I,EAAO8I,EAAM9D,OAAO/E,EAAG6I,EAAM9D,OAAO9E,EAAG4I,EAAM9D,OAAO7E,EAAG2I,EAAMV,EACvE,EAYDJ,EAAMlB,YAPN,SAAqBiC,GAKjB,OAAO,CACV,EAqBDf,EAAMrK,UAfN,SAAmBmL,GACf,MAAMjM,EAASmD,EAAO,EAAG,EAAG,EAAG,GACzBgJ,EAAOtN,KAAKwF,KAAK4H,EAAM9D,OAAO/E,EAAI6I,EAAM9D,OAAO/E,EACjD6I,EAAM9D,OAAO9E,EAAI4I,EAAM9D,OAAO9E,EAC9B4I,EAAM9D,OAAO7E,EAAI2I,EAAM9D,OAAO7E,GAClC,IAAI8I,EAAY,EAQhB,OAPa,IAATD,IACAC,EAAY,EAAMD,GAEtBnM,EAAOmI,OAAO/E,EAAI6I,EAAM9D,OAAO/E,EAAIgJ,EACnCpM,EAAOmI,OAAO9E,EAAI4I,EAAM9D,OAAO9E,EAAI+I,EACnCpM,EAAOmI,OAAO7E,EAAI2I,EAAM9D,OAAO7E,EAAI8I,EACnCpM,EAAOuL,GAAKa,EACLH,CACV,EAqBDd,EAAMkB,UAdN,SAAmBJ,EAAOjG,GACtB,MAAMsG,EAAmBjB,EAASkB,OAAOpJ,SACzCkI,EAASkB,OAAOC,eAAexG,EAAgBsG,GAC/C,MAAMtH,EAAIsH,EAAiBrH,GACrB7B,EAAI6I,EAAM9D,OAAO/E,EACjBC,EAAI4I,EAAM9D,OAAO9E,EACjBC,EAAI2I,EAAM9D,OAAO7E,EACjBiI,EAAIU,EAAMV,EAKhB,OAAOpI,EAJSC,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,GAAKuG,EAAIvG,EAAE,GACvC5B,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,GAAKuG,EAAIvG,EAAE,GACvC5B,EAAI4B,EAAE,GAAK3B,EAAI2B,EAAE,GAAK1B,EAAI0B,EAAE,IAAMuG,EAAIvG,EAAE,IACzC5B,EAAI4B,EAAE,IAAM3B,EAAI2B,EAAE,IAAM1B,EAAI0B,EAAE,IAAMuG,EAAIvG,EAAE,IAE5D,EAaDmG,EAAMsB,cANN,SAAuBR,EAAOF,GAC1B,OAAQE,EAAM9D,OAAO/E,EAAI2I,EAAM3I,EAC3B6I,EAAM9D,OAAO9E,EAAI0I,EAAM1I,EACvB4I,EAAM9D,OAAO7E,EAAIyI,EAAMzI,EACvB2I,EAAMV,CACb,EAiCDJ,EAAMuB,eAxBN,SAAwBC,EAAQC,EAAQC,GACpC,MAAMC,EAAKF,EAAOxJ,EAAIuJ,EAAOvJ,EACvB2J,EAAKH,EAAOvJ,EAAIsJ,EAAOtJ,EACvB2J,EAAKJ,EAAOtJ,EAAIqJ,EAAOrJ,EACvB2J,EAAKJ,EAAOzJ,EAAIuJ,EAAOvJ,EACvB8J,EAAKL,EAAOxJ,EAAIsJ,EAAOtJ,EACvB8J,EAAKN,EAAOvJ,EAAIqJ,EAAOrJ,EACvB8J,EAAKL,EAAKI,EAAKH,EAAKE,EACpBG,EAAKL,EAAKC,EAAKH,EAAKK,EACpBG,EAAKR,EAAKI,EAAKH,EAAKE,EACpBM,EAAO1O,KAAKwF,KAAK+I,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GAChD,IAAIE,EAEAA,EADS,IAATD,EACU,EAAMA,EAGN,EAEd,MAAMpF,EAASiD,EAAUxI,QAAQO,OAAOiK,EAAKI,EAASH,EAAKG,EAASF,EAAKE,GACzE,MAAO,CACHrF,SACAoD,IAAKpD,EAAO/E,EAAIuJ,EAAOvJ,EAAI+E,EAAO9E,EAAIsJ,EAAOtJ,EAAI8E,EAAO7E,EAAIqJ,EAAOrJ,GAE1E,EAYD6H,EAAMsC,gBAJN,SAAyBxB,EAAOyB,EAAWrN,GAEvC,OADY+K,EAAUxI,QAAQ+B,IAAIsH,EAAM9D,OAAQuF,IAClCrN,CACjB,EAUD8K,EAAMwC,iBAHN,SAA0B1B,EAAOF,GAC7B,OAAOX,EAAUxI,QAAQ+B,IAAIoH,EAAOE,EAAM9D,QAAU8D,EAAMV,CAC7D,CAEJ,CArMD,CAqMWjN,EAAQ6M,QAAU7M,EAAgB6M,MAAA,CAAA,uGC9M7C/M,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAiBiO,YAAA,EACjB,MAAMnB,EAAYtI,iBACZC,EAAeC,oBACf4K,EAAU1K,gBAMhB,SAAWqJ,GAOPA,EAAOvH,EAHP,SAAW6I,GACP,OAAOA,EAAK5I,EACf,EAED,IAAI6I,EAAkB,EACtB,MAAMC,EAAoB,CAAA,EAW1B,SAAS5K,IACL,MAAM6K,EAAY,CACdC,WAAY,EACZC,YAAY,EACZC,eAAe,EACfC,kBAAkB,EAClBC,qBAAqB,EACrBpJ,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGtD,OADAqJ,EAAsBN,GAAW,GAC1BA,CACV,CAqBD,SAAS7J,EAAeF,EAAOC,EAAQlE,GACnC,IAAK,IAAIuO,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BvO,EAAOiF,GAAGsJ,GAAStK,EAAMsK,EAAQrK,GAErCsK,EAAexO,EAClB,CAoCD,SAASyO,EAAgBC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYzP,GACrN,MAAMgF,EAAIhF,EAAOiF,GACjBD,EAAE,GAAK0J,EACP1J,EAAE,GAAK2J,EACP3J,EAAE,GAAK4J,EACP5J,EAAE,GAAK6J,EACP7J,EAAE,GAAK8J,EACP9J,EAAE,GAAK+J,EACP/J,EAAE,GAAKgK,EACPhK,EAAE,GAAKiK,EACPjK,EAAE,GAAKkK,EACPlK,EAAE,GAAKmK,EACPnK,EAAE,IAAMoK,EACRpK,EAAE,IAAMqK,EACRrK,EAAE,IAAMsK,EACRtK,EAAE,IAAMuK,EACRvK,EAAE,IAAMwK,EACRxK,EAAE,IAAMyK,EACRjB,EAAexO,EAClB,CAsBD,SAAS0P,EAAWhB,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,GACpM,MAAMzP,EAASmD,IACT6B,EAAIhF,EAAOiF,GAkBjB,OAjBAD,EAAE,GAAK0J,EACP1J,EAAE,GAAK2J,EACP3J,EAAE,GAAK4J,EACP5J,EAAE,GAAK6J,EACP7J,EAAE,GAAK8J,EACP9J,EAAE,GAAK+J,EACP/J,EAAE,GAAKgK,EACPhK,EAAE,GAAKiK,EACPjK,EAAE,GAAKkK,EACPlK,EAAE,GAAKmK,EACPnK,EAAE,IAAMoK,EACRpK,EAAE,IAAMqK,EACRrK,EAAE,IAAMsK,EACRtK,EAAE,IAAMuK,EACRvK,EAAE,IAAMwK,EACRxK,EAAE,IAAMyK,EACRjB,EAAexO,GACRA,CACV,CAsBD,SAAS2P,EAAapL,EAAOyF,EAAU4F,EAAa5P,GAChD,MAAM6P,EAAY,CAAC1M,IAAUA,IAAUA,KACvC2M,EAAavL,EAAMnB,EAAGmB,EAAMlB,EAAGkB,EAAMjB,EAAGuM,EAAU,IAClDE,EAAoB/F,EAAU6F,EAAU,IACxC3I,EAAc2I,EAAU,GAAIA,EAAU,GAAI7P,GAC1CgQ,EAAehQ,EAAQ4P,EAC1B,CAMD,SAASK,IACL,MAAMC,EAAWR,EAAW,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAEvG,OADApB,EAAsB4B,GAAU,GACzBA,CACV,CAqCD,SAASC,EAAexN,EAAO3C,GAC3B,MAAMoQ,EAAIvR,KAAKwR,IAAI1N,GACb2I,EAAIzM,KAAKyR,IAAI3N,GACnB8L,EAAgB,EAAK,EAAK,EAAK,EAAK,EAAKnD,EAAG8E,EAAG,EAAK,GAAMA,EAAG9E,EAAG,EAAK,EAAK,EAAK,EAAK,EAAKtL,GACzFsO,EAAsBtO,EAAc,IAANsL,GAAiB,IAAN8E,EAC5C,CAkBD,SAASG,EAAe5N,EAAO3C,GAC3B,MAAMoQ,EAAIvR,KAAKwR,IAAI1N,GACb2I,EAAIzM,KAAKyR,IAAI3N,GACnB8L,EAAgBnD,EAAG,GAAM8E,EAAG,EAAK,EAAK,EAAK,EAAK,EAAKA,EAAG,EAAK9E,EAAG,EAAK,EAAK,EAAK,EAAK,EAAKtL,GACzFsO,EAAsBtO,EAAc,IAANsL,GAAiB,IAAN8E,EAC5C,CAkBD,SAASI,EAAe7N,EAAO3C,GAC3B,MAAMoQ,EAAIvR,KAAKwR,IAAI1N,GACb2I,EAAIzM,KAAKyR,IAAI3N,GACnB8L,EAAgBnD,EAAG8E,EAAG,EAAK,GAAMA,EAAG9E,EAAG,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAKtL,GACzFsO,EAAsBtO,EAAc,IAANsL,GAAiB,IAAN8E,EAC5C,CAoBD,SAASK,EAAkBC,EAAO/N,EAAO3C,GACrC,MAAMoQ,EAAIvR,KAAKwR,KAAK1N,GACd2I,EAAIzM,KAAKyR,KAAK3N,GACdgO,EAAK,EAAIrF,EACTvD,EAAOqD,EAAUxI,QAAQ9B,UAAU4P,GACnC1L,EAAIhF,EAAOiF,GACjBD,EAAE,GAAK+C,EAAK3E,EAAI2E,EAAK3E,EAAIuN,EAAKrF,EAC9BtG,EAAE,GAAK+C,EAAK3E,EAAI2E,EAAK1E,EAAIsN,EAAK5I,EAAKzE,EAAI8M,EACvCpL,EAAE,GAAK+C,EAAK3E,EAAI2E,EAAKzE,EAAIqN,EAAK5I,EAAK1E,EAAI+M,EACvCpL,EAAE,GAAK,EACPA,EAAE,GAAK+C,EAAK1E,EAAI0E,EAAK3E,EAAIuN,EAAK5I,EAAKzE,EAAI8M,EACvCpL,EAAE,GAAK+C,EAAK1E,EAAI0E,EAAK1E,EAAIsN,EAAKrF,EAC9BtG,EAAE,GAAK+C,EAAK1E,EAAI0E,EAAKzE,EAAIqN,EAAK5I,EAAK3E,EAAIgN,EACvCpL,EAAE,GAAK,EACPA,EAAE,GAAK+C,EAAKzE,EAAIyE,EAAK3E,EAAIuN,EAAK5I,EAAK1E,EAAI+M,EACvCpL,EAAE,GAAK+C,EAAKzE,EAAIyE,EAAK1E,EAAIsN,EAAK5I,EAAK3E,EAAIgN,EACvCpL,EAAE,IAAM+C,EAAKzE,EAAIyE,EAAKzE,EAAIqN,EAAKrF,EAC/BtG,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRwJ,EAAexO,EAClB,CAsBD,SAAS4Q,EAA0BC,EAAKC,EAAOC,EAAM/Q,GACjD,MAAMgR,EAAmBjO,EAAagE,WAAWiC,OACjDjG,EAAagE,WAAW6J,0BAA0BC,EAAKC,EAAOC,EAAMC,GACpEjB,EAAoBiB,EAAkBhR,EACzC,CAsBD,SAAS8P,EAAa1M,EAAGC,EAAGC,EAAGtD,GAC3ByO,EAAgBrL,EAAG,EAAK,EAAK,EAAK,EAAKC,EAAG,EAAK,EAAK,EAAK,EAAKC,EAAG,EAAK,EAAK,EAAK,EAAK,EAAKtD,GAC1FsO,EAAsBtO,EAAc,IAANoD,GAAiB,IAANC,GAAiB,IAANC,EACvD,CAsBD,SAAS2N,EAAiB7N,EAAGC,EAAGC,EAAGtD,GAC/ByO,EAAgB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAKrL,EAAGC,EAAGC,EAAG,EAAKtD,GAC1FsO,EAAsBtO,EAAc,IAANoD,GAAiB,IAANC,GAAiB,IAANC,EACvD,CAsBD,SAASuC,EAAUqL,EAAYC,EAAUC,EAAUpR,GAC/C,IAAK,IAAIuO,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BvO,EAAOiF,GAAGsJ,GACN2C,EAAWjM,GAAGsJ,IAAU,EAAM6C,GAAYD,EAASlM,GAAGsJ,GAAS6C,EAEvE5C,EAAexO,EAClB,CA4BD,SAASqR,EAAmBH,EAAYC,EAAUC,EAAUpR,GACxD,MAAMsR,EAAalG,EAAUxI,QAAQoG,OAC/BuI,EAAgBxO,EAAagE,WAAWiC,OACxCwI,EAAmBpG,EAAUxI,QAAQoG,OAC3CyI,EAAUP,EAAYI,EAAYC,EAAeC,GACjD,MAAME,EAAWtG,EAAUxI,QAAQoG,OAC7B2I,EAAc5O,EAAagE,WAAWiC,OACtC4I,EAAiBxG,EAAUxI,QAAQoG,OACzCyI,EAAUN,EAAUO,EAAUC,EAAaC,GAC3C,MAAMC,EAAczG,EAAUxI,QAAQoG,OACtCoC,EAAUxI,QAAQiD,UAAUyL,EAAYI,EAAUN,EAAUS,GAC5D,MAAMC,EAAiB/O,EAAagE,WAAWiC,OAC/CjG,EAAagE,WAAWgL,WAAWR,EAAeI,EAAaP,EAAUU,GACzE,MAAME,EAAoB5G,EAAUxI,QAAQoG,OAC5CoC,EAAUxI,QAAQiD,UAAU2L,EAAkBI,EAAgBR,EAAUY,GACxErC,EAAakC,EAAaC,EAAgBE,EAAmBhS,EAChE,CAwBD,SAASiS,EAAcC,EAAKtS,EAAQuS,EAAInS,GACpC,MAAMoS,EAAQhH,EAAUxI,QAAQoG,OAC1BqJ,EAAQjH,EAAUxI,QAAQoG,OAC1BsJ,EAAQlH,EAAUxI,QAAQoG,OAEhCoC,EAAUxI,QAAQ8E,cAAc9H,EAAQsS,EAAKI,GAC7ClH,EAAUxI,QAAQgG,eAAe0J,EAAOA,GAExClH,EAAUxI,QAAQkD,WAAWqM,EAAIG,EAAOF,GACxC,MAAMG,EAAgBnH,EAAUxI,QAAQ+F,cAAcyJ,GAChC,IAAlBG,EACAH,EAAMhP,EAAI,EAGVgI,EAAUxI,QAAQ8B,yBAAyB0N,EAAOvT,KAAKwF,KAAKkO,GAAgBH,GAGhFhH,EAAUxI,QAAQkD,WAAWwM,EAAOF,EAAOC,GAC3CjH,EAAUxI,QAAQgG,eAAeyJ,EAAOA,GAExC,MAAMG,GAAMpH,EAAUxI,QAAQ+B,IAAIyN,EAAOF,GACnCO,GAAMrH,EAAUxI,QAAQ+B,IAAI0N,EAAOH,GACnCQ,GAAMtH,EAAUxI,QAAQ+B,IAAI2N,EAAOJ,GACzCzD,EAAgB2D,EAAMhP,EAAGiP,EAAMjP,EAAGkP,EAAMlP,EAAG,EAAKgP,EAAM/O,EAAGgP,EAAMhP,EAAGiP,EAAMjP,EAAG,EAAK+O,EAAM9O,EAAG+O,EAAM/O,EAAGgP,EAAMhP,EAAG,EAAKkP,EAAIC,EAAIC,EAAI,EAAK1S,EACpI,CAwBD,SAAS2S,EAAcT,EAAKtS,EAAQuS,EAAInS,GACpC,MAAMoS,EAAQhH,EAAUxI,QAAQoG,OAC1BqJ,EAAQjH,EAAUxI,QAAQoG,OAC1BsJ,EAAQlH,EAAUxI,QAAQoG,OAEhCoC,EAAUxI,QAAQ8E,cAAcwK,EAAKtS,EAAQ0S,GAC7ClH,EAAUxI,QAAQgG,eAAe0J,EAAOA,GAExClH,EAAUxI,QAAQkD,WAAWqM,EAAIG,EAAOF,GACxC,MAAMG,EAAgBnH,EAAUxI,QAAQ+F,cAAcyJ,GAChC,IAAlBG,EACAH,EAAMhP,EAAI,EAGVgI,EAAUxI,QAAQ8B,yBAAyB0N,EAAOvT,KAAKwF,KAAKkO,GAAgBH,GAGhFhH,EAAUxI,QAAQkD,WAAWwM,EAAOF,EAAOC,GAC3CjH,EAAUxI,QAAQgG,eAAeyJ,EAAOA,GAExC,MAAMG,GAAMpH,EAAUxI,QAAQ+B,IAAIyN,EAAOF,GACnCO,GAAMrH,EAAUxI,QAAQ+B,IAAI0N,EAAOH,GACnCQ,GAAMtH,EAAUxI,QAAQ+B,IAAI2N,EAAOJ,GACzCzD,EAAgB2D,EAAMhP,EAAGiP,EAAMjP,EAAGkP,EAAMlP,EAAG,EAAKgP,EAAM/O,EAAGgP,EAAMhP,EAAGiP,EAAMjP,EAAG,EAAK+O,EAAM9O,EAAG+O,EAAM/O,EAAGgP,EAAMhP,EAAG,EAAKkP,EAAIC,EAAIC,EAAI,EAAK1S,EACpI,CAwBD,SAAS4S,EAAaC,EAAOC,EAAQC,EAAOC,EAAMhT,GAC9C,MAEMG,EAAI,EAAM0S,EACVzS,EAAI,EAAM0S,EACVxH,EAAI,GAHA0H,EADAD,GAKJxH,IAJIyH,EADAD,IACAC,EADAD,GAMVtE,EAAgBtO,EAAG,EAAK,EAAK,EAAK,EAAKC,EAAG,EAAK,EAAK,EAAK,EAAKkL,EAAG,EAAK,EAAK,EAAKC,EAAG,EAAKvL,GACxFsO,EAAsBtO,EAAc,IAANG,GAAiB,IAANC,GAAiB,IAANkL,GAAiB,IAANC,EAClE,CA4BD,SAAS0H,EAAsBrO,EAAMC,EAAOqO,EAAQC,EAAKJ,EAAOC,EAAMhT,GASlEyO,EANU,GAAO5J,EAAQD,GAMN,EAAK,EAAK,EAAK,EALxB,GAAOuO,EAAMD,GAKmB,EAAK,EAAK,EAAK,EAJ/C,GAHAF,EADAD,GAQuD,GAFrDnO,EAAOC,IAAUD,EAAOC,IACxBsO,EAAMD,IAAWA,EAASC,KAN5BH,EADAD,IACAC,EADAD,GAQuE,EAAK/S,GACtFwO,EAAexO,EAClB,CA4BD,SAASoT,EAAsBxO,EAAMC,EAAOqO,EAAQC,EAAKJ,EAAOC,EAAMhT,GAClEiT,EAAsBrO,EAAMC,EAAOqO,EAAQC,EAAKJ,EAAOC,EAAMhT,GAC7DA,EAAOiF,GAAG,MAAQ,CACrB,CA8CD,SAASoO,EAAsBC,EAAKC,EAAQR,EAAOC,EAAMhT,EAAQwT,GAAqB,GAClF,MAAMjL,EAAIwK,EACJU,EAAIT,EACJ7R,EAAI,EAAMtC,KAAK6U,IAAU,GAANJ,GAKzB7E,EAJU+E,EAAqBrS,EAAIoS,EAASpS,EAIzB,EAAK,EAAK,EAAK,EAHxBqS,EAAqBrS,EAAIA,EAAIoS,EAGG,EAAK,EAAK,EAAK,GAF9CE,EAAIlL,IAAMkL,EAAIlL,GAEwC,EAAK,EAAK,GAD/D,EAAMkL,EAAIlL,GAAMkL,EAAIlL,GACmD,EAAKvI,GACxFsO,EAAsBtO,GAAQ,EACjC,CAyBD,SAAS2T,EAAsBL,EAAKC,EAAQR,EAAOC,EAAMhT,EAAQwT,GAAqB,GAMlF,MAAMjL,EAAIwK,EACJU,EAAIT,EACJ7R,EAAI,EAAMtC,KAAK6U,IAAU,GAANJ,GAKzB7E,EAJU+E,EAAqBrS,EAAIoS,EAASpS,EAIzB,EAAK,EAAK,EAAK,EAHxBqS,EAAqBrS,EAAIA,EAAIoS,EAGG,EAAK,EAAK,EAAK,IAF7CE,EAAIlL,IAAMkL,EAAIlL,IAEwC,EAAK,EAAK,GADhE,EAAIkL,EAAIlL,GAAMkL,EAAIlL,GACsD,EAAKvI,GACzFsO,EAAsBtO,GAAQ,EACjC,CA4ED,SAASwM,EAAezH,EAAQ/E,GAC5B,MAAM4T,EAAK5T,EAAOiF,GACZ4O,EAAK9O,EAAOE,GAClB2O,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,IACXD,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,IACXD,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,GACXD,EAAG,IAAMC,EAAG,IACZD,EAAG,IAAMC,EAAG,IACZD,EAAG,IAAMC,EAAG,GACZD,EAAG,IAAMC,EAAG,GACZD,EAAG,IAAMC,EAAG,IACZD,EAAG,IAAMC,EAAG,IAEZvF,EAAsBtO,EAAQ+E,EAAOmJ,WAAYnJ,EAAOqJ,iBAC3D,CAkBD,SAAS0F,EAAgB5H,EAAQlM,GAC7B,MAAMiM,EAAQ2B,EAAQzC,MAAMrK,UAAUoL,GAChC9I,EAAI6I,EAAM9D,OAAO/E,EACjBC,EAAI4I,EAAM9D,OAAO9E,EACjBC,EAAI2I,EAAM9D,OAAO7E,EACjByQ,GAAQ,EAAI3Q,EACZ4Q,GAAS,EAAI3Q,EACb4Q,GAAS,EAAI3Q,EACnBmL,EAAgBsF,EAAO3Q,EAAI,EAAG4Q,EAAQ5Q,EAAG6Q,EAAQ7Q,EAAG,EAAK2Q,EAAO1Q,EAAG2Q,EAAQ3Q,EAAI,EAAG4Q,EAAQ5Q,EAAG,EAAK0Q,EAAOzQ,EAAG0Q,EAAQ1Q,EAAG2Q,EAAQ3Q,EAAI,EAAG,EAAKyQ,EAAO9H,EAAMV,EAAGyI,EAAQ/H,EAAMV,EAAG0I,EAAQhI,EAAMV,EAAG,EAAKvL,EACrM,CAkBD,SAAS+P,EAAoBjJ,EAAM9G,GAC/B,MAAMkU,EAAKpN,EAAK1D,EAAI0D,EAAK1D,EACnB+Q,EAAKrN,EAAKzD,EAAIyD,EAAKzD,EACnB+Q,EAAKtN,EAAKxD,EAAIwD,EAAKxD,EACnBgK,EAAKxG,EAAK1D,EAAI0D,EAAKzD,EACnBgR,EAAKvN,EAAKxD,EAAIwD,EAAK5B,EACnBoP,EAAKxN,EAAKxD,EAAIwD,EAAK1D,EACnBmR,EAAKzN,EAAKzD,EAAIyD,EAAK5B,EACnBkI,EAAKtG,EAAKzD,EAAIyD,EAAKxD,EACnBkR,EAAK1N,EAAK1D,EAAI0D,EAAK5B,EACzBlF,EAAOiF,GAAG,GAAK,EAAM,GAAOkP,EAAKC,GACjCpU,EAAOiF,GAAG,GAAK,GAAOqI,EAAK+G,GAC3BrU,EAAOiF,GAAG,GAAK,GAAOqP,EAAKC,GAC3BvU,EAAOiF,GAAG,GAAK,EACfjF,EAAOiF,GAAG,GAAK,GAAOqI,EAAK+G,GAC3BrU,EAAOiF,GAAG,GAAK,EAAM,GAAOmP,EAAKF,GACjClU,EAAOiF,GAAG,GAAK,GAAOmI,EAAKoH,GAC3BxU,EAAOiF,GAAG,GAAK,EACfjF,EAAOiF,GAAG,GAAK,GAAOqP,EAAKC,GAC3BvU,EAAOiF,GAAG,GAAK,GAAOmI,EAAKoH,GAC3BxU,EAAOiF,GAAG,IAAM,EAAM,GAAOkP,EAAKD,GAClClU,EAAOiF,GAAG,IAAM,EAChBjF,EAAOiF,GAAG,IAAM,EAChBjF,EAAOiF,GAAG,IAAM,EAChBjF,EAAOiF,GAAG,IAAM,EAChBjF,EAAOiF,GAAG,IAAM,EAChBuJ,EAAexO,EAClB,CAGD,SAASwO,EAAeX,GACpBA,EAAKI,WAAaH,IAClBD,EAAKK,YAAa,EAClBL,EAAKM,eAAgB,EACrBN,EAAKO,kBAAmB,EACxBP,EAAKQ,qBAAsB,CAC9B,CAmED,SAASoG,EAAY5G,GACjB,IAAwB,IAApBA,EAAKK,WACL,OAAO,EAEX,MAAMlJ,EAAI6I,EAAK5I,GAETyP,EAAM1P,EAAE,GAAI2P,EAAM3P,EAAE,GAAI4P,EAAM5P,EAAE,GAAI6P,EAAM7P,EAAE,GAE5C8P,EAAM9P,EAAE,GAAI+P,EAAM/P,EAAE,GAAIgQ,EAAMhQ,EAAE,GAAIiQ,EAAMjQ,EAAE,GAE5CkQ,EAAMlQ,EAAE,GAAImQ,EAAMnQ,EAAE,GAAIoQ,EAAMpQ,EAAE,IAAKqQ,EAAMrQ,EAAE,IAE7CsQ,EAAMtQ,EAAE,IAAKuQ,EAAMvQ,EAAE,IAAKwQ,EAAMxQ,EAAE,IAAKyQ,EAAMzQ,EAAE,IAa/C0Q,EAAYN,EAAMK,EAAMD,EAAMH,EAC9BM,EAAYR,EAAMM,EAAMF,EAAMF,EAC9BO,EAAYT,EAAMK,EAAMD,EAAMH,EAC9BS,EAAYX,EAAMO,EAAMH,EAAMD,EAC9BS,EAAYZ,EAAMM,EAAMJ,EAAME,EAC9BS,EAAYb,EAAMK,EAAMD,EAAMH,EAMpC,OAAOT,IALaK,EAAMW,EAAYV,EAAMW,EAAYV,EAAMW,GAKrCjB,IAJLG,EAAMY,EAAYV,EAAMa,EAAYZ,EAAMa,GAInBlB,IAHvBE,EAAMa,EAAYZ,EAAMc,EAAYZ,EAAMc,GAGDlB,IAFzCC,EAAMc,EAAYb,EAAMe,EAAYd,EAAMe,EAGjE,CA6CD,SAASvO,EAASqG,EAAMmI,EAAOhW,GAC3B,IAAK,IAAIuO,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BvO,EAAOiF,GAAGsJ,GAASV,EAAK5I,GAAGsJ,GAASyH,EAAM/Q,GAAGsJ,GAEjDC,EAAexO,EAClB,CA8BD,SAASiW,EAAYtS,EAAQ3D,GACzB,IAA0B,IAAtB2D,EAAOuK,WAEP,YADAxK,EAAKC,EAAQ3D,GAIjB,MAAMgF,EAAIrB,EAAOsB,GAEXyP,EAAM1P,EAAE,GAAI2P,EAAM3P,EAAE,GAAI4P,EAAM5P,EAAE,GAAI6P,EAAM7P,EAAE,GAC5C8P,EAAM9P,EAAE,GAAI+P,EAAM/P,EAAE,GAAIgQ,EAAMhQ,EAAE,GAAIiQ,EAAMjQ,EAAE,GAC5CkQ,EAAMlQ,EAAE,GAAImQ,EAAMnQ,EAAE,GAAIoQ,EAAMpQ,EAAE,IAAKqQ,EAAMrQ,EAAE,IAC7CsQ,EAAMtQ,EAAE,IAAKuQ,EAAMvQ,EAAE,IAAKwQ,EAAMxQ,EAAE,IAAKyQ,EAAMzQ,EAAE,IAG/C0Q,EAAYN,EAAMK,EAAMD,EAAMH,EAC9BM,EAAYR,EAAMM,EAAMF,EAAMF,EAC9BO,EAAYT,EAAMK,EAAMD,EAAMH,EAC9BS,EAAYX,EAAMO,EAAMH,EAAMD,EAC9BS,EAAYZ,EAAMM,EAAMJ,EAAME,EAC9BS,EAAYb,EAAMK,EAAMD,EAAMH,EAC9Be,IAAcnB,EAAMW,EAAYV,EAAMW,EAAYV,EAAMW,GACxDO,IAAcrB,EAAMY,EAAYV,EAAMa,EAAYZ,EAAMa,GACxDM,IAActB,EAAMa,EAAYZ,EAAMc,EAAYZ,EAAMc,GACxDM,IAAcvB,EAAMc,EAAYb,EAAMe,EAAYd,EAAMe,GACxDO,EAAM5B,EAAMwB,EAAYvB,EAAMwB,EAAYvB,EAAMwB,EAAYvB,EAAMwB,EACxE,GAAY,IAARC,EAEA,YADA5S,EAAKC,EAAQ3D,GAGjB,MAAMuW,EAAS,EAAID,EACbE,EAAYxB,EAAMS,EAAMD,EAAMP,EAC9BwB,EAAY1B,EAAMU,EAAMF,EAAMN,EAC9ByB,EAAY3B,EAAMS,EAAMD,EAAMP,EAC9B2B,EAAY7B,EAAMW,EAAMH,EAAML,EAC9B2B,EAAY9B,EAAMU,EAAMF,EAAMN,EAC9B6B,EAAY/B,EAAMS,EAAMD,EAAMP,EAC9B+B,EAAY9B,EAAMK,EAAMD,EAAMH,EAC9B8B,EAAYhC,EAAMM,EAAMF,EAAMF,EAC9B+B,EAAYjC,EAAMK,EAAMD,EAAMH,EAC9BiC,EAAYnC,EAAMO,EAAMH,EAAMD,EAC9BiC,EAAYpC,EAAMM,EAAMF,EAAMF,EAC9BmC,EAAYrC,EAAMK,EAAMD,EAAMH,EAapCtG,EAAgByH,EAAYK,IAZR5B,EAAMe,EAAYd,EAAMe,EAAYd,EAAMe,GAYdW,IAR5B5B,EAAM6B,EAAY5B,EAAM6B,EAAY5B,EAAM6B,GAQMH,IAJhD5B,EAAMmC,EAAYlC,EAAMmC,EAAYlC,EAAMmC,GAI0BT,EAAQJ,EAAYI,IAXxF7B,EAAMgB,EAAYd,EAAMiB,EAAYhB,EAAMiB,GAWkES,IAP5G7B,EAAM8B,EAAY5B,EAAM+B,EAAY9B,EAAM+B,GAOsFL,IAHhI7B,EAAMoC,EAAYlC,EAAMqC,EAAYpC,EAAMqC,GAG0GX,EAAQH,EAAYG,IAVxK7B,EAAMiB,EAAYhB,EAAMkB,EAAYhB,EAAMkB,GAUkJQ,IAN5L7B,EAAM+B,EAAY9B,EAAMgC,EAAY9B,EAAMgC,GAMsKN,IAFhN7B,EAAMqC,EAAYpC,EAAMsC,EAAYpC,EAAMsC,GAE0LZ,EAAQF,EAAYE,IATxP7B,EAAMkB,EAAYjB,EAAMmB,EAAYlB,EAAMmB,GASkOQ,IAL5Q7B,EAAMgC,EAAY/B,EAAMiC,EAAYhC,EAAMiC,GAKsPN,IADhS7B,EAAMsC,EAAYrC,EAAMuC,EAAYtC,EAAMuC,GAC0QZ,EAAQvW,EAEnV,CAgCD,SAASoX,EAAyBvJ,EAAMzK,EAAGC,EAAGC,GAC1CuK,EAAK5I,GAAG,IAAM7B,EACdyK,EAAK5I,GAAG,IAAM5B,EACdwK,EAAK5I,GAAG,IAAM3B,EACdkL,EAAeX,EAClB,CAOD,SAASmC,EAAenC,EAAMwJ,GAC1BD,EAAyBvJ,EAAMwJ,EAAQjU,EAAGiU,EAAQhU,EAAGgU,EAAQ/T,EAChE,CAgDD,SAASI,EAAKrC,EAAMuC,GAChB0T,EAAYjW,EAAMuC,EAAKqB,IACvBqJ,EAAsB1K,EAAMvC,EAAK6M,WAAY7M,EAAK+M,iBAAkB/M,EAAK8M,cAAe9M,EAAKgN,oBAChG,CAQD,SAASiJ,EAAYzJ,EAAM0J,EAAWC,EAAa,GAC/C,IAAK,IAAIjJ,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BgJ,EAAUC,EAAajJ,GAASV,EAAK5I,GAAGsJ,EAE/C,CAQD,SAASrH,EAAc2G,EAAMmI,EAAOhW,GAC5B6N,EAAKK,WACLxK,EAAKsS,EAAOhW,GAGZgW,EAAM9H,WACNxK,EAAKmK,EAAM7N,IAGfyX,EAAgB5J,EAAMmI,EAAOhW,EAAOiF,GAAI,GACxCuJ,EAAexO,GAClB,CASD,SAASyX,EAAgB5J,EAAMmI,EAAOhW,EAAQkE,GAC1C,MAAMc,EAAI6I,EAAK5I,GACTyS,EAAS1B,EAAM/Q,GAEf0S,EAAM3S,EAAE,GAAI4S,EAAM5S,EAAE,GAAI6S,EAAM7S,EAAE,GAAI8S,EAAM9S,EAAE,GAC5C+S,EAAM/S,EAAE,GAAIgT,EAAMhT,EAAE,GAAIiT,EAAMjT,EAAE,GAAIkT,EAAMlT,EAAE,GAC5CmT,EAAMnT,EAAE,GAAIoT,EAAMpT,EAAE,GAAIqT,EAAOrT,EAAE,IAAKsT,EAAOtT,EAAE,IAC/CuT,EAAOvT,EAAE,IAAKwT,EAAOxT,EAAE,IAAKyT,EAAOzT,EAAE,IAAK0T,EAAO1T,EAAE,IACnD2T,EAAMjB,EAAO,GAAIkB,EAAMlB,EAAO,GAAImB,EAAMnB,EAAO,GAAIoB,EAAMpB,EAAO,GAChEqB,EAAMrB,EAAO,GAAIsB,EAAMtB,EAAO,GAAIuB,EAAMvB,EAAO,GAAIwB,EAAMxB,EAAO,GAChEyB,EAAMzB,EAAO,GAAI0B,EAAM1B,EAAO,GAAI2B,EAAO3B,EAAO,IAAK4B,EAAO5B,EAAO,IACnE6B,EAAO7B,EAAO,IAAK8B,EAAO9B,EAAO,IAAK+B,EAAO/B,EAAO,IAAKgC,EAAOhC,EAAO,IAE7E1X,EAAOkE,GAAUyT,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAC3DvZ,EAAOkE,EAAS,GAAKyT,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAAMtB,EAAM0B,EAC/DxZ,EAAOkE,EAAS,GAAKyT,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAAOvB,EAAM2B,EAChEzZ,EAAOkE,EAAS,GAAKyT,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAAOxB,EAAM4B,EAChE1Z,EAAOkE,EAAS,GAAK6T,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAC/DvZ,EAAOkE,EAAS,GAAK6T,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAC/DxZ,EAAOkE,EAAS,GAAK6T,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAAOnB,EAAMuB,EAChEzZ,EAAOkE,EAAS,GAAK6T,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAAOpB,EAAMwB,EAChE1Z,EAAOkE,EAAS,GAAKiU,EAAMQ,EAAMP,EAAMW,EAAMV,EAAOc,EAAMb,EAAOiB,EACjEvZ,EAAOkE,EAAS,GAAKiU,EAAMS,EAAMR,EAAMY,EAAMX,EAAOe,EAAMd,EAAOkB,EACjExZ,EAAOkE,EAAS,IAAMiU,EAAMU,EAAMT,EAAMa,EAAMZ,EAAOgB,EAAOf,EAAOmB,EACnEzZ,EAAOkE,EAAS,IAAMiU,EAAMW,EAAMV,EAAMc,EAAMb,EAAOiB,EAAOhB,EAAOoB,EACnE1Z,EAAOkE,EAAS,IAAMqU,EAAOI,EAAMH,EAAOO,EAAMN,EAAOU,EAAMT,EAAOa,EACpEvZ,EAAOkE,EAAS,IAAMqU,EAAOK,EAAMJ,EAAOQ,EAAMP,EAAOW,EAAMV,EAAOc,EACpExZ,EAAOkE,EAAS,IAAMqU,EAAOM,EAAML,EAAOS,EAAMR,EAAOY,EAAOX,EAAOe,EACrEzZ,EAAOkE,EAAS,IAAMqU,EAAOO,EAAMN,EAAOU,EAAMT,EAAOa,EAAOZ,EAAOgB,CACxE,CAkED,SAASjI,EAAU5D,EAAMtJ,EAAOyF,EAAU4F,GACtC,GAAI/B,EAAKK,WAUL,OATI0B,IACAA,EAAcxE,EAAUxI,QAAQO,OAAO,EAAG,EAAG,IAE7CoB,IACAA,EAAQ6G,EAAUxI,QAAQO,OAAO,EAAG,EAAG,IAEvC6G,IACAA,EAAWjH,EAAagE,WAAW5D,OAAO,EAAG,EAAG,EAAG,KAEhD,EAEX,MAAM6B,EAAI6I,EAAK5I,GACX2K,IACAA,EAAcxE,EAAUxI,QAAQO,OAAO6B,EAAE,IAAKA,EAAE,IAAKA,EAAE,MAE3D,MAAM2U,EAAYpV,GAAS6G,EAAUxI,QAAQoG,OAO7C,GANA2Q,EAAUvW,EAAIvE,KAAKwF,KAAKW,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC7D2U,EAAUtW,EAAIxE,KAAKwF,KAAKW,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAC7D2U,EAAUrW,EAAIzE,KAAKwF,KAAKW,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAAMA,EAAE,KAC1DyP,EAAY5G,IAAS,IACrB8L,EAAUtW,IAAM,GAEA,IAAhBsW,EAAUvW,GAA2B,IAAhBuW,EAAUtW,GAA2B,IAAhBsW,EAAUrW,EAIpD,OAHI0G,IACAA,EAAWjH,EAAagE,WAAW5D,OAAO,EAAG,EAAG,EAAG,KAEhD,EAEX,GAAI6G,EAAU,CAEV,MAAM4P,EAAK,EAAID,EAAUvW,EAAGyW,EAAK,EAAIF,EAAUtW,EAAGyW,EAAK,EAAIH,EAAUrW,EAC/DuM,EAAY1M,IAClBsL,EAAgBzJ,EAAE,GAAK4U,EAAI5U,EAAE,GAAK4U,EAAI5U,EAAE,GAAK4U,EAAI,EAAK5U,EAAE,GAAK6U,EAAI7U,EAAE,GAAK6U,EAAI7U,EAAE,GAAK6U,EAAI,EAAK7U,EAAE,GAAK8U,EAAI9U,EAAE,GAAK8U,EAAI9U,EAAE,IAAM8U,EAAI,EAAK,EAAK,EAAK,EAAK,EAAKjK,GACvJ9M,EAAagE,WAAWgT,wBAAwBlK,EAAW7F,EAC9D,CACD,OAAO,CACV,CAoED,SAAS1F,EAAWuJ,EAAMtJ,EAAOvE,GAC7B,IAAK,IAAIuO,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BvO,EAAOiF,GAAGsJ,GAASV,EAAK5I,GAAGsJ,GAAShK,EAExCiK,EAAexO,EAClB,CA0CD,SAASga,EAAuBnM,EAAM7N,GAClC,MAAMuE,EAAQ6G,EAAUxI,QAAQoG,OAChC,IAAKyI,EAAU5D,EAAMtJ,GAEjB,YADAvE,EAASiQ,KAGb,MAAMjL,EAAI6I,EAAK5I,GAET2U,EAAK,EAAIrV,EAAMnB,EAAGyW,EAAK,EAAItV,EAAMlB,EAAGyW,EAAK,EAAIvV,EAAMjB,EACzDmL,EAAgBzJ,EAAE,GAAK4U,EAAI5U,EAAE,GAAK4U,EAAI5U,EAAE,GAAK4U,EAAI,EAAK5U,EAAE,GAAK6U,EAAI7U,EAAE,GAAK6U,EAAI7U,EAAE,GAAK6U,EAAI,EAAK7U,EAAE,GAAK8U,EAAI9U,EAAE,GAAK8U,EAAI9U,EAAE,IAAM8U,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK9Z,EAC1J,CA0BD,SAASsO,EAAsBT,EAAMK,EAAY+L,GAAkB,EAAO9L,GAAgB,EAAO+L,GAAqB,GAClHrM,EAAKI,WAAaH,IAClBD,EAAKK,WAAaA,EAClBL,EAAKM,cAAgBD,GAAcC,EACnCN,EAAKO,kBAAmBP,EAAKK,YAAqB+L,EAClDpM,EAAKQ,qBAAsBR,EAAKM,eAAwB+L,CAC3D,CA5jDD3N,EAAO4N,iBAHP,WACI,OAAOpM,CACV,EAiBDxB,EAAOpJ,OAASA,EAahBoJ,EAAOvI,UALP,SAAmBC,EAAOC,EAAS,GAC/B,MAAMlE,EAASmD,IAEf,OADAgB,EAAeF,EAAOC,EAAQlE,GACvBA,CACV,EAcDuM,EAAOpI,eAAiBA,EAcxBoI,EAAO6N,0BANP,SAAmCnW,EAAOC,EAAQK,EAAOvE,GACrD,IAAK,IAAIuO,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BvO,EAAOiF,GAAGsJ,GAAStK,EAAMsK,EAAQrK,GAAUK,EAE/CiK,EAAexO,EAClB,EA0CDuM,EAAOkC,gBAAkBA,EA2CzBlC,EAAOmD,WAAaA,EAapBnD,EAAO8N,QALP,SAAiB9V,EAAOyF,EAAU4F,GAC9B,MAAM5P,EAASmD,IAEf,OADAwM,EAAapL,EAAOyF,EAAU4F,EAAa5P,GACpCA,CACV,EAgBDuM,EAAOoD,aAAeA,EAUtBpD,EAAO0D,SAAWA,EASlB1D,EAAO+N,cAJP,SAAuBta,GACnByO,EAAgB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAKzO,GAChGsO,EAAsBtO,GAAQ,EACjC,EAWDuM,EAAOvD,KALP,WACI,MAAMuR,EAAO7K,EAAW,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAEnG,OADApB,EAAsBiM,GAAM,GACrBA,CACV,EAYDhO,EAAOiO,UALP,SAAmB7X,GACf,MAAM3C,EAASmD,IAEf,OADAgN,EAAexN,EAAO3C,GACfA,CACV,EAaDuM,EAAO4D,eAAiBA,EAWxB5D,EAAOkO,UALP,SAAmB9X,GACf,MAAM3C,EAASmD,IAEf,OADAoN,EAAe5N,EAAO3C,GACfA,CACV,EAaDuM,EAAOgE,eAAiBA,EAWxBhE,EAAOmO,UALP,SAAmB/X,GACf,MAAM3C,EAASmD,IAEf,OADAqN,EAAe7N,EAAO3C,GACfA,CACV,EAaDuM,EAAOiE,eAAiBA,EAYxBjE,EAAOoO,aALP,SAAsB5S,EAAMpF,GACxB,MAAM3C,EAASmD,IAEf,OADAsN,EAAkB1I,EAAMpF,EAAO3C,GACxBA,CACV,EAgCDuM,EAAOkE,kBAAoBA,EAa3BlE,EAAOqO,qBALP,SAA8B/J,EAAKC,EAAOC,GACtC,MAAM/Q,EAASmD,IAEf,OADAyN,EAA0BC,EAAKC,EAAOC,EAAM/Q,GACrCA,CACV,EAcDuM,EAAOqE,0BAA4BA,EAanCrE,EAAOsO,QALP,SAAiBzX,EAAGC,EAAGC,GACnB,MAAMtD,EAASmD,IAEf,OADA2M,EAAa1M,EAAGC,EAAGC,EAAGtD,GACfA,CACV,EAaDuM,EAAOuD,aAAeA,EAatBvD,EAAOqD,YALP,SAAqBxM,EAAGC,EAAGC,GACvB,MAAMtD,EAASmD,IAEf,OADA8N,EAAiB7N,EAAGC,EAAGC,EAAGtD,GACnBA,CACV,EAaDuM,EAAO0E,iBAAmBA,EAa1B1E,EAAO/K,KALP,SAAc0P,EAAYC,EAAUC,GAChC,MAAMpR,EAASmD,IAEf,OADA0C,EAAUqL,EAAYC,EAAUC,EAAUpR,GACnCA,CACV,EAgBDuM,EAAO1G,UAAYA,EAgBnB0G,EAAOuO,cALP,SAAuB5J,EAAYC,EAAUC,GACzC,MAAMpR,EAASmD,IAEf,OADAkO,EAAmBH,EAAYC,EAAUC,EAAUpR,GAC5CA,CACV,EA6BDuM,EAAO8E,mBAAqBA,EAc5B9E,EAAOwO,SALP,SAAkB7I,EAAKtS,EAAQuS,GAC3B,MAAMnS,EAASmD,IAEf,OADA8O,EAAcC,EAAKtS,EAAQuS,EAAInS,GACxBA,CACV,EAmCDuM,EAAO0F,cAAgBA,EAcvB1F,EAAOyO,SALP,SAAkB9I,EAAKtS,EAAQuS,GAC3B,MAAMnS,EAASmD,IAEf,OADAwP,EAAcT,EAAKtS,EAAQuS,EAAInS,GACxBA,CACV,EAmCDuM,EAAOoG,cAAgBA,EAcvBpG,EAAO0O,QALP,SAAiBpI,EAAOC,EAAQC,EAAOC,GACnC,MAAMjO,EAAS5B,IAEf,OADAyP,EAAaC,EAAOC,EAAQC,EAAOC,EAAMjO,GAClCA,CACV,EAoBDwH,EAAOqG,aAAeA,EAgBtBrG,EAAO2O,iBALP,SAA0BtW,EAAMC,EAAOqO,EAAQC,EAAKJ,EAAOC,GACvD,MAAMjO,EAAS5B,IAEf,OADA8P,EAAsBrO,EAAMC,EAAOqO,EAAQC,EAAKJ,EAAOC,EAAMjO,GACtDA,CACV,EAwBDwH,EAAO0G,sBAAwBA,EAgB/B1G,EAAO4O,iBALP,SAA0BvW,EAAMC,EAAOqO,EAAQC,EAAKJ,EAAOC,GACvD,MAAMjO,EAAS5B,IAEf,OADAiQ,EAAsBxO,EAAMC,EAAOqO,EAAQC,EAAKJ,EAAOC,EAAMjO,GACtDA,CACV,EAgBDwH,EAAO6G,sBAAwBA,EAqB/B7G,EAAO6O,cAZP,SAAuBvI,EAAOC,EAAQC,EAAOC,GACzC,MAAMjO,EAAS5B,IASf,OAFAsL,EAJW,EAFDsE,EAEYF,EAIH,EAAK,EAAK,EAAK,EAHvB,EAHDE,EAGYD,EAGoB,EAAK,EAAK,EAAK,GAL/CE,EADAD,IACAC,EADAD,GAMuD,EAAK,EAAK,GAD/D,EAJFC,EADAD,GACAC,EADAD,GAMyE,EAAKhO,GACxFuJ,EAAsBvJ,GAAQ,GACvBA,CACV,EAeDwH,EAAO8O,iBALP,SAA0B/H,EAAKC,EAAQR,EAAOC,GAC1C,MAAMjO,EAAS5B,IAEf,OADAkQ,EAAsBC,EAAKC,EAAQR,EAAOC,EAAMjO,GACzCA,CACV,EAsBDwH,EAAO8G,sBAAwBA,EAc/B9G,EAAO+O,iBALP,SAA0BhI,EAAKC,EAAQR,EAAOC,GAC1C,MAAMjO,EAAS5B,IAEf,OADAwQ,EAAsBL,EAAKC,EAAQR,EAAOC,EAAMjO,GACzCA,CACV,EA2BDwH,EAAOoH,sBAAwBA,EA8B/BpH,EAAOgP,yBArBP,SAAkCjI,EAAKP,EAAOC,EAAMhT,EAAQwb,GAAc,GACtE,MAAMC,EAAoBD,GAAe,EAAI,EACvCE,EAAQ7c,KAAK6U,IAAKJ,EAAIqI,UAAY9c,KAAKC,GAAM,KAC7C8c,EAAU/c,KAAK6U,IAAKJ,EAAIuI,YAAchd,KAAKC,GAAM,KACjDgd,EAAUjd,KAAK6U,IAAKJ,EAAIyI,YAAcld,KAAKC,GAAM,KACjDkd,EAAWnd,KAAK6U,IAAKJ,EAAI2I,aAAepd,KAAKC,GAAM,KACnDod,EAAS,GAAOJ,EAAUE,GAC1BG,EAAS,GAAOT,EAAQE,GACxB5W,EAAIhF,EAAOiF,GACjBD,EAAE,GAAKkX,EACPlX,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAK,EAC5BA,EAAE,GAAKmX,EACPnX,EAAE,GAAKA,EAAE,GAAK,EACdA,EAAE,IAAM8W,EAAUE,GAAYE,EAAS,GACvClX,EAAE,KAAQ0W,EAAQE,GAAWO,EAAS,GACtCnX,EAAE,KAAOgO,GAAQD,EAAQC,GACzBhO,EAAE,IAAM,EAAMyW,EACdzW,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAM,EACxBA,EAAE,KAAQ,EAAMgO,EAAOD,GAAUC,EAAOD,GACxCvE,EAAexO,EAClB,EAUDuM,EAAO6P,eAHP,SAAwBrX,GACpB,MAAO,CAACA,EAAOE,GAAG,GAAIF,EAAOE,GAAG,GAAIF,EAAOE,GAAG,GAAIF,EAAOE,GAAG,GAC/D,EAoBDsH,EAAO8P,eAbP,SAAwBtX,GACpB,MAAO,CACHA,EAAOE,GAAG,GACVF,EAAOE,GAAG,GACVF,EAAOE,GAAG,GACVF,EAAOE,GAAG,GACVF,EAAOE,GAAG,GACVF,EAAOE,GAAG,GACVF,EAAOE,GAAG,GACVF,EAAOE,GAAG,GACVF,EAAOE,GAAG,IAEjB,EAYDsH,EAAO+P,UALP,SAAmBvX,GACf,MAAM/E,EAASmD,IAEf,OADAqJ,EAAezH,EAAQ/E,GAChBA,CACV,EA6BDuM,EAAOC,eAAiBA,EAWxBD,EAAOgQ,WALP,SAAoBtQ,GAChB,MAAMlH,EAAS5B,IAEf,OADA2Q,EAAgB7H,EAAOlH,GAChBA,CACV,EAiBDwH,EAAOuH,gBAAkBA,EAWzBvH,EAAOiQ,iBAHP,SAA0BC,EAAOC,EAAOC,EAAO3c,GAC3CyO,EAAgBgO,EAAMrZ,EAAGqZ,EAAMpZ,EAAGoZ,EAAMnZ,EAAG,EAAKoZ,EAAMtZ,EAAGsZ,EAAMrZ,EAAGqZ,EAAMpZ,EAAG,EAAKqZ,EAAMvZ,EAAGuZ,EAAMtZ,EAAGsZ,EAAMrZ,EAAG,EAAK,EAAK,EAAK,EAAK,EAAKtD,EACvI,EAmCDuM,EAAOwD,oBAAsBA,EAsC7BxD,EAAOqQ,iBAxBP,SAA0B/O,GACtB,GAAIA,EAAKO,iBAAkB,CACvBP,EAAKO,kBAAmB,EACxB,MAAMpJ,EAAI6I,EAAK5I,GACf4I,EAAKK,WACQ,IAATlJ,EAAE,IACW,IAATA,EAAE,IACO,IAATA,EAAE,IACO,IAATA,EAAE,IACO,IAATA,EAAE,IACO,IAATA,EAAE,IACO,IAATA,EAAE,IACO,IAATA,EAAE,IACO,IAATA,EAAE,IACO,IAATA,EAAE,IACQ,IAAVA,EAAE,KACQ,IAAVA,EAAE,KACQ,IAAVA,EAAE,KACQ,IAAVA,EAAE,KACQ,IAAVA,EAAE,KACQ,IAAVA,EAAE,GACb,CACD,OAAO6I,EAAKK,UACf,EAiCD3B,EAAOsQ,sBA3BP,SAA+BhP,GAyB3B,OAxBIA,EAAKQ,sBACLR,EAAKQ,qBAAsB,EACR,IAAfR,EAAK5I,GAAG,IAA6B,IAAf4I,EAAK5I,GAAG,IAA8B,IAAhB4I,EAAK5I,GAAG,KAGhC,IAAf4I,EAAK5I,GAAG,IACE,IAAf4I,EAAK5I,GAAG,IACO,IAAf4I,EAAK5I,GAAG,IACO,IAAf4I,EAAK5I,GAAG,IACO,IAAf4I,EAAK5I,GAAG,IACO,IAAf4I,EAAK5I,GAAG,IACO,IAAf4I,EAAK5I,GAAG,IACO,IAAf4I,EAAK5I,GAAG,IACQ,IAAhB4I,EAAK5I,GAAG,KACQ,IAAhB4I,EAAK5I,GAAG,KACQ,IAAhB4I,EAAK5I,GAAG,KACQ,IAAhB4I,EAAK5I,GAAG,KACQ,IAAhB4I,EAAK5I,GAAG,IAdR4I,EAAKM,eAAgB,EAkBrBN,EAAKM,eAAgB,GAGtBN,EAAKM,aACf,EA4CD5B,EAAOkI,YAAcA,EASrBlI,EAAOuQ,QAHP,SAAiBjP,GACb,OAAOA,EAAK5I,EACf,EASDsH,EAAOP,QAHP,SAAiB6B,GACb,OAAOA,EAAK5I,EACf,EAUDsH,EAAOwQ,MAJP,SAAelP,GACXY,EAAgB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAKZ,GAChGS,EAAsBT,GAAM,EAC/B,EAYDtB,EAAOhJ,IALP,SAAasK,EAAMmI,GACf,MAAMhW,EAASmD,IAEf,OADAqE,EAASqG,EAAMmI,EAAOhW,GACfA,CACV,EAcDuM,EAAO/E,SAAWA,EAYlB+E,EAAOyQ,UANP,SAAmBnP,EAAMmI,GACrB,IAAK,IAAIzH,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BV,EAAK5I,GAAGsJ,IAAUyH,EAAM/Q,GAAGsJ,GAE/BC,EAAeX,EAClB,EAYDtB,EAAO0Q,OALP,SAAgBtZ,GACZ,MAAM3D,EAASmD,IAEf,OADA8S,EAAYtS,EAAQ3D,GACbA,CACV,EAgEDuM,EAAO0J,YAAcA,EAWrB1J,EAAO2Q,WAJP,SAAoBrP,EAAMU,EAAOhQ,GAC7BsP,EAAK5I,GAAGsJ,IAAUhQ,EAClBiQ,EAAeX,EAClB,EAaDtB,EAAO4Q,gBALP,SAAyBtP,EAAMU,EAAOhQ,GAGlC,OAFAsP,EAAK5I,GAAGsJ,IAAUhQ,EAClBiQ,EAAeX,GACRA,CACV,EAeDtB,EAAO6K,yBAA2BA,EASlC7K,EAAOyD,eAAiBA,EAQxBzD,EAAO6Q,eAHP,SAAwBvP,GACpB,OAAOzC,EAAUxI,QAAQO,OAAO0K,EAAK5I,GAAG,IAAK4I,EAAK5I,GAAG,IAAK4I,EAAK5I,GAAG,IACrE,EAYDsH,EAAO8Q,oBALP,SAA6BxP,EAAM7N,GAC/BA,EAAOoD,EAAIyK,EAAK5I,GAAG,IACnBjF,EAAOqD,EAAIwK,EAAK5I,GAAG,IACnBjF,EAAOsD,EAAIuK,EAAK5I,GAAG,GACtB,EAYDsH,EAAO+Q,yBANP,SAAkCzP,GAC9B,MAAM7I,EAAI6I,EAAK5I,GAGf,OAFAwJ,EAAgB,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAKzJ,EAAE,IAAKA,EAAE,IAAKA,EAAE,IAAKA,EAAE,IAAK6I,GACxGS,EAAsBT,EAAgB,IAAV7I,EAAE,KAAuB,IAAVA,EAAE,KAAuB,IAAVA,EAAE,KAAuB,IAAVA,EAAE,KACpE6I,CACV,EAYDtB,EAAOjC,SALP,SAAkBuD,EAAMmI,GACpB,MAAMhW,EAASmD,IAEf,OADA+D,EAAc2G,EAAMmI,EAAOhW,GACpBA,CACV,EAWDuM,EAAO7I,KAAOA,EAYd6I,EAAO+K,YAAcA,EAmBrB/K,EAAOrF,cAAgBA,EAsCvBqF,EAAOkL,gBAAkBA,EAmCzBlL,EAAOpC,OA7BP,SAAgB0D,EAAMtP,GAClB,MAAMyX,EAAQzX,EACd,IAAKyX,EACD,OAAO,EAEX,IAAInI,EAAKK,YAAc8H,EAAM9H,cACpBL,EAAKO,mBAAqB4H,EAAM5H,iBACjC,OAAOP,EAAKK,YAAc8H,EAAM9H,WAGxC,MAAMlJ,EAAI6I,EAAK5I,GACTsY,EAAKvH,EAAM/Q,GACjB,OAAQD,EAAE,KAAOuY,EAAG,IAChBvY,EAAE,KAAOuY,EAAG,IACZvY,EAAE,KAAOuY,EAAG,IACZvY,EAAE,KAAOuY,EAAG,IACZvY,EAAE,KAAOuY,EAAG,IACZvY,EAAE,KAAOuY,EAAG,IACZvY,EAAE,KAAOuY,EAAG,IACZvY,EAAE,KAAOuY,EAAG,IACZvY,EAAE,KAAOuY,EAAG,IACZvY,EAAE,KAAOuY,EAAG,IACZvY,EAAE,MAAQuY,EAAG,KACbvY,EAAE,MAAQuY,EAAG,KACbvY,EAAE,MAAQuY,EAAG,KACbvY,EAAE,MAAQuY,EAAG,KACbvY,EAAE,MAAQuY,EAAG,KACbvY,EAAE,MAAQuY,EAAG,GACpB,EAWDhR,EAAOzI,MALP,SAAe+J,GACX,MAAM7N,EAASmD,IAEf,OADAO,EAAKmK,EAAM7N,GACJA,CACV,EAaDuM,EAAOtC,YAPP,SAAqB4D,GACjB,IAAI3D,EAAO2D,EAAK5I,GAAG,IAAM,EACzB,IAAK,IAAI1E,EAAI,EAAGA,EAAI,GAAIA,IACpB2J,EAAe,IAAPA,GAAe2D,EAAK5I,GAAG1E,IAAM,GAEzC,OAAO2J,CACV,EAgDDqC,EAAOkF,UAAYA,EAiDnBlF,EAAOiR,iBAXP,SAA0B3P,EAAMU,EAAOnL,EAAGC,EAAGC,EAAG4B,GAC5C,GAAIqJ,EAAQ,GAAKA,EAAQ,EACrB,OAEJ,MAAMhO,EAAY,EAARgO,EACVV,EAAK5I,GAAG1E,EAAI,GAAK6C,EACjByK,EAAK5I,GAAG1E,EAAI,GAAK8C,EACjBwK,EAAK5I,GAAG1E,EAAI,GAAK+C,EACjBuK,EAAK5I,GAAG1E,EAAI,GAAK2E,EACjBsJ,EAAeX,EAClB,EAYDtB,EAAOhI,MALP,SAAesJ,EAAMtJ,GACjB,MAAMvE,EAASmD,IAEf,OADAmB,EAAWuJ,EAAMtJ,EAAOvE,GACjBA,CACV,EAcDuM,EAAOjI,WAAaA,EAapBiI,EAAOkR,iBANP,SAA0B5P,EAAMtJ,EAAOvE,GACnC,IAAK,IAAIuO,EAAQ,EAAGA,EAAQ,GAAIA,IAC5BvO,EAAOiF,GAAGsJ,IAAUV,EAAK5I,GAAGsJ,GAAShK,EAEzCiK,EAAexO,EAClB,EAaDuM,EAAOmR,kBAPP,SAA2B7P,EAAM8P,GAC7B,MAAMC,EAAMza,IACZ8S,EAAYpI,EAAM+P,GAClBpR,EAAeoR,EAAKD,GACpB,MAAM3Y,EAAI2Y,EAAI1Y,GACdwJ,EAAgBzJ,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,EAAKA,EAAE,GAAIA,EAAE,GAAIA,EAAE,GAAI,EAAKA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAAK,EAAK,EAAK,EAAK,EAAK,EAAK2Y,EAC7G,EAWDpR,EAAOsR,kBALP,SAA2BhQ,GACvB,MAAM7N,EAASmD,IAEf,OADA6W,EAAuBnM,EAAM7N,GACtBA,CACV,EAkBDuM,EAAOyN,uBAAyBA,EAYhCzN,EAAOuR,6BARP,SAAsCjQ,GAClCA,EAAK5I,GAAG,KAAO,EACf4I,EAAK5I,GAAG,KAAO,EACf4I,EAAK5I,GAAG,KAAO,EACf4I,EAAK5I,GAAG,KAAO,EACf4I,EAAK5I,GAAG,MAAQ,EAChBuJ,EAAeX,EAClB,EAYDtB,EAAOwR,kCAPP,SAA2ClQ,GACvCA,EAAK5I,GAAG,KAAO,EACf4I,EAAK5I,GAAG,KAAO,EACf4I,EAAK5I,GAAG,MAAQ,EAChB4I,EAAK5I,GAAG,MAAQ,EAChBuJ,EAAeX,EAClB,CAUJ,CA7kDD,CA6kDYvP,EAAQiO,SAAWjO,EAAiBiO,OAAA,CAAA,qHCvlDhDnO,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAqByI,gBAAA,EACrB,MAAMqE,EAAYtI,iBACZG,EAAWD,gBACXH,EAAUK,iBACVmI,EAAW2S,iBAKjB,SAAWjX,GAQP,SAAS5D,EAETC,EAAI,EAEJC,EAAI,EAEJC,EAAI,EAEJ4B,EAAI,GACA,MAAO,CAAE9B,IAAGC,IAAGC,IAAG4B,IACrB,CAmBD,SAAS0V,EAAqB/J,EAAKC,EAAOC,GAEtC,MAAMkN,EAAoB,GAARnN,EACZoN,EAAgB,GAANrN,EACVsN,EAAkB,GAAPpN,EACXJ,EAAK9R,KAAKyR,IAAI2N,GACdG,EAAKvf,KAAKyR,IAAI4N,GACdG,EAAKxf,KAAKyR,IAAI6N,GACdG,EAAKzf,KAAKwR,IAAI4N,GACdM,EAAK1f,KAAKwR,IAAI6N,GACdM,EAAK3f,KAAKwR,IAAI8N,GACpB,OAAOhb,EAAOib,EAAKE,EAAKD,EAAKE,EAAK5N,EAAK6N,EAAID,EAAK5N,EAAK0N,EAAKD,EAAKE,EAAKE,EAAIJ,EAAKzN,EAAK6N,EAAKD,EAAKD,EAAKD,EAAID,EAAKzN,EAAK0N,EAAKE,EAAKD,EAAKE,EACjI,CAgBD,SAAShf,EAAO4F,GACZ,OAAOvG,KAAKwF,KAAKsE,EAAcvD,GAClC,CAMD,SAASuD,EAAcvD,GACnB,OAAOA,EAAEhC,EAAIgC,EAAEhC,EAAIgC,EAAE/B,EAAI+B,EAAE/B,EAAI+B,EAAE9B,EAAI8B,EAAE9B,EAAI8B,EAAEF,EAAIE,EAAEF,CACtD,CAQD,SAASP,EAAIC,EAAMC,GACf,OAAQD,EAAKxB,EAAIyB,EAAMzB,EAAIwB,EAAKvB,EAAIwB,EAAMxB,EAAIuB,EAAKtB,EAAIuB,EAAMvB,EAAIsB,EAAKM,EAAIL,EAAMK,CACnF,CAOD,SAASvC,EAAM8b,EAAOC,GAClB,MAAMC,EAASha,EAAI8Z,EAAOC,GAC1B,OAAkD,EAA3C7f,KAAK2J,KAAK3J,KAAKQ,IAAIR,KAAKoB,IAAI0e,GAAS,IAAU9b,EAAQrE,OACjE,CA6ED,SAASsC,EAAUsE,GACf,MAAMwZ,EAAU,EAAMpf,EAAO4F,GAC7B,OAAOjC,EAAOiC,EAAEhC,EAAIwb,EAASxZ,EAAE/B,EAAIub,EAASxZ,EAAE9B,EAAIsb,EAASxZ,EAAEF,EAAI0Z,EACpE,CA+BD,SAAS3O,IACL,OAAO9M,EAAO,EAAK,EAAK,EAAK,EAChC,CAmHD,SAAS0b,EAAMja,EAAMC,EAAOlD,GACxB,MAAM3B,EAAS+G,EAAWkJ,WAE1B,OADAlJ,EAAWgL,WAAWnN,EAAMC,EAAOlD,EAAQ3B,GACpCA,CACV,CAuDD,SAASkH,EAAc2G,EAAMiR,EAAI9e,GAC7BA,EAAOoD,EAAIyK,EAAKzK,EAAI0b,EAAG5Z,EAAI2I,EAAKxK,EAAIyb,EAAGxb,EAAIuK,EAAKvK,EAAIwb,EAAGzb,EAAIwK,EAAK3I,EAAI4Z,EAAG1b,EACvEpD,EAAOqD,GAAKwK,EAAKzK,EAAI0b,EAAGxb,EAAIuK,EAAKxK,EAAIyb,EAAG5Z,EAAI2I,EAAKvK,EAAIwb,EAAG1b,EAAIyK,EAAK3I,EAAI4Z,EAAGzb,EACxErD,EAAOsD,EAAIuK,EAAKzK,EAAI0b,EAAGzb,EAAIwK,EAAKxK,EAAIyb,EAAG1b,EAAIyK,EAAKvK,EAAIwb,EAAG5Z,EAAI2I,EAAK3I,EAAI4Z,EAAGxb,EACvEtD,EAAOkF,GAAK2I,EAAKzK,EAAI0b,EAAG1b,EAAIyK,EAAKxK,EAAIyb,EAAGzb,EAAIwK,EAAKvK,EAAIwb,EAAGxb,EAAIuK,EAAK3I,EAAI4Z,EAAG5Z,CAC3E,CAsCD,SAAS8B,EAAgCL,EAAOC,EAAOC,EAAO8W,GAC1D,MAAMoB,EAAS1T,EAASkB,OAAOpJ,SAC/BkI,EAASkB,OAAOiQ,iBAAiBpR,EAAUxI,QAAQ9B,UAAU6F,GAAQyE,EAAUxI,QAAQ9B,UAAU8F,GAAQwE,EAAUxI,QAAQ9B,UAAU+F,GAAQkY,GAC7IhY,EAAWgT,wBAAwBgF,EAAQpB,EAC9C,CA1ZD5W,EAAW5D,OAASA,EAUpB4D,EAAWxD,IAHX,SAAaub,EAAIE,GACb,MAAO,CAAE5b,EAAG0b,EAAG1b,EAAI4b,EAAG5b,EAAGC,EAAGyb,EAAGzb,EAAI2b,EAAG3b,EAAGC,EAAGwb,EAAGxb,EAAI0b,EAAG1b,EAAG4B,EAAG4Z,EAAG5Z,EAAI8Z,EAAG9Z,EACzE,EAsBD6B,EAAW6T,qBAAuBA,EAUlC7T,EAAWkY,MAHX,SAAe7b,EAAGC,EAAGC,GACjB,OAAOsX,EAAqBvX,EAAIR,EAAQpE,QAAS2E,EAAIP,EAAQpE,QAAS6E,EAAIT,EAAQpE,QACrF,EASDsI,EAAWvH,OAASA,EAQpBuH,EAAW4B,cAAgBA,EAU3B5B,EAAWpC,IAAMA,EAUjBoC,EAAWpE,MAAQA,EAenBoE,EAAWmY,cARX,SAAuB7d,EAAMC,EAAI6d,GAC7B,MAAMtf,EAAM8C,EAAMtB,EAAMC,GACxB,OAAY,IAARzB,EACOyB,EAGJud,EAAMxd,EAAMC,EADTzC,KAAKQ,IAAI,EAAG8f,EAAkBtf,GAE3C,EAyDDkH,EAAWqY,aAlDX,SAAsBC,EAASlN,EAAK,CAAE/O,EAAG,EAAKC,EAAG,EAAKC,EAAG,IACrD,MAAMgc,EAAalU,EAAUxI,QAAQ9B,UAAUue,GACzCxa,EAAQuG,EAAUxI,QAAQ9B,UAAUsK,EAAUxI,QAAQmG,MAAMoJ,EAAImN,IAChEC,EAAQnU,EAAUxI,QAAQmG,MAAMuW,EAAYza,GAC5C6P,EAAM7P,EAAMzB,EACZuR,EAAM9P,EAAMxB,EACZuR,EAAM/P,EAAMvB,EACZwR,EAAMyK,EAAMnc,EACZ2R,EAAMwK,EAAMlc,EACZ2R,EAAMuK,EAAMjc,EACZ4R,EAAMoK,EAAWlc,EACjB+R,EAAMmK,EAAWjc,EACjB+R,EAAMkK,EAAWhc,EACjBkc,EAAO9K,EAAMK,EAAMK,EACnBqK,EAAatc,IACnB,GAAIqc,EAAO,EAAG,CACV,IAAI3f,EAAMhB,KAAKwF,KAAKmb,EAAO,GAM3B,OALAC,EAAWva,EAAU,GAANrF,EACfA,EAAM,GAAMA,EACZ4f,EAAWrc,GAAK4R,EAAMG,GAAOtV,EAC7B4f,EAAWpc,GAAK6R,EAAMN,GAAO/U,EAC7B4f,EAAWnc,GAAKqR,EAAMG,GAAOjV,EACtB4f,CACV,CACD,GAAI/K,GAAOK,GAAOL,GAAOU,EAAK,CAC1B,MAAMsK,EAAO7gB,KAAKwF,KAAK,EAAIqQ,EAAMK,EAAMK,GACjCuK,EAAO,GAAMD,EAKnB,OAJAD,EAAWrc,EAAI,GAAMsc,EACrBD,EAAWpc,GAAKsR,EAAMG,GAAO6K,EAC7BF,EAAWnc,GAAKsR,EAAMM,GAAOyK,EAC7BF,EAAWva,GAAK8P,EAAMG,GAAOwK,EACtBF,CACV,CACD,GAAI1K,EAAMK,EAAK,CACX,MAAMwK,EAAO/gB,KAAKwF,KAAK,EAAI0Q,EAAML,EAAMU,GACjCyK,EAAO,GAAMD,EAKnB,OAJAH,EAAWrc,GAAK0R,EAAMH,GAAOkL,EAC7BJ,EAAWpc,EAAI,GAAMuc,EACrBH,EAAWnc,GAAK6R,EAAMH,GAAO6K,EAC7BJ,EAAWva,GAAKgQ,EAAMN,GAAOiL,EACtBJ,CACV,CACD,MAAMK,EAAOjhB,KAAKwF,KAAK,EAAI+Q,EAAMV,EAAMK,GACjCgL,EAAO,GAAMD,EAKnB,OAJAL,EAAWrc,GAAK8R,EAAMN,GAAOmL,EAC7BN,EAAWpc,GAAK8R,EAAMH,GAAO+K,EAC7BN,EAAWnc,EAAI,GAAMwc,EACrBL,EAAWva,GAAKyP,EAAMG,GAAOiL,EACtBN,CACV,EAUD1Y,EAAWjG,UAAYA,EAyBvBiG,EAAWiZ,eAnBX,SAAwB3e,EAAMC,EAAI6Q,EAAK/G,EAAUxI,QAAQgI,MAErD,MAAMxC,EAAKgD,EAAUxI,QAAQ9B,UAAUO,GACjCgH,EAAK+C,EAAUxI,QAAQ9B,UAAUQ,GACjCnB,EAAIiL,EAAUxI,QAAQmG,MAAMX,EAAIC,GAChCnD,EAAIrG,KAAKwF,KAAK+G,EAAUxI,QAAQ+F,cAAcP,GAAMgD,EAAUxI,QAAQ+F,cAAcN,IACtF+C,EAAUxI,QAAQ+B,IAAIyD,EAAIC,GAC9B,OAAI+C,EAAUxI,QAAQ+F,cAAcxI,GAAK,KAI9BtB,KAAKoB,IAAIiF,GAAK,KACfpE,EAAUqC,EAAOgP,EAAG/O,EAAG+O,EAAG9O,EAAG8O,EAAG7O,EAAG,IACnC2M,IAGCnP,EAAUqC,EAAOhD,EAAEiD,EAAGjD,EAAEkD,EAAGlD,EAAEmD,EAAG4B,GAE9C,EASD6B,EAAWkJ,SAAWA,EAsCtBlJ,EAAWE,YAjCX,SAAqB7B,GACjB,MAAM6a,EAAM7U,EAAUxI,QAAQO,SAExB+c,EAAO9a,EAAEhC,EAAIgC,EAAEhC,EAAIgC,EAAE/B,EAAI+B,EAAE/B,EAAI+B,EAAE9B,EAAI8B,EAAE9B,EAAI8B,EAAEF,EAAIE,EAAEF,EAEnDib,EAAO/a,EAAEhC,EAAIgC,EAAEF,EAAIE,EAAE/B,EAAI+B,EAAE9B,EA0BjC,OAzBI6c,EAAO,MAASD,GAEhBD,EAAI7c,EAAIvE,KAAKC,GAAK,EAClBmhB,EAAI5c,EAAI,EAAIxE,KAAKuhB,MAAMhb,EAAE/B,EAAG+B,EAAEhC,GAC9B6c,EAAI3c,EAAI,GAEH6c,GAAQ,MAASD,GAEtBD,EAAI7c,GAAKvE,KAAKC,GAAK,EACnBmhB,EAAI5c,GAAK,EAAIxE,KAAKuhB,MAAMhb,EAAE/B,EAAG+B,EAAEhC,GAC/B6c,EAAI3c,EAAI,IAIR2c,EAAI7c,EAAIvE,KAAKwhB,KAAK,GAAKjb,EAAEF,EAAIE,EAAEhC,EAAIgC,EAAE/B,EAAI+B,EAAE9B,IAC3C2c,EAAI5c,EAAIxE,KAAKuhB,MAAM,EAAIhb,EAAEF,EAAIE,EAAE/B,EAAI,EAAI+B,EAAE9B,EAAI8B,EAAEhC,EAAG,EAAI,GAAKgC,EAAEhC,EAAIgC,EAAEhC,EAAIgC,EAAE/B,EAAI+B,EAAE/B,IAC/E4c,EAAI3c,EAAIzE,KAAKuhB,MAAM,EAAIhb,EAAEF,EAAIE,EAAE9B,EAAI,EAAI8B,EAAEhC,EAAIgC,EAAE/B,EAAG,EAAI,GAAK+B,EAAE9B,EAAI8B,EAAE9B,EAAI8B,EAAEhC,EAAIgC,EAAEhC,KAEnF6c,EAAI7c,GAAKP,EAAQrE,QACjByhB,EAAI5c,GAAKR,EAAQrE,QACjByhB,EAAI3c,GAAKT,EAAQrE,QAEjByhB,EAAI7c,EAAIH,EAASlE,OAAOQ,OAAO0gB,EAAI7c,EAAG,KACtC6c,EAAI5c,EAAIJ,EAASlE,OAAOQ,OAAO0gB,EAAI5c,EAAG,KACtC4c,EAAI3c,EAAIL,EAASlE,OAAOQ,OAAO0gB,EAAI3c,EAAG,KAC/B2c,CACV,EAyBDlZ,EAAW6J,0BAhBX,SAAmCC,EAAKC,EAAOC,EAAM/Q,GAEjD,MAAMie,EAAoB,GAARnN,EACZoN,EAAgB,GAANrN,EACVsN,EAAkB,GAAPpN,EACXJ,EAAK9R,KAAKyR,IAAI2N,GACdG,EAAKvf,KAAKyR,IAAI4N,GACdG,EAAKxf,KAAKyR,IAAI6N,GACdG,EAAKzf,KAAKwR,IAAI4N,GACdM,EAAK1f,KAAKwR,IAAI6N,GACdM,EAAK3f,KAAKwR,IAAI8N,GACpBne,EAAOoD,EAAIgb,EAAKE,EAAKD,EAAKE,EAAK5N,EAAK6N,EACpCxe,EAAOqD,EAAIkb,EAAK5N,EAAK0N,EAAKD,EAAKE,EAAKE,EACpCxe,EAAOsD,EAAI8a,EAAKzN,EAAK6N,EAAKD,EAAKD,EAAKD,EACpCre,EAAOkF,EAAIkZ,EAAKzN,EAAK0N,EAAKE,EAAKD,EAAKE,CACvC,EA6CDzX,EAAWgT,wBAtCX,SAAiChV,EAAQ/E,GACrC,MAAMsgB,EAAOvb,EAAOE,GAEd8P,EAAMuL,EAAK,GAAItL,EAAMsL,EAAK,GAAIrL,EAAMqL,EAAK,GACzCnL,EAAMmL,EAAK,GAAIlL,EAAMkL,EAAK,GAAIjL,EAAMiL,EAAK,GACzC/K,EAAM+K,EAAK,GAAI9K,EAAM8K,EAAK,GAAI7K,EAAM6K,EAAK,IAEzCC,EAAQxL,EAAMK,EAAMK,EAC1B,IAAIrF,EACAmQ,EAAQ,GACRnQ,EAAI,GAAMvR,KAAKwF,KAAKkc,EAAQ,GAC5BvgB,EAAOkF,EAAI,IAAOkL,EAClBpQ,EAAOoD,GAAKoS,EAAMH,GAAOjF,EACzBpQ,EAAOqD,GAAK4R,EAAMM,GAAOnF,EACzBpQ,EAAOsD,GAAK6R,EAAMH,GAAO5E,GAEpB2E,EAAMK,GAAOL,EAAMU,GACxBrF,EAAI,EAAMvR,KAAKwF,KAAK,EAAM0Q,EAAMK,EAAMK,GACtCzV,EAAOkF,GAAKsQ,EAAMH,GAAOjF,EACzBpQ,EAAOoD,EAAI,IAAOgN,EAClBpQ,EAAOqD,GAAK2R,EAAMG,GAAO/E,EACzBpQ,EAAOsD,GAAK2R,EAAMM,GAAOnF,GAEpBgF,EAAMK,GACXrF,EAAI,EAAMvR,KAAKwF,KAAK,EAAM+Q,EAAML,EAAMU,GACtCzV,EAAOkF,GAAK+P,EAAMM,GAAOnF,EACzBpQ,EAAOoD,GAAK4R,EAAMG,GAAO/E,EACzBpQ,EAAOqD,EAAI,IAAO+M,EAClBpQ,EAAOsD,GAAK+R,EAAMG,GAAOpF,IAGzBA,EAAI,EAAMvR,KAAKwF,KAAK,EAAMoR,EAAMV,EAAMK,GACtCpV,EAAOkF,GAAKiQ,EAAMH,GAAO5E,EACzBpQ,EAAOoD,GAAK6R,EAAMM,GAAOnF,EACzBpQ,EAAOqD,GAAKgS,EAAMG,GAAOpF,EACzBpQ,EAAOsD,EAAI,IAAO8M,EAEzB,EAcDrJ,EAAW8X,MAAQA,EAkCnB9X,EAAWgL,WA1BX,SAAoBnN,EAAMC,EAAOlD,EAAQ3B,GACrC,IAAI+f,EACAF,EACAF,EAAO/a,EAAKxB,EAAIyB,EAAMzB,EAAIwB,EAAKvB,EAAIwB,EAAMxB,EAAIuB,EAAKtB,EAAIuB,EAAMvB,EAAIsB,EAAKM,EAAIL,EAAMK,EAC/Esb,GAAO,EAKX,GAJIb,EAAO,IACPa,GAAO,EACPb,GAAQA,GAERA,EAAO,QACPE,EAAO,EAAIle,EACXoe,EAAOS,GAAQ7e,EAASA,MAEvB,CACD,MAAMme,EAAOjhB,KAAK2J,KAAKmX,GACjBC,EAAO,EAAM/gB,KAAKwR,IAAIyP,GAC5BD,EAAOhhB,KAAKwR,KAAK,EAAM1O,GAAUme,GAAQF,EACzCG,EAAOS,GACA3hB,KAAKwR,IAAI1O,EAASme,GAAQF,EAC3B/gB,KAAKwR,IAAI1O,EAASme,GAAQF,CACnC,CACD5f,EAAOoD,EAAIyc,EAAOjb,EAAKxB,EAAI2c,EAAOlb,EAAMzB,EACxCpD,EAAOqD,EAAIwc,EAAOjb,EAAKvB,EAAI0c,EAAOlb,EAAMxB,EACxCrD,EAAOsD,EAAIuc,EAAOjb,EAAKtB,EAAIyc,EAAOlb,EAAMvB,EACxCtD,EAAOkF,EAAI2a,EAAOjb,EAAKM,EAAI6a,EAAOlb,EAAMK,CAC3C,EAaD6B,EAAWuD,SALX,SAAkBuD,EAAMiR,GACpB,MAAM9e,EAASmD,EAAO,EAAG,EAAG,EAAG,GAE/B,OADA+D,EAAc2G,EAAMiR,EAAI9e,GACjBA,CACV,EAeD+G,EAAWG,cAAgBA,EAgB3BH,EAAW0Z,UAfX,SAAmBC,EAAS3Y,GACxB,GAA8C,IAA1CqD,EAAUxI,QAAQ+F,cAAcZ,GAChC,OAAOhB,EAAWkJ,WAEtB,MAAMjQ,EAASiQ,IACf,IAAI0Q,EAAUD,EAAU7d,EAAQpE,QAChCkiB,GAAW,GACX,MAAMC,EAAKxV,EAAUxI,QAAQ9B,UAAUiH,GAMvC,OALAqD,EAAUxI,QAAQ0B,WAAWsc,EAAI/hB,KAAKwR,IAAIsQ,GAAUC,GACpD5gB,EAAOoD,EAAIwd,EAAGxd,EACdpD,EAAOqD,EAAIud,EAAGvd,EACdrD,EAAOsD,EAAIsd,EAAGtd,EACdtD,EAAOkF,EAAIrG,KAAKyR,IAAIqQ,GACb7f,EAAUd,EACpB,EAcD+G,EAAW8Z,2BALX,SAAoCla,EAAOC,EAAOC,GAC9C,MAAMC,EAAOC,EAAW5D,OAAO,EAAK,EAAK,EAAK,GAE9C,OADA6D,EAAgCL,EAAOC,EAAOC,EAAOC,GAC9CA,CACV,EAcDC,EAAWC,gCAAkCA,EAO7CD,EAAWiC,KAHX,WACI,OAAO7F,EAAO,EAAK,EAAK,EAAK,EAChC,CAEJ,CAtbD,CAsbgB7E,EAAQyI,aAAezI,EAAqByI,WAAA,CAAA,iHChc5D,IAAI+Z,EAAmBC,gBAAQA,eAAKD,kBAAqB1iB,OAAO+E,OAAM,SAAa6d,EAAGhc,EAAGic,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B7iB,OAAOC,eAAe2iB,EAAGE,EAAI,CAAEE,YAAY,EAAMC,IAAK,WAAa,OAAOrc,EAAEic,EAAG,GAClF,EAAA,SAAcD,EAAGhc,EAAGic,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BD,EAAEE,GAAMlc,EAAEic,EACb,GACGK,EAAgBP,gBAAQA,eAAKO,cAAiB,SAAStc,EAAG1G,GAC1D,IAAK,IAAIijB,KAAKvc,EAAa,YAANuc,GAAoBnjB,OAAOojB,UAAUC,eAAeC,KAAKpjB,EAASijB,IAAIT,EAAgBxiB,EAAS0G,EAAGuc,EAC3H,EACAnjB,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtD+iB,EAAaxe,oBAAyBxE,GACtCgjB,EAAate,iBAAsB1E,GACnCgjB,EAAape,iBAAoB5E,GACjCgjB,EAAatD,gBAAoB1f,0OCdnBqjB,UAmBd,SAAmBC,EAAIC,GACnB,IAAIC,EAAU,IAAIC,MAAMC,UAAUxiB,OAAS,GACvC0E,EAAU,EACVqK,EAAU,EACV0T,GAAU,EACd,KAAO1T,EAAQyT,UAAUxiB,QACrBsiB,EAAO5d,KAAY8d,UAAUzT,KACjC,OAAO,IAAI2T,SAAQ,SAAkBC,EAASC,GAC1CN,EAAO5d,GAAU,SAAkBme,GAC/B,GAAIJ,EAEA,GADAA,GAAU,EACNI,EACAD,EAAOC,OACN,CAGD,IAFA,IAAIP,EAAS,IAAIC,MAAMC,UAAUxiB,OAAS,GACtC0E,EAAS,EACNA,EAAS4d,EAAOtiB,QACnBsiB,EAAO5d,KAAY8d,UAAU9d,GACjCie,EAAQG,MAAM,KAAMR,EACvB,CAEjB,EACQ,IACIF,EAAGU,MAAMT,GAAO,KAAMC,EAMzB,CALC,MAAOO,GACDJ,IACAA,GAAU,EACVG,EAAOC,GAEd,CACT,GACA,yNC5CA,IAAIE,EAASjkB,EAObikB,EAAO/iB,OAAS,SAAgBgjB,GAC5B,IAAIjB,EAAIiB,EAAOhjB,OACf,IAAK+hB,EACD,OAAO,EAEX,IADA,IAAIhZ,EAAI,IACCgZ,EAAI,EAAI,GAA0B,MAArBiB,EAAOC,OAAOlB,MAC9BhZ,EACN,OAAO1J,KAAK6jB,KAAqB,EAAhBF,EAAOhjB,QAAc,EAAI+I,CAC9C,EASA,IANA,IAAIoa,EAAM,IAAIZ,MAAM,IAGhBa,EAAM,IAAIb,MAAM,KAGXxhB,EAAI,EAAGA,EAAI,IAChBqiB,EAAID,EAAIpiB,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAKA,EAAI,EAAIA,EAAI,GAAK,IAAMA,IASrFgiB,EAAOM,OAAS,SAAgBC,EAAQrhB,EAAOC,GAM3C,IALA,IAIIP,EAJA4hB,EAAQ,KACRC,EAAQ,GACRziB,EAAI,EACJ0iB,EAAI,EAEDxhB,EAAQC,GAAK,CAChB,IAAItB,EAAI0iB,EAAOrhB,KACf,OAAQwhB,GACJ,KAAK,EACDD,EAAMziB,KAAOoiB,EAAIviB,GAAK,GACtBe,GAAS,EAAJf,IAAU,EACf6iB,EAAI,EACJ,MACJ,KAAK,EACDD,EAAMziB,KAAOoiB,EAAIxhB,EAAIf,GAAK,GAC1Be,GAAS,GAAJf,IAAW,EAChB6iB,EAAI,EACJ,MACJ,KAAK,EACDD,EAAMziB,KAAOoiB,EAAIxhB,EAAIf,GAAK,GAC1B4iB,EAAMziB,KAAOoiB,EAAQ,GAAJviB,GACjB6iB,EAAI,EAGR1iB,EAAI,QACHwiB,IAAUA,EAAQ,KAAKG,KAAKC,OAAOC,aAAad,MAAMa,OAAQH,IAC/DziB,EAAI,EAEX,CAOD,OANI0iB,IACAD,EAAMziB,KAAOoiB,EAAIxhB,GACjB6hB,EAAMziB,KAAO,GACH,IAAN0iB,IACAD,EAAMziB,KAAO,KAEjBwiB,GACIxiB,GACAwiB,EAAMG,KAAKC,OAAOC,aAAad,MAAMa,OAAQH,EAAMK,MAAM,EAAG9iB,KACzDwiB,EAAMO,KAAK,KAEfH,OAAOC,aAAad,MAAMa,OAAQH,EAAMK,MAAM,EAAG9iB,GAC5D,EAEA,IAAIgjB,EAAkB,mBAUtBhB,EAAOiB,OAAS,SAAgBhB,EAAQM,EAAQ5e,GAI5C,IAHA,IAEI/C,EAFAM,EAAQyC,EACR+e,EAAI,EAEC1iB,EAAI,EAAGA,EAAIiiB,EAAOhjB,QAAS,CAChC,IAAI8L,EAAIkX,EAAOiB,WAAWljB,KAC1B,GAAU,KAAN+K,GAAY2X,EAAI,EAChB,MACJ,QAAqB9B,KAAhB7V,EAAIsX,EAAItX,IACT,MAAMoY,MAAMH,GAChB,OAAQN,GACJ,KAAK,EACD9hB,EAAImK,EACJ2X,EAAI,EACJ,MACJ,KAAK,EACDH,EAAO5e,KAAY/C,GAAK,GAAS,GAAJmK,IAAW,EACxCnK,EAAImK,EACJ2X,EAAI,EACJ,MACJ,KAAK,EACDH,EAAO5e,MAAiB,GAAJ/C,IAAW,GAAS,GAAJmK,IAAW,EAC/CnK,EAAImK,EACJ2X,EAAI,EACJ,MACJ,KAAK,EACDH,EAAO5e,MAAiB,EAAJ/C,IAAU,EAAImK,EAClC2X,EAAI,EAGf,CACD,GAAU,IAANA,EACA,MAAMS,MAAMH,GAChB,OAAOrf,EAASzC,CACpB,EAOA8gB,EAAOpC,KAAO,SAAcqC,GACxB,MAAO,mEAAmErC,KAAKqC,mGChInF,SAASmB,IAOL5C,KAAK6C,WAAa,EACrB,kCAhBaC,aAAGF,EAyBjBA,EAAanC,UAAUsC,GAAK,SAAYC,EAAKnC,EAAIC,GAK7C,OAJCd,KAAK6C,WAAWG,KAAShD,KAAK6C,WAAWG,GAAO,KAAKb,KAAK,CACvDtB,GAAMA,EACNC,IAAMA,GAAOd,OAEVA,IACX,EAQA4C,EAAanC,UAAUwC,IAAM,SAAaD,EAAKnC,GAC3C,QAAYT,IAAR4C,EACAhD,KAAK6C,WAAa,QAElB,QAAWzC,IAAPS,EACAb,KAAK6C,WAAWG,GAAO,QAGvB,IADA,IAAIE,EAAYlD,KAAK6C,WAAWG,GACvBxjB,EAAI,EAAGA,EAAI0jB,EAAUzkB,QACtBykB,EAAU1jB,GAAGqhB,KAAOA,EACpBqC,EAAUC,OAAO3jB,EAAG,KAElBA,EAGlB,OAAOwgB,IACX,EAQA4C,EAAanC,UAAU2C,KAAO,SAAcJ,GACxC,IAAIE,EAAYlD,KAAK6C,WAAWG,GAChC,GAAIE,EAAW,CAGX,IAFA,IAAIG,EAAO,GACP7jB,EAAI,EACDA,EAAIyhB,UAAUxiB,QACjB4kB,EAAKlB,KAAKlB,UAAUzhB,MACxB,IAAKA,EAAI,EAAGA,EAAI0jB,EAAUzkB,QACtBykB,EAAU1jB,GAAGqhB,GAAGU,MAAM2B,EAAU1jB,KAAKshB,IAAKuC,EACjD,CACD,OAAOrD,4ECaX,SAASsD,EAAQ/lB,GAwNb,MArN4B,oBAAjBgmB,aAA8B,WAErC,IAAIC,EAAM,IAAID,aAAa,EAAG,IAC1BE,EAAM,IAAIC,WAAWF,EAAIzB,QACzB4B,EAAiB,MAAXF,EAAI,GAEd,SAASG,EAAmBC,EAAKC,EAAKC,GAClCP,EAAI,GAAKK,EACTC,EAAIC,GAAWN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,EACtB,CAED,SAASO,EAAmBH,EAAKC,EAAKC,GAClCP,EAAI,GAAKK,EACTC,EAAIC,GAAWN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,EACtB,CAOD,SAASQ,EAAkBH,EAAKC,GAK5B,OAJAN,EAAI,GAAKK,EAAIC,GACbN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACZP,EAAI,EACd,CAED,SAASU,EAAkBJ,EAAKC,GAK5B,OAJAN,EAAI,GAAKK,EAAIC,GACbN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACZP,EAAI,EACd,CAlBDjmB,EAAQ4mB,aAAeR,EAAKC,EAAqBI,EAEjDzmB,EAAQ6mB,aAAeT,EAAKK,EAAqBJ,EAmBjDrmB,EAAQ8mB,YAAcV,EAAKM,EAAoBC,EAE/C3mB,EAAQ+mB,YAAcX,EAAKO,EAAoBD,CAGlD,CAjDwC,GAiD9B,WAEP,SAASM,EAAmBC,EAAWX,EAAKC,EAAKC,GAC7C,IAAI7lB,EAAO2lB,EAAM,EAAI,EAAI,EAGzB,GAFI3lB,IACA2lB,GAAOA,GACC,IAARA,EACAW,EAAU,EAAIX,EAAM,EAAmB,EAAqB,WAAYC,EAAKC,QAC5E,GAAI3lB,MAAMylB,GACXW,EAAU,WAAYV,EAAKC,QAC1B,GAAIF,EAAM,qBACXW,GAAWtmB,GAAQ,GAAK,cAAgB,EAAG4lB,EAAKC,QAC/C,GAAIF,EAAM,sBACXW,GAAWtmB,GAAQ,GAAKJ,KAAK2mB,MAAMZ,EAAM,yBAA4B,EAAGC,EAAKC,OAC5E,CACD,IAAIW,EAAW5mB,KAAKY,MAAMZ,KAAK+B,IAAIgkB,GAAO/lB,KAAK6mB,KAE/CH,GAAWtmB,GAAQ,GAAKwmB,EAAW,KAAO,GAD0B,QAArD5mB,KAAK2mB,MAAMZ,EAAM/lB,KAAK8mB,IAAI,GAAIF,GAAY,YACI,EAAGZ,EAAKC,EACxE,CACJ,CAKD,SAASc,EAAkBC,EAAUhB,EAAKC,GACtC,IAAIgB,EAAOD,EAAShB,EAAKC,GACrB7lB,EAAsB,GAAd6mB,GAAQ,IAAU,EAC1BL,EAAWK,IAAS,GAAK,IACzBC,EAAkB,QAAPD,EACf,OAAoB,MAAbL,EACDM,EACAC,IACA/mB,GAAOgnB,KACM,IAAbR,EACO,qBAAPxmB,EAA+B8mB,EAC/B9mB,EAAOJ,KAAK8mB,IAAI,EAAGF,EAAW,MAAQM,EAAW,QAC1D,CAfDznB,EAAQ4mB,aAAeI,EAAmBY,KAAK,KAAMC,GACrD7nB,EAAQ6mB,aAAeG,EAAmBY,KAAK,KAAME,GAgBrD9nB,EAAQ8mB,YAAcQ,EAAkBM,KAAK,KAAMG,GACnD/nB,EAAQ+mB,YAAcO,EAAkBM,KAAK,KAAMI,EAEtD,CAzCU,GA4CiB,oBAAjBC,aAA8B,WAErC,IAAIC,EAAM,IAAID,aAAa,EAAE,IACzB/B,EAAM,IAAIC,WAAW+B,EAAI1D,QACzB4B,EAAiB,MAAXF,EAAI,GAEd,SAASiC,EAAoB7B,EAAKC,EAAKC,GACnC0B,EAAI,GAAK5B,EACTC,EAAIC,GAAWN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,EACtB,CAED,SAASkC,EAAoB9B,EAAKC,EAAKC,GACnC0B,EAAI,GAAK5B,EACTC,EAAIC,GAAWN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,GACnBK,EAAIC,EAAM,GAAKN,EAAI,EACtB,CAOD,SAASmC,EAAmB9B,EAAKC,GAS7B,OARAN,EAAI,GAAKK,EAAIC,GACbN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACZ0B,EAAI,EACd,CAED,SAASI,EAAmB/B,EAAKC,GAS7B,OARAN,EAAI,GAAKK,EAAIC,GACbN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACnBN,EAAI,GAAKK,EAAIC,EAAM,GACZ0B,EAAI,EACd,CA1BDloB,EAAQuoB,cAAgBnC,EAAK+B,EAAsBC,EAEnDpoB,EAAQwoB,cAAgBpC,EAAKgC,EAAsBD,EA2BnDnoB,EAAQyoB,aAAerC,EAAKiC,EAAqBC,EAEjDtoB,EAAQ0oB,aAAetC,EAAKkC,EAAqBD,CAGpD,CAjEwC,GAiE9B,WAEP,SAASM,EAAoB1B,EAAW2B,EAAMC,EAAMvC,EAAKC,EAAKC,GAC1D,IAAI7lB,EAAO2lB,EAAM,EAAI,EAAI,EAGzB,GAFI3lB,IACA2lB,GAAOA,GACC,IAARA,EACAW,EAAU,EAAGV,EAAKC,EAAMoC,GACxB3B,EAAU,EAAIX,EAAM,EAAmB,EAAqB,WAAYC,EAAKC,EAAMqC,QAChF,GAAIhoB,MAAMylB,GACbW,EAAU,EAAGV,EAAKC,EAAMoC,GACxB3B,EAAU,WAAYV,EAAKC,EAAMqC,QAC9B,GAAIvC,EAAM,sBACbW,EAAU,EAAGV,EAAKC,EAAMoC,GACxB3B,GAAWtmB,GAAQ,GAAK,cAAgB,EAAG4lB,EAAKC,EAAMqC,OACnD,CACH,IAAIpB,EACJ,GAAInB,EAAM,uBAENW,GADAQ,EAAWnB,EAAM,UACM,EAAGC,EAAKC,EAAMoC,GACrC3B,GAAWtmB,GAAQ,GAAK8mB,EAAW,cAAgB,EAAGlB,EAAKC,EAAMqC,OAC9D,CACH,IAAI1B,EAAW5mB,KAAKY,MAAMZ,KAAK+B,IAAIgkB,GAAO/lB,KAAK6mB,KAC9B,OAAbD,IACAA,EAAW,MAEfF,EAAqB,kBADrBQ,EAAWnB,EAAM/lB,KAAK8mB,IAAI,GAAIF,MACY,EAAGZ,EAAKC,EAAMoC,GACxD3B,GAAWtmB,GAAQ,GAAKwmB,EAAW,MAAQ,GAAgB,QAAXM,EAAqB,WAAa,EAAGlB,EAAKC,EAAMqC,EACnG,CACJ,CACJ,CAKD,SAASC,EAAmBvB,EAAUqB,EAAMC,EAAMtC,EAAKC,GACnD,IAAIuC,EAAKxB,EAAShB,EAAKC,EAAMoC,GACzBI,EAAKzB,EAAShB,EAAKC,EAAMqC,GACzBloB,EAAoB,GAAZqoB,GAAM,IAAU,EACxB7B,EAAW6B,IAAO,GAAK,KACvBvB,EAAW,YAAmB,QAALuB,GAAgBD,EAC7C,OAAoB,OAAb5B,EACDM,EACAC,IACA/mB,GAAOgnB,KACM,IAAbR,EACO,OAAPxmB,EAAgB8mB,EAChB9mB,EAAOJ,KAAK8mB,IAAI,EAAGF,EAAW,OAASM,EAAW,iBAC3D,CAhBDznB,EAAQuoB,cAAgBI,EAAoBf,KAAK,KAAMC,EAAa,EAAG,GACvE7nB,EAAQwoB,cAAgBG,EAAoBf,KAAK,KAAME,EAAa,EAAG,GAiBvE9nB,EAAQyoB,aAAeK,EAAmBlB,KAAK,KAAMG,EAAY,EAAG,GACpE/nB,EAAQ0oB,aAAeI,EAAmBlB,KAAK,KAAMI,EAAY,EAAG,EAEvE,CArDU,GAuDJhoB,CACV,CAID,SAAS6nB,EAAYvB,EAAKC,EAAKC,GAC3BD,EAAIC,GAAyB,IAAbF,EAChBC,EAAIC,EAAM,GAAMF,IAAQ,EAAK,IAC7BC,EAAIC,EAAM,GAAMF,IAAQ,GAAK,IAC7BC,EAAIC,EAAM,GAAMF,IAAQ,EAC3B,CAED,SAASwB,EAAYxB,EAAKC,EAAKC,GAC3BD,EAAIC,GAAYF,IAAQ,GACxBC,EAAIC,EAAM,GAAMF,IAAQ,GAAK,IAC7BC,EAAIC,EAAM,GAAMF,IAAQ,EAAK,IAC7BC,EAAIC,EAAM,GAAmB,IAAbF,CACnB,CAED,SAASyB,EAAWxB,EAAKC,GACrB,OAAQD,EAAIC,GACJD,EAAIC,EAAM,IAAM,EAChBD,EAAIC,EAAM,IAAM,GAChBD,EAAIC,EAAM,IAAM,MAAQ,CACnC,CAED,SAASwB,EAAWzB,EAAKC,GACrB,OAAQD,EAAIC,IAAY,GAChBD,EAAIC,EAAM,IAAM,GAChBD,EAAIC,EAAM,IAAM,EAChBD,EAAIC,EAAM,MAAQ,CAC9B,2BA5UAyC,MAAiBlD,EAAQA,oECOzB,SAASmD,QAAQC,YACb,IACI,IAAIC,IAAMC,KAAK,QAAQC,QAAQ,IAAI,MAAzBD,CAAgCF,YAC1C,GAAIC,MAAQA,IAAIloB,QAAUpB,OAAOypB,KAAKH,KAAKloB,QACvC,OAAOkoB,GACD,CAAZ,MAAOI,GAAK,CACd,OAAO,IACX,6BAfcC,UAAGP,qUCMjB,IAAIQ,EAAO1pB,EAOX0pB,EAAKxoB,OAAS,SAAqBgjB,GAG/B,IAFA,IAAI/d,EAAM,EACN6G,EAAI,EACC/K,EAAI,EAAGA,EAAIiiB,EAAOhjB,SAAUe,GACjC+K,EAAIkX,EAAOiB,WAAWljB,IACd,IACJkE,GAAO,EACF6G,EAAI,KACT7G,GAAO,EACe,QAAZ,MAAJ6G,IAAkE,QAAZ,MAA3BkX,EAAOiB,WAAWljB,EAAI,OACrDA,EACFkE,GAAO,GAEPA,GAAO,EAEf,OAAOA,CACX,EASAujB,EAAKC,KAAO,SAAmBnF,EAAQrhB,EAAOC,GAE1C,GADUA,EAAMD,EACN,EACN,MAAO,GAKX,IAJA,IAGIN,EAHA4hB,EAAQ,KACRC,EAAQ,GACRziB,EAAI,EAEDkB,EAAQC,IACXP,EAAI2hB,EAAOrhB,MACH,IACJuhB,EAAMziB,KAAOY,EACRA,EAAI,KAAOA,EAAI,IACpB6hB,EAAMziB,MAAY,GAAJY,IAAW,EAAsB,GAAlB2hB,EAAOrhB,KAC/BN,EAAI,KAAOA,EAAI,KACpBA,IAAU,EAAJA,IAAU,IAAwB,GAAlB2hB,EAAOrhB,OAAkB,IAAwB,GAAlBqhB,EAAOrhB,OAAkB,EAAsB,GAAlBqhB,EAAOrhB,MAAiB,MAC1GuhB,EAAMziB,KAAO,OAAUY,GAAK,IAC5B6hB,EAAMziB,KAAO,OAAc,KAAJY,IAEvB6hB,EAAMziB,MAAY,GAAJY,IAAW,IAAwB,GAAlB2hB,EAAOrhB,OAAkB,EAAsB,GAAlBqhB,EAAOrhB,KACnElB,EAAI,QACHwiB,IAAUA,EAAQ,KAAKG,KAAKC,OAAOC,aAAad,MAAMa,OAAQH,IAC/DziB,EAAI,GAGZ,OAAIwiB,GACIxiB,GACAwiB,EAAMG,KAAKC,OAAOC,aAAad,MAAMa,OAAQH,EAAMK,MAAM,EAAG9iB,KACzDwiB,EAAMO,KAAK,KAEfH,OAAOC,aAAad,MAAMa,OAAQH,EAAMK,MAAM,EAAG9iB,GAC5D,EASAynB,EAAKE,MAAQ,SAAoB1F,EAAQM,EAAQ5e,GAI7C,IAHA,IACIyM,EACAyN,EAFA3c,EAAQyC,EAGH3D,EAAI,EAAGA,EAAIiiB,EAAOhjB,SAAUe,GACjCoQ,EAAK6R,EAAOiB,WAAWljB,IACd,IACLuiB,EAAO5e,KAAYyM,EACZA,EAAK,MACZmS,EAAO5e,KAAYyM,GAAM,EAAU,IACnCmS,EAAO5e,KAAuB,GAAXyM,EAAgB,KACV,QAAZ,MAALA,IAA0E,QAAZ,OAAjCyN,EAAKoE,EAAOiB,WAAWljB,EAAI,MAChEoQ,EAAK,QAAiB,KAALA,IAAgB,KAAY,KAALyN,KACtC7d,EACFuiB,EAAO5e,KAAYyM,GAAM,GAAU,IACnCmS,EAAO5e,KAAYyM,GAAM,GAAK,GAAK,IACnCmS,EAAO5e,KAAYyM,GAAM,EAAK,GAAK,IACnCmS,EAAO5e,KAAuB,GAAXyM,EAAgB,MAEnCmS,EAAO5e,KAAYyM,GAAM,GAAU,IACnCmS,EAAO5e,KAAYyM,GAAM,EAAK,GAAK,IACnCmS,EAAO5e,KAAuB,GAAXyM,EAAgB,KAG3C,OAAOzM,EAASzC,iGCtGN0mB,OA6Bd,SAAcC,EAAO/E,EAAOrb,GACxB,IAAIqgB,EAASrgB,GAAQ,KACjBsgB,EAASD,IAAS,EAClBE,EAAS,KACTrkB,EAASmkB,EACb,OAAO,SAAoBrgB,GACvB,GAAIA,EAAO,GAAKA,EAAOsgB,EACnB,OAAOF,EAAMpgB,GACb9D,EAAS8D,EAAOqgB,IAChBE,EAAOH,EAAMC,GACbnkB,EAAS,GAEb,IAAI2gB,EAAMxB,EAAM3B,KAAK6G,EAAMrkB,EAAQA,GAAU8D,GAG7C,OAFa,EAAT9D,IACAA,EAAwB,GAAL,EAATA,IACP2gB,CACf,CACA,0FC9Cc2D,SAAGC,EAEjB,IAAIC,EAAO5lB,mBAUX,SAAS2lB,EAASpB,EAAIC,GASlBvG,KAAKsG,GAAKA,IAAO,EAMjBtG,KAAKuG,GAAKA,IAAO,CACpB,CAOD,IAAI/M,EAAOkO,EAASlO,KAAO,IAAIkO,EAAS,EAAG,GAE3ClO,EAAKoO,SAAW,WAAa,OAAO,CAAE,EACtCpO,EAAKqO,SAAWrO,EAAKsO,SAAW,WAAa,OAAO9H,MACpDxG,EAAK/a,OAAS,WAAa,OAAO,CAAE,EAOpC,IAAIspB,EAAWL,EAASK,SAAW,mBAOnCL,EAASM,WAAa,SAAoBxqB,GACtC,GAAc,IAAVA,EACA,OAAOgc,EACX,IAAItb,EAAOV,EAAQ,EACfU,IACAV,GAASA,GACb,IAAI8oB,EAAK9oB,IAAU,EACf+oB,GAAM/oB,EAAQ8oB,GAAM,aAAe,EAUvC,OATIpoB,IACAqoB,GAAMA,IAAO,EACbD,GAAMA,IAAO,IACPA,EAAK,aACPA,EAAK,IACCC,EAAK,aACPA,EAAK,KAGV,IAAImB,EAASpB,EAAIC,EAC5B,EAOAmB,EAASpnB,KAAO,SAAc9C,GAC1B,GAAqB,iBAAVA,EACP,OAAOkqB,EAASM,WAAWxqB,GAC/B,GAAImqB,EAAKM,SAASzqB,GAAQ,CAEtB,IAAImqB,EAAKO,KAGL,OAAOR,EAASM,WAAWG,SAAS3qB,EAAO,KAF3CA,EAAQmqB,EAAKO,KAAKE,WAAW5qB,EAGpC,CACD,OAAOA,EAAM6qB,KAAO7qB,EAAM8qB,KAAO,IAAIZ,EAASlqB,EAAM6qB,MAAQ,EAAG7qB,EAAM8qB,OAAS,GAAK9O,CACvF,EAOAkO,EAASjH,UAAUmH,SAAW,SAAkBW,GAC5C,IAAKA,GAAYvI,KAAKuG,KAAO,GAAI,CAC7B,IAAID,EAAgB,GAAVtG,KAAKsG,KAAW,EACtBC,GAAMvG,KAAKuG,KAAW,EAG1B,OAFKD,IACDC,EAAKA,EAAK,IAAM,KACXD,EAAU,WAALC,EACjB,CACD,OAAOvG,KAAKsG,GAAe,WAAVtG,KAAKuG,EAC1B,EAOAmB,EAASjH,UAAU+H,OAAS,SAAgBD,GACxC,OAAOZ,EAAKO,KACN,IAAIP,EAAKO,KAAe,EAAVlI,KAAKsG,GAAkB,EAAVtG,KAAKuG,GAAQkC,QAAQF,IAEhD,CAAEF,IAAe,EAAVrI,KAAKsG,GAAQgC,KAAgB,EAAVtI,KAAKuG,GAAQgC,SAAUE,QAAQF,GACnE,EAEA,IAAI7F,EAAaN,OAAO3B,UAAUiC,kBAOlCgF,EAASgB,SAAW,SAAkBvf,GAClC,OAAIA,IAAS4e,EACFvO,EACJ,IAAIkO,GACLhF,EAAW/B,KAAKxX,EAAM,GACtBuZ,EAAW/B,KAAKxX,EAAM,IAAM,EAC5BuZ,EAAW/B,KAAKxX,EAAM,IAAM,GAC5BuZ,EAAW/B,KAAKxX,EAAM,IAAM,MAAQ,GAEpCuZ,EAAW/B,KAAKxX,EAAM,GACtBuZ,EAAW/B,KAAKxX,EAAM,IAAM,EAC5BuZ,EAAW/B,KAAKxX,EAAM,IAAM,GAC5BuZ,EAAW/B,KAAKxX,EAAM,IAAM,MAAQ,EAE9C,EAMAue,EAASjH,UAAUkI,OAAS,WACxB,OAAOvG,OAAOC,aACO,IAAjBrC,KAAKsG,GACLtG,KAAKsG,KAAO,EAAK,IACjBtG,KAAKsG,KAAO,GAAK,IACjBtG,KAAKsG,KAAO,GACK,IAAjBtG,KAAKuG,GACLvG,KAAKuG,KAAO,EAAK,IACjBvG,KAAKuG,KAAO,GAAK,IACjBvG,KAAKuG,KAAO,GAEpB,EAMAmB,EAASjH,UAAUoH,SAAW,WAC1B,IAAIe,EAAS5I,KAAKuG,IAAM,GAGxB,OAFAvG,KAAKuG,KAAQvG,KAAKuG,IAAM,EAAIvG,KAAKsG,KAAO,IAAMsC,KAAU,EACxD5I,KAAKsG,IAAQtG,KAAKsG,IAAM,EAAsBsC,KAAU,EACjD5I,IACX,EAMA0H,EAASjH,UAAUqH,SAAW,WAC1B,IAAIc,IAAmB,EAAV5I,KAAKsG,IAGlB,OAFAtG,KAAKsG,KAAQtG,KAAKsG,KAAO,EAAItG,KAAKuG,IAAM,IAAMqC,KAAU,EACxD5I,KAAKuG,IAAQvG,KAAKuG,KAAO,EAAqBqC,KAAU,EACjD5I,IACX,EAMA0H,EAASjH,UAAUhiB,OAAS,WACxB,IAAIoqB,EAAS7I,KAAKsG,GACd9d,GAASwX,KAAKsG,KAAO,GAAKtG,KAAKuG,IAAM,KAAO,EAC5C9d,EAASuX,KAAKuG,KAAO,GACzB,OAAiB,IAAV9d,EACU,IAAVD,EACEqgB,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EACxBrgB,EAAQ,MACNA,EAAQ,IAAM,EAAI,EAClBA,EAAQ,QAAU,EAAI,EAC1BC,EAAQ,IAAM,EAAI,0GCrM7B,IAAIkf,EAAOpqB,EA2OX,SAASurB,EAAMC,EAAKC,EAAKC,GACrB,IAAK,IAAInC,EAAOzpB,OAAOypB,KAAKkC,GAAMxpB,EAAI,EAAGA,EAAIsnB,EAAKroB,SAAUe,OACnC4gB,IAAjB2I,EAAIjC,EAAKtnB,KAAsBypB,IAC/BF,EAAIjC,EAAKtnB,IAAMwpB,EAAIlC,EAAKtnB,KAChC,OAAOupB,CACV,CAmBD,SAASG,EAASC,GAEd,SAASC,EAAYC,EAASC,GAE1B,KAAMtJ,gBAAgBoJ,GAClB,OAAO,IAAIA,EAAYC,EAASC,GAKpCjsB,OAAOC,eAAe0iB,KAAM,UAAW,CAAEM,IAAK,WAAa,OAAO+I,CAAU,IAGxE1G,MAAM4G,kBACN5G,MAAM4G,kBAAkBvJ,KAAMoJ,GAE9B/rB,OAAOC,eAAe0iB,KAAM,QAAS,CAAExiB,OAAO,IAAImlB,OAAQ6G,OAAS,KAEnEF,GACAR,EAAM9I,KAAMsJ,EACnB,CAUD,OARCF,EAAY3I,UAAYpjB,OAAO+E,OAAOugB,MAAMlC,YAAYgJ,YAAcL,EAEvE/rB,OAAOC,eAAe8rB,EAAY3I,UAAW,OAAQ,CAAEH,IAAK,WAAa,OAAO6I,CAAK,IAErFC,EAAY3I,UAAU/gB,SAAW,WAC7B,OAAOsgB,KAAKmJ,KAAO,KAAOnJ,KAAKqJ,OACvC,EAEWD,CACV,CA/RDzB,EAAK+B,UAAY3nB,mBAGjB4lB,EAAKnG,OAASvf,gBAGd0lB,EAAK/E,aAAezgB,sBAGpBwlB,EAAKnB,MAAQvJ,eAGb0K,EAAKlB,QAAUkD,iBAGfhC,EAAKV,KAAO2C,cAGZjC,EAAKkC,KAAOC,cAGZnC,EAAKD,SAAWqC,kBAOhBpC,EAAKqC,OAASvB,aAA0B,IAAXwB,gBACPA,gBACAA,eAAOC,SACPD,eAAOC,QAAQC,UACfF,eAAOC,QAAQC,SAASC,MAO9CzC,EAAKsC,OAAStC,EAAKqC,QAAUC,gBACG,oBAAXI,QAA0BA,QACf,oBAAXvd,MAA0BA,MACjCkT,eAQd2H,EAAK2C,WAAajtB,OAAOktB,OAASltB,OAAOktB,OAAO,IAAiC,GAOjF5C,EAAK6C,YAAcntB,OAAOktB,OAASltB,OAAOktB,OAAO,CAAA,GAAiC,GAQlF5C,EAAK8C,UAAYC,OAAOD,WAAwC,SAAmBjtB,GAC/E,MAAwB,iBAAVA,GAAsBmtB,SAASntB,IAAUM,KAAKY,MAAMlB,KAAWA,CACjF,EAOAmqB,EAAKM,SAAW,SAAkBzqB,GAC9B,MAAwB,iBAAVA,GAAsBA,aAAiB4kB,MACzD,EAOAuF,EAAKiD,SAAW,SAAkBptB,GAC9B,OAAOA,GAA0B,iBAAVA,CAC3B,EAUAmqB,EAAKkD,MAQLlD,EAAKmD,MAAQ,SAAeC,EAAKC,GAC7B,IAAIxtB,EAAQutB,EAAIC,GAChB,QAAa,MAATxtB,IAAiButB,EAAIrK,eAAesK,MACZ,iBAAVxtB,IAAuBwjB,MAAMiK,QAAQztB,GAASA,EAAMiB,OAASpB,OAAOypB,KAAKtpB,GAAOiB,QAAU,EAEhH,EAaAkpB,EAAKuD,OAAS,WACV,IACI,IAAIA,EAASvD,EAAKlB,QAAQ,UAAUyE,OAEpC,OAAOA,EAAOzK,UAAU0K,UAAYD,EAAoC,IAI3E,CAHC,MAAOnE,GAEL,OAAO,IACV,CACJ,CATa,GAYdY,EAAKyD,aAAe,KAGpBzD,EAAK0D,oBAAsB,KAO3B1D,EAAK2D,UAAY,SAAmBC,GAEhC,MAA8B,iBAAhBA,EACR5D,EAAKuD,OACDvD,EAAK0D,oBAAoBE,GACzB,IAAI5D,EAAK3G,MAAMuK,GACnB5D,EAAKuD,OACDvD,EAAKyD,aAAaG,GACI,oBAAf7H,WACH6H,EACA,IAAI7H,WAAW6H,EACjC,EAMA5D,EAAK3G,MAA8B,oBAAf0C,WAA6BA,WAAwC1C,MAezF2G,EAAKO,KAAkCP,EAAKsC,OAAOuB,SAAsC7D,EAAKsC,OAAOuB,QAAQtD,MACtEP,EAAKsC,OAAO/B,MACvCP,EAAKlB,QAAQ,QAOzBkB,EAAK8D,OAAS,mBAOd9D,EAAK+D,QAAU,wBAOf/D,EAAKgE,QAAU,6CAOfhE,EAAKiE,WAAa,SAAoBpuB,GAClC,OAAOA,EACDmqB,EAAKD,SAASpnB,KAAK9C,GAAOmrB,SAC1BhB,EAAKD,SAASK,QACxB,EAQAJ,EAAKkE,aAAe,SAAsB1iB,EAAMof,GAC5C,IAAIuD,EAAOnE,EAAKD,SAASgB,SAASvf,GAClC,OAAIwe,EAAKO,KACEP,EAAKO,KAAK6D,SAASD,EAAKxF,GAAIwF,EAAKvF,GAAIgC,GACzCuD,EAAKlE,SAASa,QAAQF,GACjC,EAiBAZ,EAAKmB,MAAQA,EAObnB,EAAKqE,QAAU,SAAiBvsB,GAC5B,OAAOA,EAAIiiB,OAAO,GAAGuK,cAAgBxsB,EAAIysB,UAAU,EACvD,EAyCAvE,EAAKuB,SAAWA,EAmBhBvB,EAAKwE,cAAgBjD,EAAS,iBAoB9BvB,EAAKyE,YAAc,SAAkBC,GAEjC,IADA,IAAIC,EAAW,CAAA,EACN9sB,EAAI,EAAGA,EAAI6sB,EAAW5tB,SAAUe,EACrC8sB,EAASD,EAAW7sB,IAAM,EAO9B,OAAO,WACH,IAAK,IAAIsnB,EAAOzpB,OAAOypB,KAAK9G,MAAOxgB,EAAIsnB,EAAKroB,OAAS,EAAGe,GAAK,IAAKA,EAC9D,GAA0B,IAAtB8sB,EAASxF,EAAKtnB,UAA+B4gB,IAAlBJ,KAAK8G,EAAKtnB,KAAuC,OAAlBwgB,KAAK8G,EAAKtnB,IACpE,OAAOsnB,EAAKtnB,EAC5B,CACA,EAeAmoB,EAAK4E,YAAc,SAAkBF,GAQjC,OAAO,SAASlD,GACZ,IAAK,IAAI3pB,EAAI,EAAGA,EAAI6sB,EAAW5tB,SAAUe,EACjC6sB,EAAW7sB,KAAO2pB,UACXnJ,KAAKqM,EAAW7sB,GACvC,CACA,EAkBAmoB,EAAK6E,cAAgB,CACjBC,MAAOrK,OACPsK,MAAOtK,OACPuK,MAAOvK,OACPwK,MAAM,GAIVjF,EAAKkF,WAAa,WACd,IAAI3B,EAASvD,EAAKuD,OAEbA,GAMLvD,EAAKyD,aAAeF,EAAO5qB,OAASojB,WAAWpjB,MAAQ4qB,EAAO5qB,MAE1D,SAAqB9C,EAAOsvB,GACxB,OAAO,IAAI5B,EAAO1tB,EAAOsvB,EACrC,EACInF,EAAK0D,oBAAsBH,EAAO6B,aAE9B,SAA4B9lB,GACxB,OAAO,IAAIikB,EAAOjkB,EAC9B,GAdQ0gB,EAAKyD,aAAezD,EAAK0D,oBAAsB,yGCpZzC2B,OAAGC,EAEjB,IAEIC,EAFAvF,EAAY5lB,mBAIZ2lB,EAAYC,EAAKD,SACjBlG,EAAYmG,EAAKnG,OACjByF,EAAYU,EAAKV,KAWrB,SAASkG,EAAGtM,EAAInd,EAAKmgB,GAMjB7D,KAAKa,GAAKA,EAMVb,KAAKtc,IAAMA,EAMXsc,KAAKoN,UAAOhN,EAMZJ,KAAK6D,IAAMA,CACd,CAGD,SAASwJ,IAAS,CAUlB,SAASC,EAAMN,GAMXhN,KAAKuN,KAAOP,EAAOO,KAMnBvN,KAAKwN,KAAOR,EAAOQ,KAMnBxN,KAAKtc,IAAMspB,EAAOtpB,IAMlBsc,KAAKoN,KAAOJ,EAAOS,MACtB,CAOD,SAASR,IAMLjN,KAAKtc,IAAM,EAMXsc,KAAKuN,KAAO,IAAIJ,EAAGE,EAAM,EAAG,GAM5BrN,KAAKwN,KAAOxN,KAAKuN,KAMjBvN,KAAKyN,OAAS,IAOjB,CAED,IAAIrrB,EAAS,WACT,OAAOulB,EAAKuD,OACN,WACE,OAAQ+B,EAAO7qB,OAAS,WACpB,OAAO,IAAI8qB,CAC3B,IACS,EAEC,WACE,OAAO,IAAID,CACvB,CACA,EAqCA,SAASS,EAAU7J,EAAKC,EAAKC,GACzBD,EAAIC,GAAa,IAANF,CACd,CAmBD,SAAS8J,EAASjqB,EAAKmgB,GACnB7D,KAAKtc,IAAMA,EACXsc,KAAKoN,UAAOhN,EACZJ,KAAK6D,IAAMA,CACd,CA6CD,SAAS+J,EAAc/J,EAAKC,EAAKC,GAC7B,KAAOF,EAAI0C,IACPzC,EAAIC,KAAkB,IAATF,EAAIyC,GAAW,IAC5BzC,EAAIyC,IAAMzC,EAAIyC,KAAO,EAAIzC,EAAI0C,IAAM,MAAQ,EAC3C1C,EAAI0C,MAAQ,EAEhB,KAAO1C,EAAIyC,GAAK,KACZxC,EAAIC,KAAkB,IAATF,EAAIyC,GAAW,IAC5BzC,EAAIyC,GAAKzC,EAAIyC,KAAO,EAExBxC,EAAIC,KAASF,EAAIyC,EACpB,CA0CD,SAASuH,EAAahK,EAAKC,EAAKC,GAC5BD,EAAIC,GAA0B,IAAdF,EAChBC,EAAIC,EAAM,GAAMF,IAAQ,EAAM,IAC9BC,EAAIC,EAAM,GAAMF,IAAQ,GAAM,IAC9BC,EAAIC,EAAM,GAAMF,IAAQ,EAC3B,CA9JDoJ,EAAO7qB,OAASA,IAOhB6qB,EAAO5F,MAAQ,SAAepgB,GAC1B,OAAO,IAAI0gB,EAAK3G,MAAM/Z,EAC1B,EAII0gB,EAAK3G,QAAUA,QACfiM,EAAO5F,MAAQM,EAAKkC,KAAKoD,EAAO5F,MAAOM,EAAK3G,MAAMP,UAAUqN,WAUhEb,EAAOxM,UAAUsN,MAAQ,SAAclN,EAAInd,EAAKmgB,GAG5C,OAFA7D,KAAKwN,KAAOxN,KAAKwN,KAAKJ,KAAO,IAAID,EAAGtM,EAAInd,EAAKmgB,GAC7C7D,KAAKtc,KAAOA,EACLsc,IACX,EA6BA2N,EAASlN,UAAYpjB,OAAO+E,OAAO+qB,EAAG1M,WACtCkN,EAASlN,UAAUI,GAxBnB,SAAuBgD,EAAKC,EAAKC,GAC7B,KAAOF,EAAM,KACTC,EAAIC,KAAe,IAANF,EAAY,IACzBA,KAAS,EAEbC,EAAIC,GAAOF,CACd,EAyBDoJ,EAAOxM,UAAUuN,OAAS,SAAsBxwB,GAW5C,OARAwiB,KAAKtc,MAAQsc,KAAKwN,KAAOxN,KAAKwN,KAAKJ,KAAO,IAAIO,GACzCnwB,KAAkB,GACT,IAAY,EACpBA,EAAQ,MAAY,EACpBA,EAAQ,QAAY,EACpBA,EAAQ,UAAY,EACA,EAC1BA,IAAQkG,IACDsc,IACX,EAQAiN,EAAOxM,UAAUwN,MAAQ,SAAqBzwB,GAC1C,OAAOA,EAAQ,EACTwiB,KAAK+N,MAAMH,EAAe,GAAIlG,EAASM,WAAWxqB,IAClDwiB,KAAKgO,OAAOxwB,EACtB,EAOAyvB,EAAOxM,UAAUyN,OAAS,SAAsB1wB,GAC5C,OAAOwiB,KAAKgO,QAAQxwB,GAAS,EAAIA,GAAS,MAAQ,EACtD,EAqBAyvB,EAAOxM,UAAU0N,OAAS,SAAsB3wB,GAC5C,IAAIsuB,EAAOpE,EAASpnB,KAAK9C,GACzB,OAAOwiB,KAAK+N,MAAMH,EAAe9B,EAAKrtB,SAAUqtB,EACpD,EASAmB,EAAOxM,UAAU2N,MAAQnB,EAAOxM,UAAU0N,OAQ1ClB,EAAOxM,UAAU4N,OAAS,SAAsB7wB,GAC5C,IAAIsuB,EAAOpE,EAASpnB,KAAK9C,GAAOqqB,WAChC,OAAO7H,KAAK+N,MAAMH,EAAe9B,EAAKrtB,SAAUqtB,EACpD,EAOAmB,EAAOxM,UAAU6N,KAAO,SAAoB9wB,GACxC,OAAOwiB,KAAK+N,MAAML,EAAW,EAAGlwB,EAAQ,EAAI,EAChD,EAcAyvB,EAAOxM,UAAU8N,QAAU,SAAuB/wB,GAC9C,OAAOwiB,KAAK+N,MAAMF,EAAc,EAAGrwB,IAAU,EACjD,EAQAyvB,EAAOxM,UAAU+N,SAAWvB,EAAOxM,UAAU8N,QAQ7CtB,EAAOxM,UAAUgO,QAAU,SAAuBjxB,GAC9C,IAAIsuB,EAAOpE,EAASpnB,KAAK9C,GACzB,OAAOwiB,KAAK+N,MAAMF,EAAc,EAAG/B,EAAKxF,IAAIyH,MAAMF,EAAc,EAAG/B,EAAKvF,GAC5E,EASA0G,EAAOxM,UAAUiO,SAAWzB,EAAOxM,UAAUgO,QAQ7CxB,EAAOxM,UAAU+F,MAAQ,SAAqBhpB,GAC1C,OAAOwiB,KAAK+N,MAAMpG,EAAKnB,MAAMrC,aAAc,EAAG3mB,EAClD,EAQAyvB,EAAOxM,UAAUkO,OAAS,SAAsBnxB,GAC5C,OAAOwiB,KAAK+N,MAAMpG,EAAKnB,MAAMV,cAAe,EAAGtoB,EACnD,EAEA,IAAIoxB,EAAajH,EAAK3G,MAAMP,UAAUoO,IAChC,SAAwBhL,EAAKC,EAAKC,GAChCD,EAAI+K,IAAIhL,EAAKE,EAChB,EAEC,SAAwBF,EAAKC,EAAKC,GAChC,IAAK,IAAIvkB,EAAI,EAAGA,EAAIqkB,EAAIplB,SAAUe,EAC9BskB,EAAIC,EAAMvkB,GAAKqkB,EAAIrkB,EAC/B,SAOAytB,EAAOxM,UAAUkM,MAAQ,SAAqBnvB,GAC1C,IAAIkG,EAAMlG,EAAMiB,SAAW,EAC3B,IAAKiF,EACD,OAAOsc,KAAK+N,MAAML,EAAW,EAAG,GACpC,GAAI/F,EAAKM,SAASzqB,GAAQ,CACtB,IAAIsmB,EAAMmJ,EAAO5F,MAAM3jB,EAAM8d,EAAO/iB,OAAOjB,IAC3CgkB,EAAOiB,OAAOjlB,EAAOsmB,EAAK,GAC1BtmB,EAAQsmB,CACX,CACD,OAAO9D,KAAKgO,OAAOtqB,GAAKqqB,MAAMa,EAAYlrB,EAAKlG,EACnD,EAOAyvB,EAAOxM,UAAUgB,OAAS,SAAsBjkB,GAC5C,IAAIkG,EAAMujB,EAAKxoB,OAAOjB,GACtB,OAAOkG,EACDsc,KAAKgO,OAAOtqB,GAAKqqB,MAAM9G,EAAKE,MAAOzjB,EAAKlG,GACxCwiB,KAAK+N,MAAML,EAAW,EAAG,EACnC,EAOAT,EAAOxM,UAAUqO,KAAO,WAIpB,OAHA9O,KAAKyN,OAAS,IAAIH,EAAMtN,MACxBA,KAAKuN,KAAOvN,KAAKwN,KAAO,IAAIL,EAAGE,EAAM,EAAG,GACxCrN,KAAKtc,IAAM,EACJsc,IACX,EAMAiN,EAAOxM,UAAUzE,MAAQ,WAUrB,OATIgE,KAAKyN,QACLzN,KAAKuN,KAASvN,KAAKyN,OAAOF,KAC1BvN,KAAKwN,KAASxN,KAAKyN,OAAOD,KAC1BxN,KAAKtc,IAASsc,KAAKyN,OAAO/pB,IAC1Bsc,KAAKyN,OAASzN,KAAKyN,OAAOL,OAE1BpN,KAAKuN,KAAOvN,KAAKwN,KAAO,IAAIL,EAAGE,EAAM,EAAG,GACxCrN,KAAKtc,IAAO,GAETsc,IACX,EAMAiN,EAAOxM,UAAUsO,OAAS,WACtB,IAAIxB,EAAOvN,KAAKuN,KACZC,EAAOxN,KAAKwN,KACZ9pB,EAAOsc,KAAKtc,IAOhB,OANAsc,KAAKhE,QAAQgS,OAAOtqB,GAChBA,IACAsc,KAAKwN,KAAKJ,KAAOG,EAAKH,KACtBpN,KAAKwN,KAAOA,EACZxN,KAAKtc,KAAOA,GAETsc,IACX,EAMAiN,EAAOxM,UAAUuO,OAAS,WAItB,IAHA,IAAIzB,EAAOvN,KAAKuN,KAAKH,KACjBtJ,EAAO9D,KAAKyJ,YAAYpC,MAAMrH,KAAKtc,KACnCqgB,EAAO,EACJwJ,GACHA,EAAK1M,GAAG0M,EAAK1J,IAAKC,EAAKC,GACvBA,GAAOwJ,EAAK7pB,IACZ6pB,EAAOA,EAAKH,KAGhB,OAAOtJ,CACX,EAEAmJ,EAAOJ,WAAa,SAASoC,GACzB/B,EAAe+B,EACfhC,EAAO7qB,OAASA,IAChB8qB,EAAaL,iIC9cHqC,cAAGhC,EAGjB,IAAID,EAASlrB,iBACZmrB,EAAazM,UAAYpjB,OAAO+E,OAAO6qB,EAAOxM,YAAYgJ,YAAcyD,EAEzE,IAAIvF,EAAO1lB,mBAQX,SAASirB,IACLD,EAAOtM,KAAKX,KACf,CAuCD,SAASmP,EAAkBtL,EAAKC,EAAKC,GAC7BF,EAAIplB,OAAS,GACbkpB,EAAKV,KAAKE,MAAMtD,EAAKC,EAAKC,GACrBD,EAAIqH,UACTrH,EAAIqH,UAAUtH,EAAKE,GAEnBD,EAAIqD,MAAMtD,EAAKE,EACtB,QA5CDmJ,EAAaL,WAAa,WAOtBK,EAAa7F,MAAQM,EAAK0D,oBAE1B6B,EAAakC,iBAAmBzH,EAAKuD,QAAUvD,EAAKuD,OAAOzK,qBAAqBiD,YAAiD,QAAnCiE,EAAKuD,OAAOzK,UAAUoO,IAAI1F,KAClH,SAA8BtF,EAAKC,EAAKC,GACxCD,EAAI+K,IAAIhL,EAAKE,EAEd,EAEC,SAA+BF,EAAKC,EAAKC,GACzC,GAAIF,EAAIlhB,KACNkhB,EAAIlhB,KAAKmhB,EAAKC,EAAK,EAAGF,EAAIplB,aACvB,IAAK,IAAIe,EAAI,EAAGA,EAAIqkB,EAAIplB,QAC3BqlB,EAAIC,KAASF,EAAIrkB,IAC7B,CACA,EAMA0tB,EAAazM,UAAUkM,MAAQ,SAA4BnvB,GACnDmqB,EAAKM,SAASzqB,KACdA,EAAQmqB,EAAKyD,aAAa5tB,EAAO,WACrC,IAAIkG,EAAMlG,EAAMiB,SAAW,EAI3B,OAHAuhB,KAAKgO,OAAOtqB,GACRA,GACAsc,KAAK+N,MAAMb,EAAakC,iBAAkB1rB,EAAKlG,GAC5CwiB,IACX,EAcAkN,EAAazM,UAAUgB,OAAS,SAA6BjkB,GACzD,IAAIkG,EAAMikB,EAAKuD,OAAOmE,WAAW7xB,GAIjC,OAHAwiB,KAAKgO,OAAOtqB,GACRA,GACAsc,KAAK+N,MAAMoB,EAAmBzrB,EAAKlG,GAChCwiB,IACX,EAUAkN,EAAaL,2GCnFCyC,OAAGC,EAEjB,IAEIC,EAFA7H,EAAY5lB,mBAIZ2lB,EAAYC,EAAKD,SACjBT,EAAYU,EAAKV,KAGrB,SAASwI,EAAgBH,EAAQI,GAC7B,OAAOC,WAAW,uBAAyBL,EAAOvL,IAAM,OAAS2L,GAAe,GAAK,MAAQJ,EAAO5rB,IACvG,CAQD,SAAS6rB,EAAOxN,GAMZ/B,KAAK8D,IAAM/B,EAMX/B,KAAK+D,IAAM,EAMX/D,KAAKtc,IAAMqe,EAAOtjB,MACrB,CAED,IA4CQjB,EA5CJoyB,EAAqC,oBAAflM,WACpB,SAA4B3B,GAC1B,GAAIA,aAAkB2B,YAAc1C,MAAMiK,QAAQlJ,GAC9C,OAAO,IAAIwN,EAAOxN,GACtB,MAAMY,MAAM,iBACf,EAEC,SAAsBZ,GACpB,GAAIf,MAAMiK,QAAQlJ,GACd,OAAO,IAAIwN,EAAOxN,GACtB,MAAMY,MAAM,iBACpB,EAEIvgB,EAAS,WACT,OAAOulB,EAAKuD,OACN,SAA6BnJ,GAC3B,OAAQwN,EAAOntB,OAAS,SAAuB2f,GAC3C,OAAO4F,EAAKuD,OAAO2E,SAAS9N,GACtB,IAAIyN,EAAazN,GAEjB6N,EAAa7N,EACtB,GAAEA,EACN,EAEC6N,CACV,EAuDA,SAASE,IAEL,IAAIhE,EAAO,IAAIpE,EAAS,EAAG,GACvBloB,EAAI,EACR,KAAIwgB,KAAKtc,IAAMsc,KAAK+D,IAAM,GAanB,CACH,KAAOvkB,EAAI,IAAKA,EAAG,CAEf,GAAIwgB,KAAK+D,KAAO/D,KAAKtc,IACjB,MAAM+rB,EAAgBzP,MAG1B,GADA8L,EAAKxF,IAAMwF,EAAKxF,IAA2B,IAArBtG,KAAK8D,IAAI9D,KAAK+D,OAAmB,EAAJvkB,KAAW,EAC1DwgB,KAAK8D,IAAI9D,KAAK+D,OAAS,IACvB,OAAO+H,CACd,CAGD,OADAA,EAAKxF,IAAMwF,EAAKxF,IAA6B,IAAvBtG,KAAK8D,IAAI9D,KAAK+D,SAAqB,EAAJvkB,KAAW,EACzDssB,CACV,CAzBG,KAAOtsB,EAAI,IAAKA,EAGZ,GADAssB,EAAKxF,IAAMwF,EAAKxF,IAA2B,IAArBtG,KAAK8D,IAAI9D,KAAK+D,OAAmB,EAAJvkB,KAAW,EAC1DwgB,KAAK8D,IAAI9D,KAAK+D,OAAS,IACvB,OAAO+H,EAKf,GAFAA,EAAKxF,IAAMwF,EAAKxF,IAA2B,IAArBtG,KAAK8D,IAAI9D,KAAK+D,OAAe,MAAQ,EAC3D+H,EAAKvF,IAAMuF,EAAKvF,IAA2B,IAArBvG,KAAK8D,IAAI9D,KAAK+D,OAAgB,KAAO,EACvD/D,KAAK8D,IAAI9D,KAAK+D,OAAS,IACvB,OAAO+H,EAgBf,GAfItsB,EAAI,EAeJwgB,KAAKtc,IAAMsc,KAAK+D,IAAM,GACtB,KAAOvkB,EAAI,IAAKA,EAGZ,GADAssB,EAAKvF,IAAMuF,EAAKvF,IAA2B,IAArBvG,KAAK8D,IAAI9D,KAAK+D,OAAmB,EAAJvkB,EAAQ,KAAO,EAC9DwgB,KAAK8D,IAAI9D,KAAK+D,OAAS,IACvB,OAAO+H,OAGf,KAAOtsB,EAAI,IAAKA,EAAG,CAEf,GAAIwgB,KAAK+D,KAAO/D,KAAKtc,IACjB,MAAM+rB,EAAgBzP,MAG1B,GADA8L,EAAKvF,IAAMuF,EAAKvF,IAA2B,IAArBvG,KAAK8D,IAAI9D,KAAK+D,OAAmB,EAAJvkB,EAAQ,KAAO,EAC9DwgB,KAAK8D,IAAI9D,KAAK+D,OAAS,IACvB,OAAO+H,CACd,CAGL,MAAMnJ,MAAM,0BACf,CAiCD,SAASoN,EAAgBjM,EAAKnjB,GAC1B,OAAQmjB,EAAInjB,EAAM,GACVmjB,EAAInjB,EAAM,IAAM,EAChBmjB,EAAInjB,EAAM,IAAM,GAChBmjB,EAAInjB,EAAM,IAAM,MAAQ,CACnC,CA8BD,SAASqvB,IAGL,GAAIhQ,KAAK+D,IAAM,EAAI/D,KAAKtc,IACpB,MAAM+rB,EAAgBzP,KAAM,GAEhC,OAAO,IAAI0H,EAASqI,EAAgB/P,KAAK8D,IAAK9D,KAAK+D,KAAO,GAAIgM,EAAgB/P,KAAK8D,IAAK9D,KAAK+D,KAAO,GACvG,QA5KDwL,EAAOntB,OAASA,IAEhBmtB,EAAO9O,UAAUwP,OAAStI,EAAK3G,MAAMP,UAAUqN,UAAuCnG,EAAK3G,MAAMP,UAAU6B,MAO3GiN,EAAO9O,UAAUuN,QACTxwB,EAAQ,WACL,WACuD,GAA1DA,GAAuC,IAArBwiB,KAAK8D,IAAI9D,KAAK+D,QAAuB,EAAO/D,KAAK8D,IAAI9D,KAAK+D,OAAS,IAAK,OAAOvmB,EACvC,GAA1DA,GAASA,GAA8B,IAArBwiB,KAAK8D,IAAI9D,KAAK+D,OAAgB,KAAO,EAAO/D,KAAK8D,IAAI9D,KAAK+D,OAAS,IAAK,OAAOvmB,EACvC,GAA1DA,GAASA,GAA8B,IAArBwiB,KAAK8D,IAAI9D,KAAK+D,OAAe,MAAQ,EAAO/D,KAAK8D,IAAI9D,KAAK+D,OAAS,IAAK,OAAOvmB,EACvC,GAA1DA,GAASA,GAA8B,IAArBwiB,KAAK8D,IAAI9D,KAAK+D,OAAe,MAAQ,EAAO/D,KAAK8D,IAAI9D,KAAK+D,OAAS,IAAK,OAAOvmB,EACvC,GAA1DA,GAASA,GAA+B,GAAtBwiB,KAAK8D,IAAI9D,KAAK+D,OAAe,MAAQ,EAAO/D,KAAK8D,IAAI9D,KAAK+D,OAAS,IAAK,OAAOvmB,EAGjG,IAAKwiB,KAAK+D,KAAO,GAAK/D,KAAKtc,IAEvB,MADAsc,KAAK+D,IAAM/D,KAAKtc,IACV+rB,EAAgBzP,KAAM,IAEhC,OAAOxiB,CACf,GAOA+xB,EAAO9O,UAAUwN,MAAQ,WACrB,OAAuB,EAAhBjO,KAAKgO,QAChB,EAMAuB,EAAO9O,UAAUyN,OAAS,WACtB,IAAI1wB,EAAQwiB,KAAKgO,SACjB,OAAOxwB,IAAU,IAAc,EAARA,GAAa,CACxC,EAoFA+xB,EAAO9O,UAAU6N,KAAO,WACpB,OAAyB,IAAlBtO,KAAKgO,QAChB,EAaAuB,EAAO9O,UAAU8N,QAAU,WAGvB,GAAIvO,KAAK+D,IAAM,EAAI/D,KAAKtc,IACpB,MAAM+rB,EAAgBzP,KAAM,GAEhC,OAAO+P,EAAgB/P,KAAK8D,IAAK9D,KAAK+D,KAAO,EACjD,EAMAwL,EAAO9O,UAAU+N,SAAW,WAGxB,GAAIxO,KAAK+D,IAAM,EAAI/D,KAAKtc,IACpB,MAAM+rB,EAAgBzP,KAAM,GAEhC,OAAkD,EAA3C+P,EAAgB/P,KAAK8D,IAAK9D,KAAK+D,KAAO,EACjD,EAkCAwL,EAAO9O,UAAU+F,MAAQ,WAGrB,GAAIxG,KAAK+D,IAAM,EAAI/D,KAAKtc,IACpB,MAAM+rB,EAAgBzP,KAAM,GAEhC,IAAIxiB,EAAQmqB,EAAKnB,MAAMnC,YAAYrE,KAAK8D,IAAK9D,KAAK+D,KAElD,OADA/D,KAAK+D,KAAO,EACLvmB,CACX,EAOA+xB,EAAO9O,UAAUkO,OAAS,WAGtB,GAAI3O,KAAK+D,IAAM,EAAI/D,KAAKtc,IACpB,MAAM+rB,EAAgBzP,KAAM,GAEhC,IAAIxiB,EAAQmqB,EAAKnB,MAAMR,aAAahG,KAAK8D,IAAK9D,KAAK+D,KAEnD,OADA/D,KAAK+D,KAAO,EACLvmB,CACX,EAMA+xB,EAAO9O,UAAUkM,MAAQ,WACrB,IAAIluB,EAASuhB,KAAKgO,SACdttB,EAASsf,KAAK+D,IACdpjB,EAASqf,KAAK+D,IAAMtlB,EAGxB,GAAIkC,EAAMqf,KAAKtc,IACX,MAAM+rB,EAAgBzP,KAAMvhB,GAGhC,OADAuhB,KAAK+D,KAAOtlB,EACRuiB,MAAMiK,QAAQjL,KAAK8D,KACZ9D,KAAK8D,IAAIxB,MAAM5hB,EAAOC,GAC1BD,IAAUC,EACX,IAAIqf,KAAK8D,IAAI2F,YAAY,GACzBzJ,KAAKiQ,OAAOtP,KAAKX,KAAK8D,IAAKpjB,EAAOC,EAC5C,EAMA4uB,EAAO9O,UAAUgB,OAAS,WACtB,IAAIkL,EAAQ3M,KAAK2M,QACjB,OAAO1F,EAAKC,KAAKyF,EAAO,EAAGA,EAAMluB,OACrC,EAOA8wB,EAAO9O,UAAUyP,KAAO,SAAczxB,GAClC,GAAsB,iBAAXA,EAAqB,CAE5B,GAAIuhB,KAAK+D,IAAMtlB,EAASuhB,KAAKtc,IACzB,MAAM+rB,EAAgBzP,KAAMvhB,GAChCuhB,KAAK+D,KAAOtlB,CACpB,MACQ,GAEI,GAAIuhB,KAAK+D,KAAO/D,KAAKtc,IACjB,MAAM+rB,EAAgBzP,YACE,IAAvBA,KAAK8D,IAAI9D,KAAK+D,QAE3B,OAAO/D,IACX,EAOAuP,EAAO9O,UAAU0P,SAAW,SAASC,GACjC,OAAQA,GACJ,KAAK,EACDpQ,KAAKkQ,OACL,MACJ,KAAK,EACDlQ,KAAKkQ,KAAK,GACV,MACJ,KAAK,EACDlQ,KAAKkQ,KAAKlQ,KAAKgO,UACf,MACJ,KAAK,EACD,KAA0C,IAAlCoC,EAA2B,EAAhBpQ,KAAKgO,WACpBhO,KAAKmQ,SAASC,GAElB,MACJ,KAAK,EACDpQ,KAAKkQ,KAAK,GACV,MAGJ,QACI,MAAMvN,MAAM,qBAAuByN,EAAW,cAAgBpQ,KAAK+D,KAE3E,OAAO/D,IACX,EAEAuP,EAAO1C,WAAa,SAASwD,GACzBb,EAAea,EACfd,EAAOntB,OAASA,IAChBotB,EAAa3C,aAEb,IAAIhM,EAAK8G,EAAKO,KAAO,SAAsC,WAC3DP,EAAKmB,MAAMyG,EAAO9O,UAAW,CAEzB2N,MAAO,WACH,OAAO0B,EAAenP,KAAKX,MAAMa,IAAI,EACxC,EAEDsN,OAAQ,WACJ,OAAO2B,EAAenP,KAAKX,MAAMa,IAAI,EACxC,EAEDwN,OAAQ,WACJ,OAAOyB,EAAenP,KAAKX,MAAM8H,WAAWjH,IAAI,EACnD,EAED4N,QAAS,WACL,OAAOuB,EAAYrP,KAAKX,MAAMa,IAAI,EACrC,EAED6N,SAAU,WACN,OAAOsB,EAAYrP,KAAKX,MAAMa,IAAI,EACrC,wHCtZKyP,cAAGd,EAGjB,IAAID,EAASxtB,iBACZytB,EAAa/O,UAAYpjB,OAAO+E,OAAOmtB,EAAO9O,YAAYgJ,YAAc+F,EAEzE,IAAI7H,EAAO1lB,mBASX,SAASutB,EAAazN,GAClBwN,EAAO5O,KAAKX,KAAM+B,EAOrB,QAEDyN,EAAa3C,WAAa,WAElBlF,EAAKuD,SACLsE,EAAa/O,UAAUwP,OAAStI,EAAKuD,OAAOzK,UAAU6B,MAC9D,EAMAkN,EAAa/O,UAAUgB,OAAS,WAC5B,IAAI/d,EAAMsc,KAAKgO,SACf,OAAOhO,KAAK8D,IAAIyM,UACVvQ,KAAK8D,IAAIyM,UAAUvQ,KAAK+D,IAAK/D,KAAK+D,IAAMjmB,KAAKQ,IAAI0hB,KAAK+D,IAAMrgB,EAAKsc,KAAKtc,MACtEsc,KAAK8D,IAAIpkB,SAAS,QAASsgB,KAAK+D,IAAK/D,KAAK+D,IAAMjmB,KAAKQ,IAAI0hB,KAAK+D,IAAMrgB,EAAKsc,KAAKtc,KACxF,EASA8rB,EAAa3C,sOCjDC2D,QAAGC,EAEjB,IAAI9I,EAAO5lB,mBAsCX,SAAS0uB,EAAQC,EAASC,EAAkBC,GAExC,GAAuB,mBAAZF,EACP,MAAMG,UAAU,8BAEpBlJ,EAAK/E,aAAajC,KAAKX,MAMvBA,KAAK0Q,QAAUA,EAMf1Q,KAAK2Q,iBAAmBlI,QAAQkI,GAMhC3Q,KAAK4Q,kBAAoBnI,QAAQmI,EACpC,QA3DAH,EAAQhQ,UAAYpjB,OAAO+E,OAAOulB,EAAK/E,aAAanC,YAAYgJ,YAAcgH,EAwE/EA,EAAQhQ,UAAUqQ,QAAU,SAASA,EAAQC,EAAQC,EAAaC,EAAcC,EAASC,GAErF,IAAKD,EACD,MAAML,UAAU,6BAEpB,IAAI/jB,EAAOkT,KACX,IAAKmR,EACD,OAAOxJ,EAAK+B,UAAUoH,EAAShkB,EAAMikB,EAAQC,EAAaC,EAAcC,GAE5E,GAAKpkB,EAAK4jB,QAKV,IACI,OAAO5jB,EAAK4jB,QACRK,EACAC,EAAYlkB,EAAK6jB,iBAAmB,kBAAoB,UAAUO,GAASlC,UAC3E,SAAqB1N,EAAK8P,GAEtB,GAAI9P,EAEA,OADAxU,EAAKsW,KAAK,QAAS9B,EAAKyP,GACjBI,EAAS7P,GAGpB,GAAiB,OAAb8P,EAAJ,CAKA,KAAMA,aAAoBH,GACtB,IACIG,EAAWH,EAAankB,EAAK8jB,kBAAoB,kBAAoB,UAAUQ,EAIlF,CAHC,MAAO9P,GAEL,OADAxU,EAAKsW,KAAK,QAAS9B,EAAKyP,GACjBI,EAAS7P,EACnB,CAIL,OADAxU,EAAKsW,KAAK,OAAQgO,EAAUL,GACrBI,EAAS,KAAMC,EAZrB,CAFGtkB,EAAKnM,KAAqB,EAejC,GAMR,CAJC,MAAO2gB,GAGL,OAFAxU,EAAKsW,KAAK,QAAS9B,EAAKyP,QACxBM,YAAW,WAAaF,EAAS7P,EAAK,GAAI,EAE7C,MArCG+P,YAAW,WAAaF,EAASxO,MAAM,iBAAkB,GAAI,EAsCrE,EAOA8N,EAAQhQ,UAAU9f,IAAM,SAAa2wB,GAOjC,OANItR,KAAK0Q,UACAY,GACDtR,KAAK0Q,QAAQ,KAAM,KAAM,MAC7B1Q,KAAK0Q,QAAU,KACf1Q,KAAKoD,KAAK,OAAOH,OAEdjD,yFCtIDziB,EA6BNkzB,QAAU1uB,sGClCAwvB,MAAG,CAAA,yGCAjB,IAAIC,EAAWj0B,EA2Bf,SAASk0B,IACLD,EAAS7J,KAAKkF,aACd2E,EAASvE,OAAOJ,WAAW2E,EAAStE,cACpCsE,EAASjC,OAAO1C,WAAW2E,EAAShC,aACvC,CAvBDgC,EAASE,MAAQ,UAGjBF,EAASvE,OAAelrB,gBACxByvB,EAAStE,aAAejrB,uBACxBuvB,EAASjC,OAAeptB,gBACxBqvB,EAAShC,aAAevS,uBAGxBuU,EAAS7J,KAAegC,mBACxB6H,EAASG,IAAe/H,aACxB4H,EAASD,MAAezH,eACxB0H,EAASC,UAAeA,EAcxBA,sHChCAl0B,QAAiBwE,yCCHjB,IAAA6vB,eAAAC,iBA0BA,SAASC,uBACP,MAAO,CAAErE,OAAQ,GACnB,CAMO,MAAMsE,WAAa,CACxBjQ,OAAOuH,EAAqB2D,EAAqBgF,eAAI/E,OAAO7qB,UAC1D,IAAK,MAAMmG,KAAK8gB,EAAQoE,OACtBwE,iBAAiBnQ,OAAOvZ,EAAIykB,EAAOgB,OAAO,IAAIc,QAAQC,SAExD,OAAO/B,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUyI,uBAChB,KAAOxC,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,GAAQmE,IAAQ,GACT,EACH9I,EAAQoE,OAAOtL,KAAK8P,iBAAiBxP,OAAO6M,EAAQA,EAAOtB,gBAG3DsB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GAGH,SAAS+I,6BACP,MAAO,CACLjJ,KAAM,GACNkJ,KAAM,GACNC,aAASlS,EACTmS,YAAQnS,EACRoS,WAAOpS,EACPqS,UAAMrS,EACNsS,iBAAatS,EAEjB,CAMO,MAAM6R,iBAAmB,CAC9BnQ,OAAM,CAACuH,EAA2B2D,EAAqBgF,eAAI/E,OAAO7qB,YAC3C,KAAjBinB,EAAQF,MACV6D,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQF,MAEd,KAAjBE,EAAQgJ,MACVrF,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQgJ,WAEXjS,IAApBiJ,EAAQiJ,SACVtF,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQiJ,cAEVlS,IAAnBiJ,EAAQkJ,QACVvF,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQkJ,aAEZnS,IAAlBiJ,EAAQmJ,OACVxF,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQmJ,YAEbpS,IAAjBiJ,EAAQoJ,MACVzF,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQoJ,WAELrS,IAAxBiJ,EAAQqJ,aACV1F,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQqJ,aAE1B1F,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU+I,6BAChB,KAAO9C,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQF,KAAOmG,EAAO7N,SACtB,MACF,KAAK,EACH4H,EAAQgJ,KAAO/C,EAAO7N,SACtB,MACF,KAAK,EACH4H,EAAQiJ,QAAUhD,EAAOhB,OACzB,MACF,KAAK,EACHjF,EAAQkJ,OAASjD,EAAO9I,QACxB,MACF,KAAK,EACH6C,EAAQmJ,MAAQlD,EAAO9I,QACvB,MACF,KAAK,EACH6C,EAAQoJ,KAAOnD,EAAOhB,OACtB,MACF,KAAK,EACHjF,EAAQqJ,YAAcpD,EAAOhB,OAC7B,MACF,QACEgB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GClIUsJ,eAAe,KAKfC,eAAsC,CACjDC,UAAUr1B,EAAmBs1B,GAC3B,MAAM9F,EAAS+E,WAAWjQ,OAAOtkB,GAC3BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHyC,WAAWtP,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEnD7wB,OAAM,IAEG2vB,WAAWtP,OAAO,IAAIiB,aCJjC,SAASwP,0BACP,MAAO,CAAEZ,aAASlS,EAAW+S,YAAQ/S,EAAWqS,UAAMrS,EAAWrQ,WAAOqQ,EAAWgT,aAAc,GACnG,CAMO,MAAMC,cAAgB,CAC3BvR,OAAM,CAACuH,EAAwB2D,EAAqBgF,eAAI/E,OAAO7qB,iBACrCge,IAApBiJ,EAAQiJ,SACVtF,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQiJ,cAETlS,IAAnBiJ,EAAQ8J,QACVnG,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQ8J,aAEb/S,IAAjBiJ,EAAQoJ,MACVzF,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQoJ,WAEXrS,IAAlBiJ,EAAQtZ,OACVid,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQtZ,OAEL,KAAzBsZ,EAAQ+J,cACVpG,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQ+J,cAE5BpG,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU6J,0BAChB,KAAO5D,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQiJ,QAAUhD,EAAOhB,OACzB,MACF,KAAK,EACHjF,EAAQ8J,OAAS7D,EAAO9I,QACxB,MACF,KAAK,EACH6C,EAAQoJ,KAAOnD,EAAOhB,OACtB,MACF,KAAK,EACHjF,EAAQtZ,MAAQuf,EAAO9I,QACvB,MACF,KAAK,EACH6C,EAAQ+J,aAAe9D,EAAO7N,SAC9B,MACF,QACE6N,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCpEUsJ,eAAe,KAKfW,kBAA4C,CACvDT,UAAUr1B,EAAsBs1B,GAC9B,MAAM9F,EAASqG,cAAcvR,OAAOtkB,GAC9BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH+D,cAAc5Q,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEtD7wB,OAAM,IAEGixB,cAAc5Q,OAAO,IAAIiB,aCdpC,IAAkB6P,kBAalB,SAASC,2BACP,MAAO,CAAEC,SAAU,GAAIC,cAAe,EACxC,EAfA,SAAkBH,GAChBA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAND,CAAkBA,oBAAAA,kBAMjB,CAAA,IAeM,MAAMI,eAAiB,CAC5B7R,OAAM,CAACuH,EAAyB2D,EAAqBgF,eAAI/E,OAAO7qB,YACrC,KAArBinB,EAAQoK,UACVzG,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQoK,UAEL,IAA1BpK,EAAQqK,eACV1G,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQqK,eAE3B1G,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUmK,2BAChB,KAAOlE,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQoK,SAAWnE,EAAO7N,SAC1B,MACF,KAAK,EACH4H,EAAQqK,cAAgBpE,EAAOrB,QAC/B,MACF,QACEqB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCrDUsJ,eAAe,KAKfiB,mBAA8C,CACzDf,UAAUr1B,EAAuBs1B,GAC/B,MAAM9F,EAAS2G,eAAe7R,OAAOtkB,GAC/BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHqE,eAAelR,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEvD7wB,OAAM,IAEGuxB,eAAelR,OAAO,IAAIiB,aCRrC,SAASmQ,oBACP,MAAO,CAAExxB,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAC1B,CAMO,MAAMV,QAAU,CACrBigB,OAAM,CAACuH,EAAkB2D,EAAqBgF,eAAI/E,OAAO7qB,YACrC,IAAdinB,EAAQhnB,GACV2qB,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQhnB,GAEhB,IAAdgnB,EAAQ/mB,GACV0qB,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQ/mB,GAEhB,IAAd+mB,EAAQ9mB,GACVyqB,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQ9mB,GAE3ByqB,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUwK,oBAChB,KAAOvE,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQhnB,EAAIitB,EAAO9I,QACnB,MACF,KAAK,EACH6C,EAAQ/mB,EAAIgtB,EAAO9I,QACnB,MACF,KAAK,EACH6C,EAAQ9mB,EAAI+sB,EAAO9I,QACnB,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCjDH,IAAkByK,eAYlB,SAASC,iCACP,MAAO,CAAEC,UAAM5T,EAAW6T,WAAY,GAAIC,UAAW,GACvD,EAdA,SAAkBJ,GAChBA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAJD,CAAkBA,iBAAAA,eAIjB,CAAA,IAgBM,MAAMK,qBAAuB,CAClCrS,OAAOuH,EAA+B2D,EAAqBgF,eAAI/E,OAAO7qB,eAC/Cge,IAAjBiJ,EAAQ2K,MACVnyB,QAAQigB,OAAOuH,EAAQ2K,KAAMhH,EAAOgB,OAAO,IAAIc,QAAQC,SAEzD,IAAK,MAAMxmB,KAAK8gB,EAAQ4K,WACtBjH,EAAOgB,OAAO,IAAIvM,OAAOlZ,GAE3BykB,EAAOgB,OAAO,IAAIc,OAClB,IAAK,MAAMvmB,KAAK8gB,EAAQ6K,UACtBlH,EAAOiB,MAAM1lB,GAGf,OADAykB,EAAO+B,SACA/B,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU0K,iCAChB,KAAOzE,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQ2K,KAAOnyB,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC7C,MACF,KAAK,EACH3E,EAAQ4K,WAAW9R,KAAKmN,EAAO7N,UAC/B,MACF,KAAK,EACH,GAAkB,IAAP,EAAN0Q,GAAgB,CACnB,MAAMiC,EAAO9E,EAAOtB,SAAWsB,EAAOvL,IACtC,KAAOuL,EAAOvL,IAAMqQ,GAClB/K,EAAQ6K,UAAU/R,KAAKmN,EAAOrB,QAEjC,MACC5E,EAAQ6K,UAAU/R,KAAKmN,EAAOrB,SAEhC,MACF,QACEqB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCpEUsJ,eAAe,KAKf0B,yBAA0D,CACrExB,UAAUr1B,EAA6Bs1B,GACrC,MAAM9F,EAASmH,qBAAqBrS,OAAOtkB,GACrCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH6E,qBAAqB1R,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAE7D7wB,OAAM,IAEG+xB,qBAAqB1R,OAAO,IAAIiB,8GCvB7B4Q,KAAGpM,EAKjB,IAAIqM,EAAO,KAEX,IACEA,EAAO,IAAIC,YAAYC,SAAS,IAAID,YAAYE,OAAO,IAAIhR,WAAW,CACpE,EAAG,GAAI,IAAK,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,IAAK,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,EAAG,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,EAAG,GAAI,GAAI,IAAK,IAAK,GAAI,EAAG,GAAI,EAAG,IAAK,MACvnC,IAAInmB,OAGV,CAFC,MAAOwpB,GAER,CAYD,SAASmB,EAAKG,EAAKC,EAAMC,GAMrBvI,KAAKqI,IAAY,EAANA,EAMXrI,KAAKsI,KAAc,EAAPA,EAMZtI,KAAKuI,WAAaA,CACrB,CAmCD,SAASoM,EAAO5J,GACZ,OAAsC,KAA9BA,GAAOA,EAAgB,WAClC,CAZD7C,EAAKzH,UAAUmU,WAEfv3B,OAAOC,eAAe4qB,EAAKzH,UAAW,aAAc,CAAEjjB,OAAO,IAkB7D0qB,EAAKyM,OAASA,EAOd,IAAIE,EAAY,CAAA,EAOZC,EAAa,CAAA,EAQjB,SAASC,EAAQv3B,EAAO+qB,GACpB,IAAIwC,EAAKiK,EAAWC,EACpB,OAAI1M,GAEI0M,EAAS,IADbz3B,KAAW,IACgBA,EAAQ,OAC/Bw3B,EAAYF,EAAWt3B,IAEZw3B,GAEfjK,EAAMgB,EAASvuB,GAAgB,EAARA,GAAa,GAAK,EAAI,GAAG,GAC5Cy3B,IACAH,EAAWt3B,GAASutB,GACjBA,IAGHkK,GAAU,MADdz3B,GAAS,IACqBA,EAAQ,OAClCw3B,EAAYH,EAAUr3B,IAEXw3B,GAEfjK,EAAMgB,EAASvuB,EAAOA,EAAQ,GAAK,EAAI,GAAG,GACtCy3B,IACAJ,EAAUr3B,GAASutB,GAChBA,EAEd,CAiBD,SAAS/C,EAAWxqB,EAAO+qB,GACvB,GAAInqB,MAAMZ,GACN,OAAO+qB,EAAW2M,EAAQC,EAC9B,GAAI5M,EAAU,CACV,GAAI/qB,EAAQ,EACR,OAAO03B,EACX,GAAI13B,GAAS43B,EACT,OAAOC,CACnB,KAAW,CACH,GAAI73B,IAAU83B,EACV,OAAOC,EACX,GAAI/3B,EAAQ,GAAK83B,EACb,OAAOE,CACd,CACD,OAAIh4B,EAAQ,EACDwqB,GAAYxqB,EAAO+qB,GAAUkN,MACjC1J,EAAUvuB,EAAQk4B,EAAkB,EAAIl4B,EAAQk4B,EAAkB,EAAGnN,EAC/E,CAkBD,SAASwD,EAAS4J,EAASC,EAAUrN,GACjC,OAAO,IAAIL,EAAKyN,EAASC,EAAUrN,EACtC,CA7CDL,EAAK6M,QAAUA,EAkCf7M,EAAKF,WAAaA,EAsBlBE,EAAK6D,SAAWA,EAShB,IAAI8J,EAAU/3B,KAAK8mB,IASnB,SAASwD,EAAW3oB,EAAK8oB,EAAUuN,GAC/B,GAAmB,IAAfr2B,EAAIhB,OACJ,MAAMkkB,MAAM,gBAChB,GAAY,QAARljB,GAAyB,aAARA,GAA8B,cAARA,GAA+B,cAARA,EAC9D,OAAO01B,EASX,GARwB,iBAAb5M,GAEPuN,EAAQvN,EACRA,GAAW,GAEXA,IAAcA,GAElBuN,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAMnG,WAAW,SAErB,IAAInP,EACJ,IAAKA,EAAI/gB,EAAIs2B,QAAQ,MAAQ,EACzB,MAAMpT,MAAM,mBACX,GAAU,IAANnC,EACL,OAAO4H,EAAW3oB,EAAIysB,UAAU,GAAI3D,EAAUuN,GAAOL,MAQzD,IAHA,IAAIO,EAAehO,EAAW6N,EAAQC,EAAO,IAEzC72B,EAASk2B,EACJ31B,EAAI,EAAGA,EAAIC,EAAIhB,OAAQe,GAAK,EAAG,CACpC,IAAIyH,EAAOnJ,KAAKQ,IAAI,EAAGmB,EAAIhB,OAASe,GAChChC,EAAQ2qB,SAAS1oB,EAAIysB,UAAU1sB,EAAGA,EAAIyH,GAAO6uB,GACjD,GAAI7uB,EAAO,EAAG,CACV,IAAIgvB,EAAQjO,EAAW6N,EAAQC,EAAO7uB,IACtChI,EAASA,EAAOi3B,IAAID,GAAOzzB,IAAIwlB,EAAWxqB,GACtD,MAEYyB,GADAA,EAASA,EAAOi3B,IAAIF,IACJxzB,IAAIwlB,EAAWxqB,GAEtC,CAED,OADAyB,EAAOspB,SAAWA,EACXtpB,CACV,CAmBD,SAASk3B,EAAUtS,EAAK0E,GACpB,MAAmB,iBAAR1E,EACAmE,EAAWnE,EAAK0E,GACR,iBAAR1E,EACAuE,EAAWvE,EAAK0E,GAEpBwD,EAASlI,EAAIwE,IAAKxE,EAAIyE,KAA0B,kBAAbC,EAAyBA,EAAW1E,EAAI0E,SACrF,CAhBDL,EAAKE,WAAaA,EAyBlBF,EAAKiO,UAAYA,EAUjB,IAcIT,EAAiBU,WAOjBhB,EAAiBM,EAAiBA,EAOlCJ,EAAiBF,EAAiB,EAOlCiB,EAAatB,EA5BI,GAAK,IAkCtBI,EAAOJ,EAAQ,GAMnB7M,EAAKiN,KAAOA,EAMZ,IAAID,EAAQH,EAAQ,GAAG,GAMvB7M,EAAKgN,MAAQA,EAMb,IAAIoB,EAAMvB,EAAQ,GAMlB7M,EAAKoO,IAAMA,EAMX,IAAIC,EAAOxB,EAAQ,GAAG,GAMtB7M,EAAKqO,KAAOA,EAMZ,IAAIC,EAAUzB,GAAS,GAMvB7M,EAAKsO,QAAUA,EAMf,IAAIhB,EAAYzJ,GAAS,EAAc,YAAc,GAMrD7D,EAAKsN,UAAYA,EAMjB,IAAIH,EAAqBtJ,GAAS,GAAc,GAAc,GAM9D7D,EAAKmN,mBAAqBA,EAM1B,IAAIE,EAAYxJ,EAAS,GAAG,YAAc,GAM1C7D,EAAKqN,UAAYA,EAMjB,IAAIkB,EAAgBvO,EAAKzH,iBAMzBgW,EAAcC,MAAQ,WAClB,OAAO1W,KAAKuI,SAAWvI,KAAKqI,MAAQ,EAAIrI,KAAKqI,GACjD,EAMAoO,EAAc7O,SAAW,WACrB,OAAI5H,KAAKuI,UACIvI,KAAKsI,OAAS,GAAKoN,GAAmB1V,KAAKqI,MAAQ,GACzDrI,KAAKsI,KAAOoN,GAAkB1V,KAAKqI,MAAQ,EACtD,EASAoO,EAAc/2B,SAAW,SAAkBo2B,GAEvC,IADAA,EAAQA,GAAS,IACL,GAAK,GAAKA,EAClB,MAAMnG,WAAW,SACrB,GAAI3P,KAAK2W,SACL,MAAO,IACX,GAAI3W,KAAK4W,aAAc,CACnB,GAAI5W,KAAK6W,GAAGtB,GAAY,CAGpB,IAAIuB,EAAY9O,EAAW8N,GACvBiB,EAAM/W,KAAK+W,IAAID,GACfE,EAAOD,EAAIb,IAAIY,GAAWG,IAAIjX,MAClC,OAAO+W,EAAIr3B,SAASo2B,GAASkB,EAAKN,QAAQh3B,SAASo2B,EACtD,CACG,MAAO,IAAM9V,KAAKyV,MAAM/1B,SAASo2B,EACxC,CAOD,IAHA,IAAIE,EAAehO,EAAW6N,EAAQC,EAAO,GAAI9V,KAAKuI,UAClD2O,EAAMlX,KACN/gB,EAAS,KACA,CACT,IAAIk4B,EAASD,EAAIH,IAAIf,GAEjBoB,GADSF,EAAID,IAAIE,EAAOjB,IAAIF,IAAeU,UAAY,GACvCh3B,SAASo2B,GAE7B,IADAoB,EAAMC,GACER,SACJ,OAAOS,EAASn4B,EAEhB,KAAOm4B,EAAO34B,OAAS,GACnB24B,EAAS,IAAMA,EACnBn4B,EAAS,GAAKm4B,EAASn4B,CAE9B,CACL,EAMAw3B,EAAcY,YAAc,WACxB,OAAOrX,KAAKsI,IAChB,EAMAmO,EAAca,oBAAsB,WAChC,OAAOtX,KAAKsI,OAAS,CACzB,EAMAmO,EAAcc,WAAa,WACvB,OAAOvX,KAAKqI,GAChB,EAMAoO,EAAce,mBAAqB,WAC/B,OAAOxX,KAAKqI,MAAQ,CACxB,EAMAoO,EAAcgB,cAAgB,WAC1B,GAAIzX,KAAK4W,aACL,OAAO5W,KAAK6W,GAAGtB,GAAa,GAAKvV,KAAKyV,MAAMgC,gBAEhD,IADA,IAAI5T,EAAmB,GAAb7D,KAAKsI,KAAYtI,KAAKsI,KAAOtI,KAAKqI,IACnCqP,EAAM,GAAIA,EAAM,GACK,IAArB7T,EAAO,GAAK6T,GADOA,KAG5B,OAAoB,GAAb1X,KAAKsI,KAAYoP,EAAM,GAAKA,EAAM,CAC7C,EAMAjB,EAAcE,OAAS,WACnB,OAAqB,IAAd3W,KAAKsI,MAA2B,IAAbtI,KAAKqI,GACnC,EAMAoO,EAAckB,IAAMlB,EAAcE,OAMlCF,EAAcG,WAAa,WACvB,OAAQ5W,KAAKuI,UAAYvI,KAAKsI,KAAO,CACzC,EAMAmO,EAAcmB,WAAa,WACvB,OAAO5X,KAAKuI,UAAYvI,KAAKsI,MAAQ,CACzC,EAMAmO,EAAcoB,MAAQ,WAClB,OAA0B,IAAP,EAAX7X,KAAKqI,IACjB,EAMAoO,EAAcqB,OAAS,WACnB,OAA0B,IAAP,EAAX9X,KAAKqI,IACjB,EAOAoO,EAAcrtB,OAAS,SAAgB6L,GAGnC,OAFK0f,EAAO1f,KACRA,EAAQkhB,EAAUlhB,KAClB+K,KAAKuI,WAAatT,EAAMsT,UAAavI,KAAKsI,OAAS,IAAQ,GAAMrT,EAAMqT,OAAS,IAAQ,KAErFtI,KAAKsI,OAASrT,EAAMqT,MAAQtI,KAAKqI,MAAQpT,EAAMoT,IAC1D,EAQAoO,EAAcI,GAAKJ,EAAcrtB,OAOjCqtB,EAAcsB,UAAY,SAAmB9iB,GACzC,OAAQ+K,KAAK6W,GAAmB5hB,EACpC,EAQAwhB,EAAcuB,IAAMvB,EAAcsB,UAQlCtB,EAAcwB,GAAKxB,EAAcsB,UAOjCtB,EAAcyB,SAAW,SAAkBjjB,GACvC,OAAO+K,KAAKmY,KAAqBljB,GAAS,CAC9C,EAQAwhB,EAAc2B,GAAK3B,EAAcyB,SAOjCzB,EAAc4B,gBAAkB,SAAyBpjB,GACrD,OAAO+K,KAAKmY,KAAqBljB,IAAU,CAC/C,EAQAwhB,EAAc6B,IAAM7B,EAAc4B,gBAQlC5B,EAAc9S,GAAK8S,EAAc4B,gBAOjC5B,EAAc8B,YAAc,SAAqBtjB,GAC7C,OAAO+K,KAAKmY,KAAqBljB,GAAS,CAC9C,EAQAwhB,EAAc+B,GAAK/B,EAAc8B,YAOjC9B,EAAcgC,mBAAqB,SAA4BxjB,GAC3D,OAAO+K,KAAKmY,KAAqBljB,IAAU,CAC/C,EAQAwhB,EAAciC,IAAMjC,EAAcgC,mBAQlChC,EAAckC,GAAKlC,EAAcgC,mBAQjChC,EAAcmC,QAAU,SAAiB3jB,GAGrC,GAFK0f,EAAO1f,KACRA,EAAQkhB,EAAUlhB,IAClB+K,KAAK6W,GAAG5hB,GACR,OAAO,EACX,IAAI4jB,EAAU7Y,KAAK4W,aACfkC,EAAW7jB,EAAM2hB,aACrB,OAAIiC,IAAYC,GACJ,GACPD,GAAWC,EACL,EAEN9Y,KAAKuI,SAGFtT,EAAMqT,OAAS,EAAMtI,KAAKsI,OAAS,GAAOrT,EAAMqT,OAAStI,KAAKsI,MAASrT,EAAMoT,MAAQ,EAAMrI,KAAKqI,MAAQ,GAAO,EAAI,EAFhHrI,KAAKiX,IAAIhiB,GAAO2hB,cAAgB,EAAI,CAGnD,EASAH,EAAc0B,KAAO1B,EAAcmC,QAMnCnC,EAAc5vB,OAAS,WACnB,OAAKmZ,KAAKuI,UAAYvI,KAAK6W,GAAGtB,GACnBA,EACJvV,KAAK+Y,MAAMv2B,IAAI8zB,EAC1B,EAOAG,EAAchB,IAAMgB,EAAc5vB,OAOlC4vB,EAAcj0B,IAAM,SAAaw2B,GACxBrE,EAAOqE,KACRA,EAAS7C,EAAU6C,IAIvB,IAAIC,EAAMjZ,KAAKsI,OAAS,GACpB4Q,EAAkB,MAAZlZ,KAAKsI,KACX6Q,EAAMnZ,KAAKqI,MAAQ,GACnB+Q,EAAiB,MAAXpZ,KAAKqI,IAEXgR,EAAML,EAAO1Q,OAAS,GACtBgR,EAAoB,MAAdN,EAAO1Q,KACbiR,EAAMP,EAAO3Q,MAAQ,GAGrBmR,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAYrC,OAVAD,IADAC,GAAOP,GAHgB,MAAbJ,EAAO3Q,QAIF,GAGfoR,IADAC,GAAOP,EAAMI,KACE,GAGfC,IADAC,GAAOP,EAAMI,KACE,GAEfE,GAAOP,EAAMI,EAENtN,GANP2N,GAAO,QAMiB,IATxBC,GAAO,QAQPH,GAAO,QACoC,IAH3CC,GAAO,OAG+CzZ,KAAKuI,SAC/D,EAOAkO,EAAc/vB,SAAW,SAAkBkzB,GAGvC,OAFKjF,EAAOiF,KACRA,EAAazD,EAAUyD,IACpB5Z,KAAKxd,IAAIo3B,EAAWnE,MAC/B,EAQAgB,EAAcQ,IAAMR,EAAc/vB,SAOlC+vB,EAAcltB,SAAW,SAAkBswB,GACvC,GAAI7Z,KAAK2W,SACL,OAAOxB,EAKX,GAJKR,EAAOkF,KACRA,EAAa1D,EAAU0D,IAGvBtF,EAKA,OAAOxI,EAJGwI,EAAK2B,IAAIlW,KAAKqI,IACLrI,KAAKsI,KACLuR,EAAWxR,IACXwR,EAAWvR,MACTiM,EAAKuF,WAAY9Z,KAAKuI,UAG/C,GAAIsR,EAAWlD,SACX,OAAOxB,EACX,GAAInV,KAAK6W,GAAGtB,GACR,OAAOsE,EAAWhC,QAAUtC,EAAYJ,EAC5C,GAAI0E,EAAWhD,GAAGtB,GACd,OAAOvV,KAAK6X,QAAUtC,EAAYJ,EAEtC,GAAInV,KAAK4W,aACL,OAAIiD,EAAWjD,aACJ5W,KAAKyV,MAAMS,IAAI2D,EAAWpE,OAE1BzV,KAAKyV,MAAMS,IAAI2D,GAAYpE,MACnC,GAAIoE,EAAWjD,aAClB,OAAO5W,KAAKkW,IAAI2D,EAAWpE,OAAOA,MAGtC,GAAIzV,KAAKoY,GAAG/B,IAAewD,EAAWzB,GAAG/B,GACrC,OAAOrO,EAAWhI,KAAK4H,WAAaiS,EAAWjS,WAAY5H,KAAKuI,UAKpE,IAAI0Q,EAAMjZ,KAAKsI,OAAS,GACpB4Q,EAAkB,MAAZlZ,KAAKsI,KACX6Q,EAAMnZ,KAAKqI,MAAQ,GACnB+Q,EAAiB,MAAXpZ,KAAKqI,IAEXgR,EAAMQ,EAAWvR,OAAS,GAC1BgR,EAAwB,MAAlBO,EAAWvR,KACjBiR,EAAMM,EAAWxR,MAAQ,GACzB0R,EAAuB,MAAjBF,EAAWxR,IAEjBmR,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAAGC,EAAM,EAqBrC,OAnBAD,IADAC,GAAOP,EAAMW,KACE,GAGfN,IADAC,GAAOP,EAAMY,KACE,GACfL,GAAO,MAEPD,IADAC,GAAON,EAAMG,KACE,GAGfC,IADAC,GAAOP,EAAMa,KACE,GACfN,GAAO,MAEPD,IADAC,GAAON,EAAMI,KACE,GACfE,GAAO,MAEPD,IADAC,GAAOL,EAAME,KACE,GAEfE,GAAOP,EAAMc,EAAMb,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAE1CtN,GAZP2N,GAAO,QAYiB,IAlBxBC,GAAO,QAiBPH,GAAO,QACoC,IAH3CC,GAAO,OAG+CzZ,KAAKuI,SAC/D,EAQAkO,EAAcP,IAAMO,EAAcltB,SAQlCktB,EAAchtB,OAAS,SAAgBuwB,GAGnC,GAFKrF,EAAOqF,KACRA,EAAU7D,EAAU6D,IACpBA,EAAQrD,SACR,MAAMhU,MAAM,oBAaZ,IAWAsX,EAAQ/C,EAAKgD,EArBjB,GAAI3F,EAIA,OAAKvU,KAAKuI,WACS,aAAfvI,KAAKsI,OACY,IAAjB0R,EAAQ3R,MAAgC,IAAlB2R,EAAQ1R,KAU3ByD,GANI/L,KAAKuI,SAAWgM,EAAK4F,MAAQ5F,EAAK6F,OACzCpa,KAAKqI,IACLrI,KAAKsI,KACL0R,EAAQ3R,IACR2R,EAAQ1R,MAESiM,EAAKuF,WAAY9Z,KAAKuI,UARhCvI,KAWf,GAAIA,KAAK2W,SACL,OAAO3W,KAAKuI,SAAW2M,EAAQC,EAEnC,GAAKnV,KAAKuI,SA6BH,CAKH,GAFKyR,EAAQzR,WACTyR,EAAUA,EAAQK,cAClBL,EAAQxB,GAAGxY,MACX,OAAOkV,EACX,GAAI8E,EAAQxB,GAAGxY,KAAKsa,KAAK,IACrB,OAAO/D,EACX2D,EAAMhF,CACT,KAvCmB,CAGhB,GAAIlV,KAAK6W,GAAGtB,GACR,OAAIyE,EAAQnD,GAAGP,IAAQ0D,EAAQnD,GAAGL,GACvBjB,EACFyE,EAAQnD,GAAGtB,GACTe,GAIP2D,EADeja,KAAKua,IAAI,GACNxD,IAAIiD,GAASQ,IAAI,IACxB3D,GAAG1B,GACH6E,EAAQpD,aAAeN,EAAME,GAEpCU,EAAMlX,KAAKiX,IAAI+C,EAAQ9D,IAAI+D,IAC3BC,EAAMD,EAAOz3B,IAAI00B,EAAIH,IAAIiD,KAI9B,GAAIA,EAAQnD,GAAGtB,GAClB,OAAOvV,KAAKuI,SAAW2M,EAAQC,EACnC,GAAInV,KAAK4W,aACL,OAAIoD,EAAQpD,aACD5W,KAAKyV,MAAMsB,IAAIiD,EAAQvE,OAC3BzV,KAAKyV,MAAMsB,IAAIiD,GAASvE,MAC5B,GAAIuE,EAAQpD,aACf,OAAO5W,KAAK+W,IAAIiD,EAAQvE,OAAOA,MACnCyE,EAAM/E,CACd,CAkBI,IADA+B,EAAMlX,KACCkX,EAAIwB,IAAIsB,IAAU,CAGrBC,EAASn8B,KAAKS,IAAI,EAAGT,KAAKY,MAAMw4B,EAAItP,WAAaoS,EAAQpS,aAWzD,IAPA,IAAIhoB,EAAO9B,KAAK6jB,KAAK7jB,KAAK+B,IAAIo6B,GAAUn8B,KAAK6mB,KACzC8V,EAAS76B,GAAQ,GAAM,EAAIi2B,EAAQ,EAAGj2B,EAAO,IAI7C86B,EAAY1S,EAAWiS,GACvBU,EAAYD,EAAUxE,IAAI8D,GACvBW,EAAU/D,cAAgB+D,EAAUnC,GAAGtB,IAG1CyD,GADAD,EAAY1S,EADZiS,GAAUQ,EACqBza,KAAKuI,WACd2N,IAAI8D,GAK1BU,EAAU/D,WACV+D,EAAYpE,GAEhB4D,EAAMA,EAAI13B,IAAIk4B,GACdxD,EAAMA,EAAID,IAAI0D,EACjB,CACD,OAAOT,CACX,EAQAzD,EAAcM,IAAMN,EAAchtB,OAOlCgtB,EAAcmE,OAAS,SAAgBZ,GAKnC,OAJKrF,EAAOqF,KACRA,EAAU7D,EAAU6D,IAGpBzF,EAOOxI,GANI/L,KAAKuI,SAAWgM,EAAKsG,MAAQtG,EAAKuG,OACzC9a,KAAKqI,IACLrI,KAAKsI,KACL0R,EAAQ3R,IACR2R,EAAQ1R,MAESiM,EAAKuF,WAAY9Z,KAAKuI,UAGxCvI,KAAKiX,IAAIjX,KAAK+W,IAAIiD,GAAS9D,IAAI8D,GAC1C,EAQAvD,EAAc9P,IAAM8P,EAAcmE,OAQlCnE,EAAcS,IAAMT,EAAcmE,OAMlCnE,EAAcsC,IAAM,WAChB,OAAOhN,GAAU/L,KAAKqI,KAAMrI,KAAKsI,KAAMtI,KAAKuI,SAChD,EAOAkO,EAAcsE,IAAM,SAAa9lB,GAG7B,OAFK0f,EAAO1f,KACRA,EAAQkhB,EAAUlhB,IACf8W,EAAS/L,KAAKqI,IAAMpT,EAAMoT,IAAKrI,KAAKsI,KAAOrT,EAAMqT,KAAMtI,KAAKuI,SACvE,EAOAkO,EAAcuE,GAAK,SAAY/lB,GAG3B,OAFK0f,EAAO1f,KACRA,EAAQkhB,EAAUlhB,IACf8W,EAAS/L,KAAKqI,IAAMpT,EAAMoT,IAAKrI,KAAKsI,KAAOrT,EAAMqT,KAAMtI,KAAKuI,SACvE,EAOAkO,EAAcwE,IAAM,SAAahmB,GAG7B,OAFK0f,EAAO1f,KACRA,EAAQkhB,EAAUlhB,IACf8W,EAAS/L,KAAKqI,IAAMpT,EAAMoT,IAAKrI,KAAKsI,KAAOrT,EAAMqT,KAAMtI,KAAKuI,SACvE,EAOAkO,EAAcyE,UAAY,SAAmBC,GAGzC,OAFIxG,EAAOwG,KACPA,EAAUA,EAAQzE,SACE,IAAnByE,GAAW,IACLnb,KACFmb,EAAU,GACRpP,EAAS/L,KAAKqI,KAAO8S,EAAUnb,KAAKsI,MAAQ6S,EAAYnb,KAAKqI,MAAS,GAAK8S,EAAWnb,KAAKuI,UAE3FwD,EAAS,EAAG/L,KAAKqI,KAAQ8S,EAAU,GAAKnb,KAAKuI,SAC5D,EAQAkO,EAAc+D,IAAM/D,EAAcyE,UAOlCzE,EAAc2E,WAAa,SAAoBD,GAG3C,OAFIxG,EAAOwG,KACPA,EAAUA,EAAQzE,SACE,IAAnByE,GAAW,IACLnb,KACFmb,EAAU,GACRpP,EAAU/L,KAAKqI,MAAQ8S,EAAYnb,KAAKsI,MAAS,GAAK6S,EAAWnb,KAAKsI,MAAQ6S,EAASnb,KAAKuI,UAE5FwD,EAAS/L,KAAKsI,MAAS6S,EAAU,GAAKnb,KAAKsI,MAAQ,EAAI,GAAK,EAAGtI,KAAKuI,SACnF,EAQAkO,EAAc8D,IAAM9D,EAAc2E,WAOlC3E,EAAc4E,mBAAqB,SAA4BF,GAI3D,GAHIxG,EAAOwG,KACPA,EAAUA,EAAQzE,SAEN,KADhByE,GAAW,IAEP,OAAOnb,KAEP,IAAIsI,EAAOtI,KAAKsI,KAChB,OAAI6S,EAAU,GAEHpP,EADG/L,KAAKqI,MACU8S,EAAY7S,GAAS,GAAK6S,EAAW7S,IAAS6S,EAASnb,KAAKuI,UAE9EwD,EADY,KAAZoP,EACS7S,EAEAA,IAAU6S,EAAU,GAFd,EAAGnb,KAAKuI,SAI1C,EAQAkO,EAAc6D,KAAO7D,EAAc4E,mBAQnC5E,EAAc6E,MAAQ7E,EAAc4E,mBAMpC5E,EAAc8E,SAAW,WACrB,OAAKvb,KAAKuI,SAEHwD,EAAS/L,KAAKqI,IAAKrI,KAAKsI,MAAM,GAD1BtI,IAEf,EAMAyW,EAAc4D,WAAa,WACvB,OAAIra,KAAKuI,SACEvI,KACJ+L,EAAS/L,KAAKqI,IAAKrI,KAAKsI,MAAM,EACzC,EAOAmO,EAAc+E,QAAU,SAAiB7X,GACrC,OAAOA,EAAK3D,KAAKyb,YAAczb,KAAK0b,WACxC,EAMAjF,EAAcgF,UAAY,WACtB,IAAIlV,EAAKvG,KAAKsI,KACVhC,EAAKtG,KAAKqI,IACd,MAAO,CACS,IAAZ/B,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GACK,IAAZC,EACAA,IAAQ,EAAI,IACZA,IAAO,GAAK,IACZA,IAAO,GAEf,EAMAkQ,EAAciF,UAAY,WACtB,IAAInV,EAAKvG,KAAKsI,KACVhC,EAAKtG,KAAKqI,IACd,MAAO,CACH9B,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EACAD,IAAO,GACPA,IAAO,GAAK,IACZA,IAAQ,EAAI,IACA,IAAZA,EAER,EASA4B,EAAKyT,UAAY,SAAmBhP,EAAOpE,EAAU5E,GACjD,OAAOA,EAAKuE,EAAK0T,YAAYjP,EAAOpE,GAAYL,EAAK2T,YAAYlP,EAAOpE,EAC5E,EAQAL,EAAK0T,YAAc,SAAqBjP,EAAOpE,GAC3C,OAAO,IAAIL,EACPyE,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,GACNA,EAAM,IAAO,EACbA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZpE,EAER,EAQAL,EAAK2T,YAAc,SAAqBlP,EAAOpE,GAC3C,OAAO,IAAIL,EACPyE,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNA,EAAM,IAAM,GACZA,EAAM,IAAM,GACZA,EAAM,IAAO,EACbA,EAAM,GACNpE,SCxyCR,IAAAuT,YAAAC,cAeA,SAASC,mBACP,MAAO,CAAEC,EAAG,EAAGC,EAAG,EAAG78B,EAAG,EAC1B,CAMO,MAAM88B,OAAS,CACpBra,OAAM,CAACuH,EAAiB2D,EAAqBgF,eAAI/E,OAAO7qB,YACpC,IAAdinB,EAAQ4S,GACVjP,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQ4S,GAEhB,IAAd5S,EAAQ6S,GACVlP,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQ6S,GAEhB,IAAd7S,EAAQhqB,GACV2tB,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQhqB,GAE3B2tB,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU2S,mBAChB,KAAO1M,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQ4S,EAAI3M,EAAO9I,QACnB,MACF,KAAK,EACH6C,EAAQ6S,EAAI5M,EAAO9I,QACnB,MACF,KAAK,EACH6C,EAAQhqB,EAAIiwB,EAAO9I,QACnB,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCpBH,SAAS+S,0BACP,MAAO,CACLC,GAAI,GACJlT,UAAM/I,EACNkc,eAAWlc,EACXmc,eAAWnc,EACXoc,eAAWpc,EACXqc,cAAUrc,EACVsc,yBAAqBtc,EACrBuc,gCAA4Bvc,EAC5Bwc,aAASxc,EACTyc,UAAW,GAEf,CAMO,MAAMC,cAAgB,CAC3Bhb,OAAOuH,EAAwB2D,EAAqBgF,eAAI/E,OAAO7qB,UAC1C,KAAfinB,EAAQgT,IACVrP,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQgT,SAEdjc,IAAjBiJ,EAAQF,MACV6D,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQF,WAET/I,IAAtBiJ,EAAQiT,WACVtP,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQiT,gBAETlc,IAAtBiJ,EAAQkT,WACVJ,OAAOra,OAAOuH,EAAQkT,UAAWvP,EAAOgB,OAAO,IAAIc,QAAQC,cAEnC3O,IAAtBiJ,EAAQmT,WACVL,OAAOra,OAAOuH,EAAQmT,UAAWxP,EAAOgB,OAAO,IAAIc,QAAQC,cAEpC3O,IAArBiJ,EAAQoT,UACVN,OAAOra,OAAOuH,EAAQoT,SAAUzP,EAAOgB,OAAO,IAAIc,QAAQC,cAExB3O,IAAhCiJ,EAAQqT,qBACV1P,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQqT,0BAEQtc,IAAvCiJ,EAAQsT,4BACV3P,EAAOgB,OAAO,IAAII,MAAM/E,EAAQsT,iCAEVvc,IAApBiJ,EAAQuT,SACV5P,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQuT,SAEjC,IAAK,MAAMr0B,KAAK8gB,EAAQwT,UACtB7P,EAAOgB,OAAO,IAAIvM,OAAOlZ,GAE3B,OAAOykB,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU+S,0BAChB,KAAO9M,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQgT,GAAK/M,EAAO7N,SACpB,MACF,KAAK,EACH4H,EAAQF,KAAOmG,EAAO7N,SACtB,MACF,KAAK,EACH4H,EAAQiT,UAAYhN,EAAO7N,SAC3B,MACF,KAAK,EACH4H,EAAQkT,UAAYJ,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UACjD,MACF,KAAK,EACH3E,EAAQmT,UAAYL,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UACjD,MACF,KAAK,EACH3E,EAAQoT,SAAWN,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UAChD,MACF,KAAK,EACH3E,EAAQqT,oBAAsBpN,EAAO7N,SACrC,MACF,KAAK,EACH4H,EAAQsT,2BAA6BI,eAAazN,EAAOlB,SACzD,MACF,KAAK,EACH/E,EAAQuT,QAAUtN,EAAOhB,OACzB,MACF,KAAK,GACHjF,EAAQwT,UAAU1a,KAAKmN,EAAO7N,UAC9B,MACF,QACE6N,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GAMH,IAAI2T,aAAkB,MACpB,QAA0B,IAAfA,aAA4B,OAAOA,aAC9C,GAAoB,oBAATlwB,KAAsB,OAAOA,KACxC,GAAsB,oBAAXud,OAAwB,OAAOA,OAC1C,GAAsB,oBAAXJ,OAAwB,OAAOA,OAC1C,KAAM,gCACP,EANqB,GAQtB,SAAS8S,eAAazI,GACpB,GAAIA,EAAKkE,GAAG9N,OAAOuS,kBACjB,MAAM,IAAID,aAAWra,MAAM,gDAE7B,OAAO2R,EAAK1M,UACd,CAEIoK,eAAIrK,KAAKO,OAASA,cACpB8J,eAAIrK,KAAKO,KAAOA,YAChB8J,eAAIP,aCxJC,MAAMkB,eAAe,KAKfuK,kBAA4C,CACvDrK,UAAUr1B,EAAsBs1B,GAC9B,MAAM9F,EAAS8P,cAAchb,OAAOtkB,GAC9BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHwN,cAAcra,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEtD7wB,OAAM,IAEG06B,cAAcra,OAAO,IAAIiB,aCLpC,SAASyZ,wBACP,MAAO,CAAE96B,OAAG+d,EAAW9d,OAAG8d,EAAW7d,OAAG6d,EAC1C,CAMO,MAAMgd,YAAc,CACzBtb,OAAM,CAACuH,EAAsB2D,EAAqBgF,eAAI/E,OAAO7qB,iBACzCge,IAAdiJ,EAAQhnB,GACV2qB,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQhnB,QAEd+d,IAAdiJ,EAAQ/mB,GACV0qB,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQ/mB,QAEf8d,IAAdiJ,EAAQ9mB,GACVyqB,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQ9mB,GAE1ByqB,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU8T,wBAChB,KAAO7N,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQhnB,EAAIitB,EAAOhB,OACnB,MACF,KAAK,EACHjF,EAAQ/mB,EAAIgtB,EAAOhB,OACnB,MACF,KAAK,EACHjF,EAAQ9mB,EAAI+sB,EAAOhB,OACnB,MACF,QACEgB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCvDUsJ,eAAe,KAKf0K,gBAAwC,CACnDxK,UAAUr1B,EAAoBs1B,GAC5B,MAAM9F,EAASoQ,YAAYtb,OAAOtkB,GAC5BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH8N,YAAY3a,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEpD7wB,OAAM,IAEGg7B,YAAY3a,OAAO,IAAIiB,aCJlC,SAAS4Z,uBACP,MAAO,CAAEC,oBAAgBnd,EAAWod,sBAAkBpd,EAAWqd,aAASrd,EAAWsd,IAAK,GAC5F,CAMO,MAAMC,WAAa,CACxB7b,OAAOuH,EAAqB2D,EAAqBgF,eAAI/E,OAAO7qB,eAC3Bge,IAA3BiJ,EAAQkU,gBACVvQ,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQkU,qBAECnd,IAA7BiJ,EAAQmU,kBACVxQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQmU,uBAETpd,IAApBiJ,EAAQoU,SACVzQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQoU,SAEjCzQ,EAAOgB,OAAO,IAAIc,OAClB,IAAK,MAAMvmB,KAAK8gB,EAAQqU,IACtB1Q,EAAOxG,MAAMje,GAGf,OADAykB,EAAO+B,SACA/B,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUiU,uBAChB,KAAOhO,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQkU,eAAiBjO,EAAOhB,OAChC,MACF,KAAK,EACHjF,EAAQmU,iBAAmBlO,EAAOhB,OAClC,MACF,KAAK,EACHjF,EAAQoU,QAAUnO,EAAOhB,OACzB,MACF,KAAK,EACH,GAAkB,IAAP,EAAN6D,GAAgB,CACnB,MAAMiC,EAAO9E,EAAOtB,SAAWsB,EAAOvL,IACtC,KAAOuL,EAAOvL,IAAMqQ,GAClB/K,EAAQqU,IAAIvb,KAAKmN,EAAO9I,QAE3B,MACC6C,EAAQqU,IAAIvb,KAAKmN,EAAO9I,SAE1B,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCvEUsJ,eAAe,KAKfiL,eAAsC,CACjD/K,UAAUr1B,EAAmBs1B,GAC3B,MAAM9F,EAAS2Q,WAAW7b,OAAOtkB,GAC3BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHqO,WAAWlb,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEnD7wB,OAAM,IAEGu7B,WAAWlb,OAAO,IAAIiB,aCTjC,SAASma,yBACP,MAAO,CAAEC,KAAM,EACjB,CAMO,MAAMC,aAAe,CAC1Bjc,OAAM,CAACuH,EAAuB2D,EAAqBgF,eAAI/E,OAAO7qB,YACvC,IAAjBinB,EAAQyU,MACV9Q,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQyU,MAE1B9Q,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUwU,yBAChB,KAAOvO,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,GAAQmE,IAAQ,GACT,EACH9I,EAAQyU,KAAOxO,EAAOrB,aAGtBqB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GCvCUsJ,eAAe,KAKfqL,iBAA0C,CACrDnL,UAAUr1B,EAAqBs1B,GAC7B,MAAM9F,EAAS+Q,aAAajc,OAAOtkB,GAC7BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHyO,aAAatb,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAErD7wB,OAAM,IAEG27B,aAAatb,OAAO,IAAIiB,aCPnC,SAASua,6BACP,MAAO,CAAEjK,UAAM5T,EAAW0d,KAAM,EAClC,CAMO,MAAMI,iBAAmB,CAC9Bpc,OAAM,CAACuH,EAA2B2D,EAAqBgF,eAAI/E,OAAO7qB,iBAC3Cge,IAAjBiJ,EAAQ2K,MACVnyB,QAAQigB,OAAOuH,EAAQ2K,KAAMhH,EAAOgB,OAAO,IAAIc,QAAQC,SAEpC,IAAjB1F,EAAQyU,MACV9Q,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQyU,MAE3B9Q,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU4U,6BAChB,KAAO3O,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQ2K,KAAOnyB,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC7C,MACF,KAAK,EACH3E,EAAQyU,KAAOxO,EAAOrB,QACtB,MACF,QACEqB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GC/CUsJ,eAAe,KAKfwL,qBAAkD,CAC7DtL,UAAUr1B,EAAyBs1B,GACjC,MAAM9F,EAASkR,iBAAiBpc,OAAOtkB,GACjCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH4O,iBAAiBzb,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEzD7wB,OAAM,IAEG87B,iBAAiBzb,OAAO,IAAIiB,aCDvC,SAAS0a,4BACP,MAAO,CACLb,oBAAgBnd,EAChBod,sBAAkBpd,EAClBqd,aAASrd,EACTie,eAAWje,EACXke,kBAAcle,EAElB,CAMO,MAAMme,gBAAkB,CAC7Bzc,OAAM,CAACuH,EAA0B2D,EAAqBgF,eAAI/E,OAAO7qB,iBAChCge,IAA3BiJ,EAAQkU,gBACVvQ,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQkU,qBAECnd,IAA7BiJ,EAAQmU,kBACVxQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQmU,uBAETpd,IAApBiJ,EAAQoU,SACVzQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQoU,cAEPrd,IAAtBiJ,EAAQgV,WACVrR,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQgV,gBAELje,IAAzBiJ,EAAQiV,cACVtR,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQiV,cAE3BtR,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU+U,4BAChB,KAAO9O,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQkU,eAAiBjO,EAAOhB,OAChC,MACF,KAAK,EACHjF,EAAQmU,iBAAmBlO,EAAOhB,OAClC,MACF,KAAK,EACHjF,EAAQoU,QAAUnO,EAAOhB,OACzB,MACF,KAAK,EACHjF,EAAQgV,UAAY/O,EAAO9I,QAC3B,MACF,KAAK,EACH6C,EAAQiV,aAAehP,EAAO9I,QAC9B,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GC7EUsJ,eAAe,KAKf6L,oBAAgD,CAC3D3L,UAAUr1B,EAAwBs1B,GAChC,MAAM9F,EAASuR,gBAAgBzc,OAAOtkB,GAChCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHiP,gBAAgB9b,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAExD7wB,OAAM,IAEGm8B,gBAAgB9b,OAAO,IAAIiB,aCJtC,SAAS+a,wBACP,MAAO,CAAElB,oBAAgBnd,EAAWod,sBAAkBpd,EAAWqd,aAASrd,EAAW4I,IAAK,GAC5F,CAMO,MAAM0V,YAAc,CACzB5c,OAAM,CAACuH,EAAsB2D,EAAqBgF,eAAI/E,OAAO7qB,iBAC5Bge,IAA3BiJ,EAAQkU,gBACVvQ,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQkU,qBAECnd,IAA7BiJ,EAAQmU,kBACVxQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQmU,uBAETpd,IAApBiJ,EAAQoU,SACVzQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQoU,SAEb,KAAhBpU,EAAQL,KACVgE,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQL,KAE5BgE,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUoV,wBAChB,KAAOnP,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQkU,eAAiBjO,EAAOhB,OAChC,MACF,KAAK,EACHjF,EAAQmU,iBAAmBlO,EAAOhB,OAClC,MACF,KAAK,EACHjF,EAAQoU,QAAUnO,EAAOhB,OACzB,MACF,KAAK,EACHjF,EAAQL,IAAMsG,EAAO7N,SACrB,MACF,QACE6N,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GC9DUsJ,eAAe,KAKfgM,gBAAwC,CACnD9L,UAAUr1B,EAAoBs1B,GAC5B,MAAM9F,EAAS0R,YAAY5c,OAAOtkB,GAC5BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHoP,YAAYjc,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEpD7wB,OAAM,IAEGs8B,YAAYjc,OAAO,IAAIiB,aCblC,IAAkBkb,gBAQAC,WAOAC,iBAoDlB,SAASC,uBACP,MAAO,CACLC,aAAS5e,EACT6e,eAAW7e,EACX8e,iBAAa9e,EACb+e,kBAAc/e,EACdgf,qBAAiBhf,EACjBif,iBAAajf,EACbkf,iBAAalf,EACbmf,mBAAenf,EACfof,uBAAmBpf,EACnBqf,sBAAkBrf,EAClBsf,cAAUtf,EACVuf,eAAWvf,EACXwf,gBAAYxf,EACZyf,uBAAmBzf,EACnB0f,uBAAmB1f,EACnB2f,qBAAiB3f,EAErB,EAtFA,SAAkBwe,GAChBA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAND,CAAkBA,kBAAAA,gBAMjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CALD,CAAkBA,aAAAA,WAKjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAPD,CAAkBA,mBAAAA,iBAOjB,CAAA,IAsEM,MAAMkB,WAAa,CACxBle,OAAM,CAACuH,EAAqB2D,EAAqBgF,eAAI/E,OAAO7qB,iBAClCge,IAApBiJ,EAAQ2V,SACViB,mBAAmBne,OAAOuH,EAAQ2V,QAAShS,EAAOgB,OAAO,IAAIc,QAAQC,cAE7C3O,IAAtBiJ,EAAQ4V,WACVjS,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQ4V,gBAEN7e,IAAxBiJ,EAAQ6V,aACVlS,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQ6V,kBAEJ9e,IAAzBiJ,EAAQ8V,cACVc,mBAAmBne,OAAOuH,EAAQ8V,aAAcnS,EAAOgB,OAAO,IAAIc,QAAQC,cAE5C3O,IAA5BiJ,EAAQ+V,iBACVa,mBAAmBne,OAAOuH,EAAQ+V,gBAAiBpS,EAAOgB,OAAO,IAAIc,QAAQC,cAEnD3O,IAAxBiJ,EAAQgW,aACVY,mBAAmBne,OAAOuH,EAAQgW,YAAarS,EAAOgB,OAAO,IAAIc,QAAQC,cAE/C3O,IAAxBiJ,EAAQiW,aACVnD,OAAOra,OAAOuH,EAAQiW,YAAatS,EAAOgB,OAAO,IAAIc,QAAQC,cAEjC3O,IAA1BiJ,EAAQkW,eACVpD,OAAOra,OAAOuH,EAAQkW,cAAevS,EAAOgB,OAAO,IAAIc,QAAQC,cAE/B3O,IAA9BiJ,EAAQmW,mBACVrD,OAAOra,OAAOuH,EAAQmW,kBAAmBxS,EAAOgB,OAAO,IAAIc,QAAQC,cAEpC3O,IAA7BiJ,EAAQoW,kBACVzS,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQoW,uBAETrf,IAArBiJ,EAAQqW,UACV1S,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQqW,eAERtf,IAAtBiJ,EAAQsW,WACV3S,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQsW,gBAERvf,IAAvBiJ,EAAQuW,YACV5S,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQuW,iBAEDxf,IAA9BiJ,EAAQwW,mBACV7S,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQwW,wBAEDzf,IAA9BiJ,EAAQyW,mBACV9S,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQyW,wBAEH1f,IAA5BiJ,EAAQ0W,iBACV/S,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ0W,iBAE5B/S,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU0V,uBAChB,KAAOzP,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQ2V,QAAUiB,mBAAmBxd,OAAO6M,EAAQA,EAAOtB,UAC3D,MACF,KAAK,EACH3E,EAAQ4V,UAAY3P,EAAO9I,QAC3B,MACF,KAAK,EACH6C,EAAQ6V,YAAc5P,EAAOhB,OAC7B,MACF,KAAK,EACHjF,EAAQ8V,aAAec,mBAAmBxd,OAAO6M,EAAQA,EAAOtB,UAChE,MACF,KAAK,EACH3E,EAAQ+V,gBAAkBa,mBAAmBxd,OAAO6M,EAAQA,EAAOtB,UACnE,MACF,KAAK,EACH3E,EAAQgW,YAAcY,mBAAmBxd,OAAO6M,EAAQA,EAAOtB,UAC/D,MACF,KAAK,EACH3E,EAAQiW,YAAcnD,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UACnD,MACF,KAAK,EACH3E,EAAQkW,cAAgBpD,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UACrD,MACF,KAAK,EACH3E,EAAQmW,kBAAoBrD,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UACzD,MACF,KAAK,GACH3E,EAAQoW,iBAAmBnQ,EAAOrB,QAClC,MACF,KAAK,GACH5E,EAAQqW,SAAWpQ,EAAO9I,QAC1B,MACF,KAAK,GACH6C,EAAQsW,UAAYrQ,EAAO9I,QAC3B,MACF,KAAK,GACH6C,EAAQuW,WAAatQ,EAAO9I,QAC5B,MACF,KAAK,GACH6C,EAAQwW,kBAAoBvQ,EAAO9I,QACnC,MACF,KAAK,GACH6C,EAAQyW,kBAAoBxQ,EAAO9I,QACnC,MACF,KAAK,GACH6C,EAAQ0W,gBAAkBzQ,EAAO9I,QACjC,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GAGH,SAAS6W,+BACP,MAAO,CAAElX,IAAK,GAAImX,cAAU/f,EAAWggB,gBAAYhgB,EACrD,CAMO,MAAM6f,mBAAqB,CAChCne,OAAM,CAACuH,EAA6B2D,EAAqBgF,eAAI/E,OAAO7qB,YAC9C,KAAhBinB,EAAQL,KACVgE,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQL,UAEV5I,IAArBiJ,EAAQ8W,UACVnT,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ8W,eAEP/f,IAAvBiJ,EAAQ+W,YACVpT,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ+W,YAE3BpT,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU6W,+BAChB,KAAO5Q,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQL,IAAMsG,EAAO7N,SACrB,MACF,KAAK,EACH4H,EAAQ8W,SAAW7Q,EAAOrB,QAC1B,MACF,KAAK,EACH5E,EAAQ+W,WAAa9Q,EAAOrB,QAC5B,MACF,QACEqB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GChQUsJ,eAAe,KAKf0N,eAAsC,CACjDxN,UAAUr1B,EAAmBs1B,GAC3B,MAAM9F,EAASgT,WAAWle,OAAOtkB,GAC3BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH0Q,WAAWvd,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEnD7wB,OAAM,IAEG49B,WAAWvd,OAAO,IAAIiB,aCdjC,IAAkB4c,cA6BlB,SAASC,2BACP,MAAO,CAAEC,mBAAepgB,EAAWqgB,SAAKrgB,EAAWsgB,YAAQtgB,EAAWugB,cAAUvgB,EAAWlV,WAAOkV,EACpG,EA/BA,SAAkBkgB,GAChBA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CALD,CAAkBA,gBAAAA,cAKjB,CAAA,IAgCM,MAAMM,eAAiB,CAC5B9e,OAAM,CAACuH,EAAyB2D,EAAqBgF,eAAI/E,OAAO7qB,iBAChCge,IAA1BiJ,EAAQmX,eACVxT,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQmX,oBAEbpgB,IAAhBiJ,EAAQoX,KACVI,uBAAuB/e,OAAOuH,EAAQoX,IAAKzT,EAAOgB,OAAO,IAAIc,QAAQC,cAEhD3O,IAAnBiJ,EAAQqX,QACVI,0BAA0Bhf,OAAOuH,EAAQqX,OAAQ1T,EAAOgB,OAAO,IAAIc,QAAQC,cAEpD3O,IAArBiJ,EAAQsX,UACVI,4BAA4Bjf,OAAOuH,EAAQsX,SAAU3T,EAAOgB,OAAO,IAAIc,QAAQC,cAE3D3O,IAAlBiJ,EAAQne,OACV81B,yBAAyBlf,OAAOuH,EAAQne,MAAO8hB,EAAOgB,OAAO,IAAIc,QAAQC,SAEpE/B,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUkX,2BAChB,KAAOjR,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQmX,cAAgBlR,EAAOrB,QAC/B,MACF,KAAK,EACH5E,EAAQoX,IAAMI,uBAAuBpe,OAAO6M,EAAQA,EAAOtB,UAC3D,MACF,KAAK,EACH3E,EAAQqX,OAASI,0BAA0Bre,OAAO6M,EAAQA,EAAOtB,UACjE,MACF,KAAK,EACH3E,EAAQsX,SAAWI,4BAA4Bte,OAAO6M,EAAQA,EAAOtB,UACrE,MACF,KAAK,EACH3E,EAAQne,MAAQ81B,yBAAyBve,OAAO6M,EAAQA,EAAOtB,UAC/D,MACF,QACEsB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GAGH,SAAS4X,mCACP,MAAO,EACT,CAMO,MAAMJ,uBAAyB,CACpC/e,OAAM,CAACof,EAA2BlU,EAAqBgF,eAAI/E,OAAO7qB,WACzD4qB,EAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU4X,mCAChB,KAAO3R,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SAGfsB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GAGH,SAAS8X,wCACP,MAAO,CAAE9C,eAAWje,EAAWke,kBAAcle,EAC/C,CAMO,MAAM2gB,4BAA8B,CACzCjf,OAAM,CAACuH,EAAsC2D,EAAqBgF,eAAI/E,OAAO7qB,iBACjDge,IAAtBiJ,EAAQgV,WACVrR,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQgV,gBAELje,IAAzBiJ,EAAQiV,cACVtR,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQiV,cAE3BtR,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU8X,wCAChB,KAAO7R,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQgV,UAAY/O,EAAO9I,QAC3B,MACF,KAAK,EACH6C,EAAQiV,aAAehP,EAAO9I,QAC9B,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GAGH,SAAS+X,qCACP,MAAO,EACT,CAMO,MAAMJ,yBAA2B,CACtClf,OAAM,CAACof,EAA6BlU,EAAqBgF,eAAI/E,OAAO7qB,WAC3D4qB,EAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU+X,qCAChB,KAAO9R,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SAGfsB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GAGH,SAASgY,sCACP,MAAO,EACT,CAMO,MAAMP,0BAA4B,CACvChf,OAAM,CAACof,EAA8BlU,EAAqBgF,eAAI/E,OAAO7qB,WAC5D4qB,EAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUgY,sCAChB,KAAO/R,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SAGfsB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GCvNUsJ,eAAe,KAKf2O,mBAA8C,CACzDzO,UAAUr1B,EAAuBs1B,GAC/B,MAAM9F,EAAS4T,eAAe9e,OAAOtkB,GAC/BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHsR,eAAene,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEvD7wB,OAAM,IAEGw+B,eAAene,OAAO,IAAIiB,aCUrC,SAAS6d,2BACP,MAAO,CAAEd,SAAKrgB,EAAWsgB,YAAQtgB,EAAWugB,cAAUvgB,EAAWlV,WAAOkV,EAC1E,CAMO,MAAMohB,eAAiB,CAC5B1f,OAAM,CAACuH,EAAyB2D,EAAqBgF,eAAI/E,OAAO7qB,iBAC1Cge,IAAhBiJ,EAAQoX,KACVgB,uBAAuB3f,OAAOuH,EAAQoX,IAAKzT,EAAOgB,OAAO,IAAIc,QAAQC,cAEhD3O,IAAnBiJ,EAAQqX,QACVgB,0BAA0B5f,OAAOuH,EAAQqX,OAAQ1T,EAAOgB,OAAO,IAAIc,QAAQC,cAEpD3O,IAArBiJ,EAAQsX,UACVgB,4BAA4B7f,OAAOuH,EAAQsX,SAAU3T,EAAOgB,OAAO,IAAIc,QAAQC,cAE3D3O,IAAlBiJ,EAAQne,OACV02B,yBAAyB9f,OAAOuH,EAAQne,MAAO8hB,EAAOgB,OAAO,IAAIc,QAAQC,SAEpE/B,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUkY,2BAChB,KAAOjS,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQoX,IAAMgB,uBAAuBhf,OAAO6M,EAAQA,EAAOtB,UAC3D,MACF,KAAK,EACH3E,EAAQqX,OAASgB,0BAA0Bjf,OAAO6M,EAAQA,EAAOtB,UACjE,MACF,KAAK,EACH3E,EAAQsX,SAAWgB,4BAA4Blf,OAAO6M,EAAQA,EAAOtB,UACrE,MACF,KAAK,EACH3E,EAAQne,MAAQ02B,yBAAyBnf,OAAO6M,EAAQA,EAAOtB,UAC/D,MACF,QACEsB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GAGH,SAASwY,mCACP,MAAO,CAAEnE,IAAK,GAChB,CAMO,MAAM+D,uBAAyB,CACpC3f,OAAOuH,EAAiC2D,EAAqBgF,eAAI/E,OAAO7qB,UACtE4qB,EAAOgB,OAAO,IAAIc,OAClB,IAAK,MAAMvmB,KAAK8gB,EAAQqU,IACtB1Q,EAAOxG,MAAMje,GAGf,OADAykB,EAAO+B,SACA/B,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUwY,mCAChB,KAAOvS,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,GAAQmE,IAAQ,GACT,EACH,GAAkB,IAAP,EAANA,GAAgB,CACnB,MAAMiC,EAAO9E,EAAOtB,SAAWsB,EAAOvL,IACtC,KAAOuL,EAAOvL,IAAMqQ,GAClB/K,EAAQqU,IAAIvb,KAAKmN,EAAO9I,QAE3B,MACC6C,EAAQqU,IAAIvb,KAAKmN,EAAO9I,cAI1B8I,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GAGH,SAASyY,wCACP,MAAO,CAAEzD,eAAWje,EAAWke,kBAAcle,EAC/C,CAMO,MAAMuhB,4BAA8B,CACzC7f,OAAM,CAACuH,EAAsC2D,EAAqBgF,eAAI/E,OAAO7qB,iBACjDge,IAAtBiJ,EAAQgV,WACVrR,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQgV,gBAELje,IAAzBiJ,EAAQiV,cACVtR,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQiV,cAE3BtR,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUyY,wCAChB,KAAOxS,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQgV,UAAY/O,EAAO9I,QAC3B,MACF,KAAK,EACH6C,EAAQiV,aAAehP,EAAO9I,QAC9B,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GAGH,SAAS0Y,qCACP,MAAO,CAAErE,IAAK,GAChB,CAMO,MAAMkE,yBAA2B,CACtC9f,OAAOuH,EAAmC2D,EAAqBgF,eAAI/E,OAAO7qB,UACxE4qB,EAAOgB,OAAO,IAAIc,OAClB,IAAK,MAAMvmB,KAAK8gB,EAAQqU,IACtB1Q,EAAOxG,MAAMje,GAGf,OADAykB,EAAO+B,SACA/B,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU0Y,qCAChB,KAAOzS,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,GAAQmE,IAAQ,GACT,EACH,GAAkB,IAAP,EAANA,GAAgB,CACnB,MAAMiC,EAAO9E,EAAOtB,SAAWsB,EAAOvL,IACtC,KAAOuL,EAAOvL,IAAMqQ,GAClB/K,EAAQqU,IAAIvb,KAAKmN,EAAO9I,QAE3B,MACC6C,EAAQqU,IAAIvb,KAAKmN,EAAO9I,cAI1B8I,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GAGH,SAAS2Y,sCACP,MAAO,EACT,CAMO,MAAMN,0BAA4B,CACvC5f,OAAM,CAACof,EAA8BlU,EAAqBgF,eAAI/E,OAAO7qB,WAC5D4qB,EAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU2Y,sCAChB,KAAO1S,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SAGfsB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GC1OUsJ,eAAe,KAKfsP,mBAA8C,CACzDpP,UAAUr1B,EAAuBs1B,GAC/B,MAAM9F,EAASwU,eAAe1f,OAAOtkB,GAC/BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHkS,eAAe/e,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEvD7wB,OAAM,IAEGo/B,eAAe/e,OAAO,IAAIiB,aCArC,SAASwe,uBACP,MAAO,CACL3E,oBAAgBnd,EAChBod,sBAAkBpd,EAClBqd,aAASrd,EACT4I,IAAK,GACLmZ,aAAS/hB,EACTgiB,WAAOhiB,EACPiiB,WAAOjiB,EAEX,CAMO,MAAMkiB,WAAa,CACxBxgB,OAAM,CAACuH,EAAqB2D,EAAqBgF,eAAI/E,OAAO7qB,iBAC3Bge,IAA3BiJ,EAAQkU,gBACVvQ,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQkU,qBAECnd,IAA7BiJ,EAAQmU,kBACVxQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQmU,uBAETpd,IAApBiJ,EAAQoU,SACVzQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQoU,SAEb,KAAhBpU,EAAQL,KACVgE,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQL,UAEX5I,IAApBiJ,EAAQ8Y,SACVnV,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQ8Y,cAEb/hB,IAAlBiJ,EAAQ+Y,OACVpV,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ+Y,YAEZhiB,IAAlBiJ,EAAQgZ,OACVlG,OAAOra,OAAOuH,EAAQgZ,MAAOrV,EAAOgB,OAAO,IAAIc,QAAQC,SAElD/B,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU6Y,uBAChB,KAAO5S,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQkU,eAAiBjO,EAAOhB,OAChC,MACF,KAAK,EACHjF,EAAQmU,iBAAmBlO,EAAOhB,OAClC,MACF,KAAK,EACHjF,EAAQoU,QAAUnO,EAAOhB,OACzB,MACF,KAAK,EACHjF,EAAQL,IAAMsG,EAAO7N,SACrB,MACF,KAAK,EACH4H,EAAQ8Y,QAAU7S,EAAO7N,SACzB,MACF,KAAK,EACH4H,EAAQ+Y,MAAQ9S,EAAOrB,QACvB,MACF,KAAK,EACH5E,EAAQgZ,MAAQlG,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UAC7C,MACF,QACEsB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GC5FUsJ,eAAe,KAKf4P,eAAsC,CACjD1P,UAAUr1B,EAAmBs1B,GAC3B,MAAM9F,EAASsV,WAAWxgB,OAAOtkB,GAC3BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHgT,WAAW7f,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEnD7wB,OAAM,IAEGkgC,WAAW7f,OAAO,IAAIiB,aCFjC,SAAS8e,4BACP,MAAO,CAAEC,YAAQriB,EAAWsiB,eAAWtiB,EAAWuiB,iBAAaviB,EAAWwiB,kBAAcxiB,EAC1F,CAMO,MAAMyiB,gBAAkB,CAC7B/gB,OAAM,CAACuH,EAA0B2D,EAAqBgF,eAAI/E,OAAO7qB,iBACxCge,IAAnBiJ,EAAQoZ,QACVzV,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQoZ,aAEPriB,IAAtBiJ,EAAQqZ,WACV1V,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQqZ,gBAEPtiB,IAAxBiJ,EAAQsZ,aACV3V,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQsZ,kBAELviB,IAAzBiJ,EAAQuZ,cACV5V,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQuZ,cAE1B5V,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUmZ,4BAChB,KAAOlT,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQoZ,OAASnT,EAAOrB,QACxB,MACF,KAAK,EACH5E,EAAQqZ,UAAYpT,EAAO7N,SAC3B,MACF,KAAK,EACH4H,EAAQsZ,YAAcrT,EAAO9I,QAC7B,MACF,KAAK,EACH6C,EAAQuZ,aAAetT,EAAOhB,OAC9B,MACF,QACEgB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GChEUsJ,eAAe,KAKfmQ,oBAAgD,CAC3DjQ,UAAUr1B,EAAwBs1B,GAChC,MAAM9F,EAAS6V,gBAAgB/gB,OAAOtkB,GAChCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHuT,gBAAgBpgB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAExD7wB,OAAM,IAEGygC,gBAAgBpgB,OAAO,IAAIiB,aCDtC,SAASqf,kCACP,MAAO,CACLN,OAAQ,EACRO,SAAU,GACVl4B,YAAQsV,EACRzT,eAAWyT,EACXpV,WAAOoV,EACPhZ,YAAQgZ,EACRtX,SAAU,EACVm6B,UAAW,EAEf,CAMO,MAAMC,sBAAwB,CACnCphB,OAAM,CAACuH,EAAgC2D,EAAqBgF,eAAI/E,OAAO7qB,YAC9C,IAAnBinB,EAAQoZ,QACVzV,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQoZ,QAET,KAArBpZ,EAAQ2Z,UACVhW,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQ2Z,eAEZ5iB,IAAnBiJ,EAAQve,QACVjJ,QAAQigB,OAAOuH,EAAQve,OAAQkiB,EAAOgB,OAAO,IAAIc,QAAQC,cAEjC3O,IAAtBiJ,EAAQ1c,WACV9K,QAAQigB,OAAOuH,EAAQ1c,UAAWqgB,EAAOgB,OAAO,IAAIc,QAAQC,cAExC3O,IAAlBiJ,EAAQre,OACVnJ,QAAQigB,OAAOuH,EAAQre,MAAOgiB,EAAOgB,OAAO,IAAIc,QAAQC,cAEnC3O,IAAnBiJ,EAAQjiB,QACVvF,QAAQigB,OAAOuH,EAAQjiB,OAAQ4lB,EAAOgB,OAAO,IAAIc,QAAQC,SAElC,IAArB1F,EAAQvgB,UACVkkB,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQvgB,UAER,IAAtBugB,EAAQ4Z,WACVjW,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ4Z,WAE3BjW,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU0Z,kCAChB,KAAOzT,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQoZ,OAASnT,EAAOrB,QACxB,MACF,KAAK,EACH5E,EAAQ2Z,SAAW1T,EAAO7N,SAC1B,MACF,KAAK,EACH4H,EAAQve,OAASjJ,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC/C,MACF,KAAK,EACH3E,EAAQ1c,UAAY9K,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAClD,MACF,KAAK,EACH3E,EAAQre,MAAQnJ,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC9C,MACF,KAAK,EACH3E,EAAQjiB,OAASvF,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC/C,MACF,KAAK,EACH3E,EAAQvgB,SAAWwmB,EAAO9I,QAC1B,MACF,KAAK,EACH6C,EAAQ4Z,UAAY3T,EAAOrB,QAC3B,MACF,QACEqB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GClGUsJ,eAAe,KAKfwQ,0BAA4D,CACvEtQ,UAAUr1B,EAA8Bs1B,GACtC,MAAM9F,EAASkW,sBAAsBphB,OAAOtkB,GACtCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH4T,sBAAsBzgB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAE9D7wB,OAAM,IAEG8gC,sBAAsBzgB,OAAO,IAAIiB,aCF5C,SAAS0f,0BACP,MAAO,CAAEX,YAAQriB,EAAWsiB,eAAWtiB,EAAWuiB,iBAAaviB,EAAWwiB,kBAAcxiB,EAC1F,CAMO,MAAMijB,cAAgB,CAC3BvhB,OAAM,CAACuH,EAAwB2D,EAAqBgF,eAAI/E,OAAO7qB,iBACtCge,IAAnBiJ,EAAQoZ,QACVzV,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQoZ,aAEPriB,IAAtBiJ,EAAQqZ,WACV1V,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQqZ,gBAEPtiB,IAAxBiJ,EAAQsZ,aACV3V,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQsZ,kBAELviB,IAAzBiJ,EAAQuZ,cACV5V,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQuZ,cAE1B5V,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU+Z,0BAChB,KAAO9T,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQoZ,OAASnT,EAAOrB,QACxB,MACF,KAAK,EACH5E,EAAQqZ,UAAYpT,EAAO7N,SAC3B,MACF,KAAK,EACH4H,EAAQsZ,YAAcrT,EAAO9I,QAC7B,MACF,KAAK,EACH6C,EAAQuZ,aAAetT,EAAOhB,OAC9B,MACF,QACEgB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GChEUsJ,eAAe,KAKf2Q,kBAA4C,CACvDzQ,UAAUr1B,EAAsBs1B,GAC9B,MAAM9F,EAASqW,cAAcvhB,OAAOtkB,GAC9BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH+T,cAAc5gB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEtD7wB,OAAM,IAEGihC,cAAc5gB,OAAO,IAAIiB,aCDpC,SAAS6f,gCACP,MAAO,CACLd,OAAQ,EACRO,SAAU,GACVl4B,YAAQsV,EACRzT,eAAWyT,EACXpV,WAAOoV,EACPhZ,YAAQgZ,EACRtX,SAAU,EACVm6B,UAAW,EAEf,CAMO,MAAMO,oBAAsB,CACjC1hB,OAAM,CAACuH,EAA8B2D,EAAqBgF,eAAI/E,OAAO7qB,YAC5C,IAAnBinB,EAAQoZ,QACVzV,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQoZ,QAET,KAArBpZ,EAAQ2Z,UACVhW,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQ2Z,eAEZ5iB,IAAnBiJ,EAAQve,QACVjJ,QAAQigB,OAAOuH,EAAQve,OAAQkiB,EAAOgB,OAAO,IAAIc,QAAQC,cAEjC3O,IAAtBiJ,EAAQ1c,WACV9K,QAAQigB,OAAOuH,EAAQ1c,UAAWqgB,EAAOgB,OAAO,IAAIc,QAAQC,cAExC3O,IAAlBiJ,EAAQre,OACVnJ,QAAQigB,OAAOuH,EAAQre,MAAOgiB,EAAOgB,OAAO,IAAIc,QAAQC,cAEnC3O,IAAnBiJ,EAAQjiB,QACVvF,QAAQigB,OAAOuH,EAAQjiB,OAAQ4lB,EAAOgB,OAAO,IAAIc,QAAQC,SAElC,IAArB1F,EAAQvgB,UACVkkB,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQvgB,UAER,IAAtBugB,EAAQ4Z,WACVjW,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ4Z,WAE3BjW,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUka,gCAChB,KAAOjU,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQoZ,OAASnT,EAAOrB,QACxB,MACF,KAAK,EACH5E,EAAQ2Z,SAAW1T,EAAO7N,SAC1B,MACF,KAAK,EACH4H,EAAQve,OAASjJ,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC/C,MACF,KAAK,EACH3E,EAAQ1c,UAAY9K,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAClD,MACF,KAAK,EACH3E,EAAQre,MAAQnJ,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC9C,MACF,KAAK,EACH3E,EAAQjiB,OAASvF,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC/C,MACF,KAAK,EACH3E,EAAQvgB,SAAWwmB,EAAO9I,QAC1B,MACF,KAAK,EACH6C,EAAQ4Z,UAAY3T,EAAOrB,QAC3B,MACF,QACEqB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GClGUsJ,eAAe,KAKf8Q,wBAAwD,CACnE5Q,UAAUr1B,EAA4Bs1B,GACpC,MAAM9F,EAASwW,oBAAoB1hB,OAAOtkB,GACpCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHkU,oBAAoB/gB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAE5D7wB,OAAM,IAEGohC,oBAAoB/gB,OAAO,IAAIiB,aCJ1C,SAASggB,yBACP,MAAO,CAAEnG,oBAAgBnd,EAAWod,sBAAkBpd,EAAWqd,aAASrd,EAAWsd,IAAK,GAC5F,CAMO,MAAMiG,aAAe,CAC1B7hB,OAAOuH,EAAuB2D,EAAqBgF,eAAI/E,OAAO7qB,eAC7Bge,IAA3BiJ,EAAQkU,gBACVvQ,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQkU,qBAECnd,IAA7BiJ,EAAQmU,kBACVxQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQmU,uBAETpd,IAApBiJ,EAAQoU,SACVzQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQoU,SAEjCzQ,EAAOgB,OAAO,IAAIc,OAClB,IAAK,MAAMvmB,KAAK8gB,EAAQqU,IACtB1Q,EAAOxG,MAAMje,GAGf,OADAykB,EAAO+B,SACA/B,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUqa,yBAChB,KAAOpU,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQkU,eAAiBjO,EAAOhB,OAChC,MACF,KAAK,EACHjF,EAAQmU,iBAAmBlO,EAAOhB,OAClC,MACF,KAAK,EACHjF,EAAQoU,QAAUnO,EAAOhB,OACzB,MACF,KAAK,EACH,GAAkB,IAAP,EAAN6D,GAAgB,CACnB,MAAMiC,EAAO9E,EAAOtB,SAAWsB,EAAOvL,IACtC,KAAOuL,EAAOvL,IAAMqQ,GAClB/K,EAAQqU,IAAIvb,KAAKmN,EAAO9I,QAE3B,MACC6C,EAAQqU,IAAIvb,KAAKmN,EAAO9I,SAE1B,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCvEUsJ,eAAe,KAKfiR,iBAA0C,CACrD/Q,UAAUr1B,EAAqBs1B,GAC7B,MAAM9F,EAAS2W,aAAa7hB,OAAOtkB,GAC7BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHqU,aAAalhB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAErD7wB,OAAM,IAEGuhC,aAAalhB,OAAO,IAAIiB,aCbnC,IAAkBmgB,iBA4BlB,SAASC,4BACP,MAAO,CAAEC,cAAe,GAC1B,EA9BA,SAAkBF,GAChBA,EAAAA,EAAA,GAAA,GAAA,KACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAND,CAAkBA,mBAAAA,iBAMjB,CAAA,IA8BM,MAAMG,gBAAkB,CAC7BliB,OAAOuH,EAA0B2D,EAAqBgF,eAAI/E,OAAO7qB,UAC/D,IAAK,MAAMmG,KAAK8gB,EAAQ0a,cACtBE,sBAAsBniB,OAAOvZ,EAAIykB,EAAOgB,OAAO,IAAIc,QAAQC,SAE7D,OAAO/B,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUya,4BAChB,KAAOxU,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,GAAQmE,IAAQ,GACT,EACH9I,EAAQ0a,cAAc5hB,KAAK8hB,sBAAsBxhB,OAAO6M,EAAQA,EAAOtB,gBAGvEsB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GAGH,SAAS6a,iCACP,MAAO,CAAEzB,YAAQriB,EAAWsiB,eAAWtiB,EAAWuiB,iBAAaviB,EAAWwiB,kBAAcxiB,EAC1F,CAMO,MAAM+jB,qBAAuB,CAClCriB,OAAM,CAACuH,EAA+B2D,EAAqBgF,eAAI/E,OAAO7qB,iBAC7Cge,IAAnBiJ,EAAQoZ,QACVzV,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQoZ,aAEPriB,IAAtBiJ,EAAQqZ,WACV1V,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQqZ,gBAEPtiB,IAAxBiJ,EAAQsZ,aACV3V,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQsZ,kBAELviB,IAAzBiJ,EAAQuZ,cACV5V,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQuZ,cAE1B5V,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU6a,iCAChB,KAAO5U,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQoZ,OAASnT,EAAOrB,QACxB,MACF,KAAK,EACH5E,EAAQqZ,UAAYpT,EAAO7N,SAC3B,MACF,KAAK,EACH4H,EAAQsZ,YAAcrT,EAAO9I,QAC7B,MACF,KAAK,EACH6C,EAAQuZ,aAAetT,EAAOhB,OAC9B,MACF,QACEgB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GAGH,SAAS+a,kCACP,MAAO,CAAEC,UAAW,EAAGC,eAAWlkB,EACpC,CAMO,MAAM6jB,sBAAwB,CACnCniB,OAAM,CAACuH,EAAgC2D,EAAqBgF,eAAI/E,OAAO7qB,YAC3C,IAAtBinB,EAAQgb,WACVrX,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQgb,gBAEPjkB,IAAtBiJ,EAAQib,WACVH,qBAAqBriB,OAAOuH,EAAQib,UAAWtX,EAAOgB,OAAO,IAAIc,QAAQC,SAEpE/B,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU+a,kCAChB,KAAO9U,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQgb,UAAY/U,EAAOrB,QAC3B,MACF,KAAK,EACH5E,EAAQib,UAAYH,qBAAqB1hB,OAAO6M,EAAQA,EAAOtB,UAC/D,MACF,QACEsB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GC7JUsJ,eAAe,KAKf4R,oBAAgD,CAC3D1R,UAAUr1B,EAAwBs1B,GAChC,MAAM9F,EAASgX,gBAAgBliB,OAAOtkB,GAChCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH0U,gBAAgBvhB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAExD7wB,OAAM,IAEG4hC,gBAAgBvhB,OAAO,IAAIiB,aCMtC,SAAS8gB,4BACP,MAAO,CAAEvB,UAAW,EAAGn4B,YAAQsV,EAAWzT,eAAWyT,EAAWqkB,KAAM,GACxE,CAMO,MAAMC,gBAAkB,CAC7B5iB,OAAOuH,EAA0B2D,EAAqBgF,eAAI/E,OAAO7qB,UACrC,IAAtBinB,EAAQ4Z,WACVjW,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQ4Z,gBAEV7iB,IAAnBiJ,EAAQve,QACVjJ,QAAQigB,OAAOuH,EAAQve,OAAQkiB,EAAOgB,OAAO,IAAIc,QAAQC,cAEjC3O,IAAtBiJ,EAAQ1c,WACV9K,QAAQigB,OAAOuH,EAAQ1c,UAAWqgB,EAAOgB,OAAO,IAAIc,QAAQC,SAE9D,IAAK,MAAMxmB,KAAK8gB,EAAQob,KACtBE,WAAW7iB,OAAOvZ,EAAIykB,EAAOgB,OAAO,IAAIc,QAAQC,SAElD,OAAO/B,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUmb,4BAChB,KAAOlV,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQ4Z,UAAY3T,EAAOrB,QAC3B,MACF,KAAK,EACH5E,EAAQve,OAASjJ,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC/C,MACF,KAAK,EACH3E,EAAQ1c,UAAY9K,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAClD,MACF,KAAK,EACH3E,EAAQob,KAAKtiB,KAAKwiB,WAAWliB,OAAO6M,EAAQA,EAAOtB,WACnD,MACF,QACEsB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GAGH,SAASub,uBACP,MAAO,CACLC,cAAUzkB,EACVtV,YAAQsV,EACRzT,eAAWyT,EACX0kB,eAAW1kB,EACX3hB,OAAQ,EACRukC,cAAU5iB,EACV2kB,cAAU3kB,EAEd,CAMO,MAAMukB,WAAa,CACxB7iB,OAAM,CAACuH,EAAqB2D,EAAqBgF,eAAI/E,OAAO7qB,iBACjCge,IAArBiJ,EAAQwb,UACVhjC,QAAQigB,OAAOuH,EAAQwb,SAAU7X,EAAOgB,OAAO,IAAIc,QAAQC,cAEtC3O,IAAnBiJ,EAAQve,QACVjJ,QAAQigB,OAAOuH,EAAQve,OAAQkiB,EAAOgB,OAAO,IAAIc,QAAQC,cAEjC3O,IAAtBiJ,EAAQ1c,WACV9K,QAAQigB,OAAOuH,EAAQ1c,UAAWqgB,EAAOgB,OAAO,IAAIc,QAAQC,cAEpC3O,IAAtBiJ,EAAQyb,WACVjjC,QAAQigB,OAAOuH,EAAQyb,UAAW9X,EAAOgB,OAAO,IAAIc,QAAQC,SAEvC,IAAnB1F,EAAQ5qB,QACVuuB,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQ5qB,aAET2hB,IAArBiJ,EAAQ2Z,UACVhW,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQ2Z,eAEV5iB,IAArBiJ,EAAQ0b,UACV/X,EAAOgB,OAAO,IAAII,MAAM/E,EAAQ0b,UAE3B/X,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUub,uBAChB,KAAOtV,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQwb,SAAWhjC,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UACjD,MACF,KAAK,EACH3E,EAAQve,OAASjJ,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC/C,MACF,KAAK,EACH3E,EAAQ1c,UAAY9K,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAClD,MACF,KAAK,EACH3E,EAAQyb,UAAYjjC,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAClD,MACF,KAAK,EACH3E,EAAQ5qB,OAAS6wB,EAAO9I,QACxB,MACF,KAAK,EACH6C,EAAQ2Z,SAAW1T,EAAO7N,SAC1B,MACF,KAAK,EACH4H,EAAQ0b,SAAWhI,aAAazN,EAAOlB,SACvC,MACF,QACEkB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GAMH,IAAI2T,aAAkB,MACpB,QAA0B,IAAfA,aAA4B,OAAOA,aAC9C,GAAoB,oBAATlwB,KAAsB,OAAOA,KACxC,GAAsB,oBAAXud,OAAwB,OAAOA,OAC1C,GAAsB,oBAAXJ,OAAwB,OAAOA,OAC1C,KAAM,gCACP,EANqB,GAQtB,SAAS8S,aAAazI,GACpB,GAAIA,EAAKkE,GAAG9N,OAAOuS,kBACjB,MAAM,IAAID,aAAWra,MAAM,gDAE7B,OAAO2R,EAAK1M,UACd,CCnJA,SAASod,kCACP,MAAO,CAAEC,SAAU,GACrB,CDmJIjT,eAAIrK,KAAKO,OAASA,cACpB8J,eAAIrK,KAAKO,KAAOA,YAChB8J,eAAIP,aC/IC,MAAMyT,sBAAwB,CACnCpjB,OAAOuH,EAAgC2D,EAAqBgF,eAAI/E,OAAO7qB,UACrE,IAAK,MAAMmG,KAAK8gB,EAAQ4b,SACtBE,qCAAqCrjB,OAAOvZ,EAAIykB,EAAOgB,OAAO,IAAIc,QAAQC,SAE5E,OAAO/B,CACR,EAEDvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU2b,kCAChB,KAAO1V,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,GAAQmE,IAAQ,GACT,EACH9I,EAAQ4b,SAAS9iB,KAAKgjB,qCAAqC1iB,OAAO6M,EAAQA,EAAOtB,gBAGjFsB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GAGH,SAAS+b,iDACP,MAAO,CAAE3C,OAAQ,EAAG4C,SAAKjlB,EAAWklB,MAAO,EAAGrC,UAAW,EAAGsC,YAAQnlB,EACtE,CAMO,MAAM+kB,qCAAuC,CAClDrjB,OAAM,CAACuH,EAA+C2D,EAAqBgF,eAAI/E,OAAO7qB,YAC7D,IAAnBinB,EAAQoZ,QACVzV,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQoZ,aAEbriB,IAAhBiJ,EAAQgc,KACVV,WAAW7iB,OAAOuH,EAAQgc,IAAKrY,EAAOgB,OAAO,IAAIc,QAAQC,SAErC,IAAlB1F,EAAQic,OACVtY,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQic,OAER,IAAtBjc,EAAQ4Z,WACVjW,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ4Z,gBAEX7iB,IAAnBiJ,EAAQkc,QACVvY,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQkc,QAE3BvY,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU+b,iDAChB,KAAO9V,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQoZ,OAASnT,EAAOrB,QACxB,MACF,KAAK,EACH5E,EAAQgc,IAAMV,WAAWliB,OAAO6M,EAAQA,EAAOtB,UAC/C,MACF,KAAK,EACH3E,EAAQic,MAAQhW,EAAOrB,QACvB,MACF,KAAK,EACH5E,EAAQ4Z,UAAY3T,EAAOrB,QAC3B,MACF,KAAK,EACH5E,EAAQkc,OAASjW,EAAO9I,QACxB,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GClHUsJ,eAAe,KAKf6S,0BAA4D,CACvE3S,UAAUr1B,EAA8Bs1B,GACtC,MAAM9F,EAASkY,sBAAsBpjB,OAAOtkB,GACtCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH4V,sBAAsBziB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAE9D7wB,OAAM,IAEG8iC,sBAAsBziB,OAAO,IAAIiB,aCV5C,SAAS+hB,0BACP,MAAO,CAAEC,iBAAiB,EAC5B,CAMO,MAAMC,cAAgB,CAC3B7jB,OAAM,CAACuH,EAAwB2D,EAAqBgF,eAAI/E,OAAO7qB,aAC7B,IAA5BinB,EAAQqc,iBACV1Y,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQqc,iBAEzB1Y,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUoc,0BAChB,KAAOnW,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,GAAQmE,IAAQ,GACT,EACH9I,EAAQqc,gBAAkBpW,EAAOhB,YAGjCgB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GCtCUsJ,eAAe,KAKfiT,kBAA4C,CACvD/S,UAAUr1B,EAAsBs1B,GAC9B,MAAM9F,EAAS2Y,cAAc7jB,OAAOtkB,GAC9BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHqW,cAAcljB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEtD7wB,OAAM,IAEGujC,cAAcljB,OAAO,IAAIiB,aCbpC,IAAkBmiB,iBAclB,SAASC,sBACP,MAAO,CAAE7C,UAAW,EAAGn4B,YAAQsV,EAAWzT,eAAWyT,EAAWuiB,YAAa,EAAGoD,UAAW,EAC7F,EAhBA,SAAkBF,GAChBA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAJD,CAAkBA,mBAAAA,iBAIjB,CAAA,IAkBM,MAAMG,UAAY,CACvBlkB,OAAM,CAACuH,EAAoB2D,EAAqBgF,eAAI/E,OAAO7qB,YAC/B,IAAtBinB,EAAQ4Z,WACVjW,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQ4Z,gBAEV7iB,IAAnBiJ,EAAQve,QACVjJ,QAAQigB,OAAOuH,EAAQve,OAAQkiB,EAAOgB,OAAO,IAAIc,QAAQC,cAEjC3O,IAAtBiJ,EAAQ1c,WACV9K,QAAQigB,OAAOuH,EAAQ1c,UAAWqgB,EAAOgB,OAAO,IAAIc,QAAQC,SAElC,IAAxB1F,EAAQsZ,aACV3V,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQsZ,aAER,IAAtBtZ,EAAQ0c,WACV/Y,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ0c,WAE3B/Y,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUyc,sBAChB,KAAOxW,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQ4Z,UAAY3T,EAAOrB,QAC3B,MACF,KAAK,EACH5E,EAAQve,OAASjJ,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAC/C,MACF,KAAK,EACH3E,EAAQ1c,UAAY9K,QAAQ4gB,OAAO6M,EAAQA,EAAOtB,UAClD,MACF,KAAK,EACH3E,EAAQsZ,YAAcrT,EAAO9I,QAC7B,MACF,KAAK,EACH6C,EAAQ0c,UAAYzW,EAAOrB,QAC3B,MACF,QACEqB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCzEUsJ,eAAe,KAKfsT,cAAoC,CAC/CpT,UAAUr1B,EAAkBs1B,GAC1B,MAAM9F,EAASgZ,UAAUlkB,OAAOtkB,GAC1BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH0W,UAAUvjB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAElD7wB,OAAM,IAEG4jC,UAAUvjB,OAAO,IAAIiB,aChBnBiP,eAAe,KAKfuT,oBAAgD,CAC3DrT,UAAUr1B,EAAwBs1B,GAChC,MAAM9F,EAAS0X,gBAAgB5iB,OAAOtkB,GAChCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHoV,gBAAgBjiB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAExD7wB,OAAM,IAEGsiC,gBAAgBjiB,OAAO,IAAIiB,aCLtC,SAASyiB,0BACP,MAAO,CAAE5I,oBAAgBnd,EAAWod,sBAAkBpd,EAAWqd,aAASrd,EAC5E,CAMO,MAAMgmB,cAAgB,CAC3BtkB,OAAM,CAACuH,EAAwB2D,EAAqBgF,eAAI/E,OAAO7qB,iBAC9Bge,IAA3BiJ,EAAQkU,gBACVvQ,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQkU,qBAECnd,IAA7BiJ,EAAQmU,kBACVxQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQmU,uBAETpd,IAApBiJ,EAAQoU,SACVzQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQoU,SAE1BzQ,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU8c,0BAChB,KAAO7W,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQkU,eAAiBjO,EAAOhB,OAChC,MACF,KAAK,EACHjF,EAAQmU,iBAAmBlO,EAAOhB,OAClC,MACF,KAAK,EACHjF,EAAQoU,QAAUnO,EAAOhB,OACzB,MACF,QACEgB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCvDUsJ,eAAe,KAKf0T,kBAA4C,CACvDxT,UAAUr1B,EAAsBs1B,GAC9B,MAAM9F,EAASoZ,cAActkB,OAAOtkB,GAC9BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH8W,cAAc3jB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEtD7wB,OAAM,IAEGgkC,cAAc3jB,OAAO,IAAIiB,aCwBpC,SAAS4iB,wBACP,MAAO,CACLC,KAAM,GACN9I,aAASrd,EACTomB,UAAMpmB,EACNqmB,aAASrmB,EACTsmB,cAAUtmB,EACVumB,kBAAcvmB,EACdwmB,gBAAYxmB,EACZymB,gBAAYzmB,EACZtO,WAAOsO,EACPrO,YAAQqO,EACR0mB,gBAAY1mB,EACZ2mB,kBAAc3mB,EACd4mB,mBAAe5mB,EACf6mB,iBAAa7mB,EACb8mB,iBAAa9mB,EACb+mB,eAAW/mB,EACXgnB,kBAAchnB,EACdinB,gBAAYjnB,EACZknB,mBAAelnB,EACfmnB,mBAAennB,EACfonB,kBAAcpnB,EACdqnB,iBAAarnB,EACbsnB,kBAActnB,EACdunB,eAAWvnB,EAEf,CAMO,MAAMwnB,YAAc,CACzB9lB,OAAM,CAACuH,EAAsB2D,EAAqBgF,eAAI/E,OAAO7qB,YACtC,KAAjBinB,EAAQkd,MACVvZ,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQkd,WAEXnmB,IAApBiJ,EAAQoU,SACVzQ,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQoU,cAEZrd,IAAjBiJ,EAAQmd,MACVxZ,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQmd,WAEXpmB,IAApBiJ,EAAQod,SACVzZ,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQod,cAETrmB,IAArBiJ,EAAQqd,UACV1Z,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQqd,eAELtmB,IAAzBiJ,EAAQsd,cACV3Z,EAAOgB,OAAO,IAAIM,KAAKjF,EAAQsd,mBAENvmB,IAAvBiJ,EAAQud,YACV5Z,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQud,iBAERxmB,IAAvBiJ,EAAQwd,YACV7Z,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQwd,iBAEbzmB,IAAlBiJ,EAAQvX,OACVkb,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQvX,YAEXsO,IAAnBiJ,EAAQtX,QACVib,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQtX,aAEPqO,IAAvBiJ,EAAQyd,YACV9Z,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQyd,iBAEL1mB,IAAzBiJ,EAAQ0d,cACV/Z,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ0d,mBAEL3mB,IAA1BiJ,EAAQ2d,eACVha,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ2d,oBAEP5mB,IAAxBiJ,EAAQ4d,aACVja,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ4d,kBAEP7mB,IAAxBiJ,EAAQ6d,aACVla,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ6d,kBAET9mB,IAAtBiJ,EAAQ8d,WACVna,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ8d,gBAEN/mB,IAAzBiJ,EAAQ+d,cACVpa,EAAOgB,OAAO,KAAKM,KAAKjF,EAAQ+d,mBAEPhnB,IAAvBiJ,EAAQge,YACVra,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQge,iBAELjnB,IAA1BiJ,EAAQie,eACVta,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQie,oBAELlnB,IAA1BiJ,EAAQke,eACVva,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQke,oBAENnnB,IAAzBiJ,EAAQme,cACVxa,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQme,mBAEPpnB,IAAxBiJ,EAAQoe,aACVtL,OAAOra,OAAOuH,EAAQoe,YAAaza,EAAOgB,OAAO,KAAKc,QAAQC,cAEnC3O,IAAzBiJ,EAAQqe,cACVvL,OAAOra,OAAOuH,EAAQqe,aAAc1a,EAAOgB,OAAO,KAAKc,QAAQC,cAEvC3O,IAAtBiJ,EAAQse,WACVxL,OAAOra,OAAOuH,EAAQse,UAAW3a,EAAOgB,OAAO,KAAKc,QAAQC,SAEvD/B,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUid,wBAChB,KAAOhX,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQkd,KAAOjX,EAAO7N,SACtB,MACF,KAAK,EACH4H,EAAQoU,QAAUnO,EAAOhB,OACzB,MACF,KAAK,EACHjF,EAAQmd,KAAOlX,EAAO7N,SACtB,MACF,KAAK,EACH4H,EAAQod,QAAUnX,EAAO9I,QACzB,MACF,KAAK,EACH6C,EAAQqd,SAAWpX,EAAO9I,QAC1B,MACF,KAAK,EACH6C,EAAQsd,aAAerX,EAAOhB,OAC9B,MACF,KAAK,EACHjF,EAAQud,WAAatX,EAAO7N,SAC5B,MACF,KAAK,EACH4H,EAAQwd,WAAavX,EAAO7N,SAC5B,MACF,KAAK,EACH4H,EAAQvX,MAAQwd,EAAO9I,QACvB,MACF,KAAK,GACH6C,EAAQtX,OAASud,EAAO9I,QACxB,MACF,KAAK,GACH6C,EAAQyd,WAAaxX,EAAO9I,QAC5B,MACF,KAAK,GACH6C,EAAQ0d,aAAezX,EAAO9I,QAC9B,MACF,KAAK,GACH6C,EAAQ2d,cAAgB1X,EAAO9I,QAC/B,MACF,KAAK,GACH6C,EAAQ4d,YAAc3X,EAAO9I,QAC7B,MACF,KAAK,GACH6C,EAAQ6d,YAAc5X,EAAO9I,QAC7B,MACF,KAAK,GACH6C,EAAQ8d,UAAY7X,EAAOrB,QAC3B,MACF,KAAK,GACH5E,EAAQ+d,aAAe9X,EAAOhB,OAC9B,MACF,KAAK,GACHjF,EAAQge,WAAa/X,EAAO9I,QAC5B,MACF,KAAK,GACH6C,EAAQie,cAAgBhY,EAAO9I,QAC/B,MACF,KAAK,GACH6C,EAAQke,cAAgBjY,EAAO9I,QAC/B,MACF,KAAK,GACH6C,EAAQme,aAAelY,EAAO9I,QAC9B,MACF,KAAK,GACH6C,EAAQoe,YAActL,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UACnD,MACF,KAAK,GACH3E,EAAQqe,aAAevL,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UACpD,MACF,KAAK,GACH3E,EAAQse,UAAYxL,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UACjD,MACF,QACEsB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GC3OUsJ,eAAe,KAKfkV,gBAAwC,CACnDhV,UAAUr1B,EAAoBs1B,GAC5B,MAAM9F,EAAS4a,YAAY9lB,OAAOtkB,GAC5BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACHsY,YAAYnlB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEpD7wB,OAAM,IAEGwlC,YAAYnlB,OAAO,IAAIiB,aCblC,IAAkBokB,UAOAC,KAkBlB,SAASC,qBACP,MAAO,CAAExqC,MAAO,GAAI6kC,WAAOjiB,EAAW6nB,eAAW7nB,EAAWomB,UAAMpmB,EAAWsmB,cAAUtmB,EACzF,EA3BA,SAAkB0nB,GAChBA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,KAAA,GAAA,OACAA,EAAAA,EAAA,MAAA,GAAA,QACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CALD,CAAkBA,YAAAA,UAKjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAJD,CAAkBA,OAAAA,KAIjB,CAAA,IAsBM,MAAMG,SAAW,CACtBpmB,OAAM,CAACuH,EAAmB2D,EAAqBgF,eAAI/E,OAAO7qB,YAClC,KAAlBinB,EAAQ7rB,OACVwvB,EAAOgB,OAAO,IAAIvM,OAAO4H,EAAQ7rB,YAEb4iB,IAAlBiJ,EAAQgZ,OACVlG,OAAOra,OAAOuH,EAAQgZ,MAAOrV,EAAOgB,OAAO,IAAIc,QAAQC,cAE/B3O,IAAtBiJ,EAAQ4e,WACVjb,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ4e,gBAEb7nB,IAAjBiJ,EAAQmd,MACVxZ,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQmd,WAETpmB,IAArBiJ,EAAQqd,UACV1Z,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQqd,UAE3B1Z,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU2e,qBAChB,KAAO1Y,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,EACH9I,EAAQ7rB,MAAQ8xB,EAAO7N,SACvB,MACF,KAAK,EACH4H,EAAQgZ,MAAQlG,OAAO1Z,OAAO6M,EAAQA,EAAOtB,UAC7C,MACF,KAAK,EACH3E,EAAQ4e,UAAY3Y,EAAOrB,QAC3B,MACF,KAAK,EACH5E,EAAQmd,KAAOlX,EAAOrB,QACtB,MACF,KAAK,EACH5E,EAAQqd,SAAWpX,EAAOrB,QAC1B,MACF,QACEqB,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GCpFUsJ,eAAe,KAKfwV,aAAkC,CAC7CtV,UAAUr1B,EAAiBs1B,GACzB,MAAM9F,EAASkb,SAASpmB,OAAOtkB,GACzBukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH4Y,SAASzlB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEjD7wB,OAAM,IAEG8lC,SAASzlB,OAAO,IAAIiB,aCd/B,IAAkB0kB,eAOAC,QAYAC,OAQAC,YAOAC,gBAQAC,OAOAC,UAUAC,WAOAC,UAMAC,OA0ElB,SAASC,0BACP,MAAO,CACLC,OAAQ,EACRC,QAAS,EACTC,aAAc,EACdC,aAAc,EACdC,WAAY,EACZC,UAAW,EACXC,cAAe,EACfC,SAAU,EACVC,eAAgB,EAChBC,SAAU,EACVC,QAAS,EACT98B,UAAW,EACX+8B,KAAM,EACNC,cAAe,EACfC,UAAW,EACXC,SAAU,EACVC,WAAY,EACZC,UAAW,EACXj4B,MAAO,EACPk4B,WAAY,EACZj4B,OAAQ,EACRk4B,aAAc,EACdC,SAAU,EACVC,cAAe,EACfC,UAAW,EACXC,aAAc,EACdC,SAAU,EACVC,cAAe,EACfC,UAAW,EACXC,iBAAkB,EAClBC,aAAc,EACdC,gBAAiB,EACjBC,YAAa,EACbC,kBAAmB,EACnBC,cAAe,EACfC,mBAAoB,EACpBC,eAAgB,EAChBC,eAAgB,EAChBC,WAAY,EACZC,cAAe,EACfC,UAAW,EACXC,gBAAiB,EACjBC,YAAa,EACbC,iBAAkB,EAClBC,aAAc,EACdC,gBAAiB,EACjBxE,YAAa,EACbyE,eAAgB,EAChB5E,WAAY,EACZ6E,iBAAkB,EAClB5E,aAAc,EACd6E,kBAAmB,EACnB5E,cAAe,EACf6E,WAAY,EACZC,UAAW,EACXC,YAAa,EACbC,aAAc,EAElB,EA9MA,SAAkB5D,GAChBA,EAAAA,EAAA,qBAAA,GAAA,uBACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,uBAAA,GAAA,yBACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CALD,CAAkBA,iBAAAA,eAKjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,oBAAA,GAAA,sBACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAVD,CAAkBA,UAAAA,QAUjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAND,CAAkBA,SAAAA,OAMjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CALD,CAAkBA,cAAAA,YAKjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,6BAAA,GAAA,+BACAA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,0BAAA,GAAA,4BACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAND,CAAkBA,kBAAAA,gBAMjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CALD,CAAkBA,SAAAA,OAKjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,mBAAA,GAAA,qBACAA,EAAAA,EAAA,gBAAA,GAAA,kBACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,sBAAA,GAAA,wBACAA,EAAAA,EAAA,qBAAA,GAAA,uBACAA,EAAAA,EAAA,qBAAA,GAAA,uBACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CARD,CAAkBA,YAAAA,UAQjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,kBAAA,GAAA,oBACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CALD,CAAkBA,aAAAA,WAKjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAJD,CAAkBA,YAAAA,UAIjB,CAAA,IAED,SAAkBC,GAChBA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,YAAA,GAAA,cACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,iBAAA,GAAA,mBACAA,EAAAA,EAAA,eAAA,GAAA,iBACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,cAAA,GAAA,cACD,CAXD,CAAkBA,SAAAA,OAWjB,CAAA,IAiIM,MAAMoD,cAAgB,CAC3BnqB,OAAM,CAACuH,EAAwB2D,EAAqBgF,eAAI/E,OAAO7qB,YACtC,IAAnBinB,EAAQ0f,QACV/b,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ0f,QAEX,IAApB1f,EAAQ2f,SACVhc,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ2f,SAEN,IAAzB3f,EAAQ4f,cACVjc,EAAOgB,OAAO,GAAGC,MAAM5E,EAAQ4f,cAEJ,IAAzB5f,EAAQ6f,cACVlc,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ6f,cAEP,IAAvB7f,EAAQ8f,YACVnc,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ8f,YAER,IAAtB9f,EAAQ+f,WACVpc,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ+f,WAEJ,IAA1B/f,EAAQggB,eACVrc,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQggB,eAET,IAArBhgB,EAAQigB,UACVtc,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQigB,UAEH,IAA3BjgB,EAAQkgB,gBACVvc,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQkgB,gBAET,IAArBlgB,EAAQmgB,UACVxc,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQmgB,UAEV,IAApBngB,EAAQogB,SACVzc,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQogB,SAER,IAAtBpgB,EAAQ1c,WACVqgB,EAAOgB,OAAO,IAAIC,MAAM5E,EAAQ1c,WAEb,IAAjB0c,EAAQqgB,MACV1c,EAAOgB,OAAO,IAAIxH,MAAM6C,EAAQqgB,MAEJ,IAA1BrgB,EAAQsgB,eACV3c,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQsgB,eAET,IAAtBtgB,EAAQugB,WACV5c,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQugB,WAEV,IAArBvgB,EAAQwgB,UACV7c,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQwgB,UAER,IAAvBxgB,EAAQygB,YACV9c,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQygB,YAET,IAAtBzgB,EAAQ0gB,WACV/c,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ0gB,WAEb,IAAlB1gB,EAAQvX,OACVkb,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQvX,OAER,IAAvBuX,EAAQ2gB,YACVhd,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ2gB,YAEZ,IAAnB3gB,EAAQtX,QACVib,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQtX,QAEN,IAAzBsX,EAAQ4gB,cACVjd,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ4gB,cAEV,IAArB5gB,EAAQ6gB,UACVld,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ6gB,UAEL,IAA1B7gB,EAAQ8gB,eACVnd,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ8gB,eAET,IAAtB9gB,EAAQ+gB,WACVpd,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ+gB,WAEN,IAAzB/gB,EAAQghB,cACVrd,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQghB,cAEV,IAArBhhB,EAAQihB,UACVtd,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQihB,UAEL,IAA1BjhB,EAAQkhB,eACVvd,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQkhB,eAET,IAAtBlhB,EAAQmhB,WACVxd,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQmhB,WAEF,IAA7BnhB,EAAQohB,kBACVzd,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQohB,kBAEN,IAAzBphB,EAAQqhB,cACV1d,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQqhB,cAEH,IAA5BrhB,EAAQshB,iBACV3d,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQshB,iBAEP,IAAxBthB,EAAQuhB,aACV5d,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQuhB,aAED,IAA9BvhB,EAAQwhB,mBACV7d,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQwhB,mBAEL,IAA1BxhB,EAAQyhB,eACV9d,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQyhB,eAEA,IAA/BzhB,EAAQ0hB,oBACV/d,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ0hB,oBAEJ,IAA3B1hB,EAAQ2hB,gBACVhe,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ2hB,gBAEJ,IAA3B3hB,EAAQ4hB,gBACVje,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ4hB,gBAER,IAAvB5hB,EAAQ6hB,YACVle,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ6hB,YAEL,IAA1B7hB,EAAQ8hB,eACVne,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQ8hB,eAET,IAAtB9hB,EAAQ+hB,WACVpe,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ+hB,WAEH,IAA5B/hB,EAAQgiB,iBACVre,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQgiB,iBAEP,IAAxBhiB,EAAQiiB,aACVte,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQiiB,aAEF,IAA7BjiB,EAAQkiB,kBACVve,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQkiB,kBAEN,IAAzBliB,EAAQmiB,cACVxe,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQmiB,cAEH,IAA5BniB,EAAQoiB,iBACVze,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQoiB,iBAEP,IAAxBpiB,EAAQ4d,aACVja,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ4d,aAEJ,IAA3B5d,EAAQqiB,gBACV1e,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQqiB,gBAER,IAAvBriB,EAAQyd,YACV9Z,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQyd,YAEF,IAA7Bzd,EAAQsiB,kBACV3e,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQsiB,kBAEN,IAAzBtiB,EAAQ0d,cACV/Z,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ0d,cAED,IAA9B1d,EAAQuiB,mBACV5e,EAAOgB,OAAO,KAAKC,MAAM5E,EAAQuiB,mBAEL,IAA1BviB,EAAQ2d,eACVha,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ2d,eAER,IAAvB3d,EAAQwiB,YACV7e,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQwiB,YAET,IAAtBxiB,EAAQyiB,WACV9e,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQyiB,WAEP,IAAxBziB,EAAQ0iB,aACV/e,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ0iB,aAEN,IAAzB1iB,EAAQ2iB,cACVhf,EAAOgB,OAAO,KAAKxH,MAAM6C,EAAQ2iB,cAE5Bhf,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAUyf,0BAChB,KAAOxZ,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,OAAQmE,IAAQ,GACd,KAAK,GACH9I,EAAQ0f,OAASzZ,EAAOrB,QACxB,MACF,KAAK,GACH5E,EAAQ2f,QAAU1Z,EAAOrB,QACzB,MACF,KAAK,EACH5E,EAAQ4f,aAAe3Z,EAAOrB,QAC9B,MACF,KAAK,EACH5E,EAAQ6f,aAAe5Z,EAAOrB,QAC9B,MACF,KAAK,EACH5E,EAAQ8f,WAAa7Z,EAAOrB,QAC5B,MACF,KAAK,EACH5E,EAAQ+f,UAAY9Z,EAAOrB,QAC3B,MACF,KAAK,EACH5E,EAAQggB,cAAgB/Z,EAAOrB,QAC/B,MACF,KAAK,EACH5E,EAAQigB,SAAWha,EAAOrB,QAC1B,MACF,KAAK,EACH5E,EAAQkgB,eAAiBja,EAAOrB,QAChC,MACF,KAAK,EACH5E,EAAQmgB,SAAWla,EAAOrB,QAC1B,MACF,KAAK,EACH5E,EAAQogB,QAAUna,EAAOrB,QACzB,MACF,KAAK,GACH5E,EAAQ1c,UAAY2iB,EAAOrB,QAC3B,MACF,KAAK,GACH5E,EAAQqgB,KAAOpa,EAAO9I,QACtB,MACF,KAAK,GACH6C,EAAQsgB,cAAgBra,EAAOrB,QAC/B,MACF,KAAK,GACH5E,EAAQugB,UAAYta,EAAO9I,QAC3B,MACF,KAAK,GACH6C,EAAQwgB,SAAWva,EAAO9I,QAC1B,MACF,KAAK,GACH6C,EAAQygB,WAAaxa,EAAO9I,QAC5B,MACF,KAAK,GACH6C,EAAQ0gB,UAAYza,EAAOrB,QAC3B,MACF,KAAK,GACH5E,EAAQvX,MAAQwd,EAAO9I,QACvB,MACF,KAAK,GACH6C,EAAQ2gB,WAAa1a,EAAOrB,QAC5B,MACF,KAAK,GACH5E,EAAQtX,OAASud,EAAO9I,QACxB,MACF,KAAK,GACH6C,EAAQ4gB,aAAe3a,EAAOrB,QAC9B,MACF,KAAK,GACH5E,EAAQ6gB,SAAW5a,EAAO9I,QAC1B,MACF,KAAK,GACH6C,EAAQ8gB,cAAgB7a,EAAOrB,QAC/B,MACF,KAAK,GACH5E,EAAQ+gB,UAAY9a,EAAO9I,QAC3B,MACF,KAAK,GACH6C,EAAQghB,aAAe/a,EAAOrB,QAC9B,MACF,KAAK,GACH5E,EAAQihB,SAAWhb,EAAO9I,QAC1B,MACF,KAAK,GACH6C,EAAQkhB,cAAgBjb,EAAOrB,QAC/B,MACF,KAAK,GACH5E,EAAQmhB,UAAYlb,EAAO9I,QAC3B,MACF,KAAK,GACH6C,EAAQohB,iBAAmBnb,EAAOrB,QAClC,MACF,KAAK,GACH5E,EAAQqhB,aAAepb,EAAO9I,QAC9B,MACF,KAAK,GACH6C,EAAQshB,gBAAkBrb,EAAOrB,QACjC,MACF,KAAK,GACH5E,EAAQuhB,YAActb,EAAO9I,QAC7B,MACF,KAAK,GACH6C,EAAQwhB,kBAAoBvb,EAAOrB,QACnC,MACF,KAAK,GACH5E,EAAQyhB,cAAgBxb,EAAO9I,QAC/B,MACF,KAAK,GACH6C,EAAQ0hB,mBAAqBzb,EAAOrB,QACpC,MACF,KAAK,GACH5E,EAAQ2hB,eAAiB1b,EAAO9I,QAChC,MACF,KAAK,GACH6C,EAAQ4hB,eAAiB3b,EAAOrB,QAChC,MACF,KAAK,GACH5E,EAAQ6hB,WAAa5b,EAAO9I,QAC5B,MACF,KAAK,GACH6C,EAAQ8hB,cAAgB7b,EAAOrB,QAC/B,MACF,KAAK,GACH5E,EAAQ+hB,UAAY9b,EAAO9I,QAC3B,MACF,KAAK,GACH6C,EAAQgiB,gBAAkB/b,EAAOrB,QACjC,MACF,KAAK,GACH5E,EAAQiiB,YAAchc,EAAO9I,QAC7B,MACF,KAAK,GACH6C,EAAQkiB,iBAAmBjc,EAAOrB,QAClC,MACF,KAAK,GACH5E,EAAQmiB,aAAelc,EAAO9I,QAC9B,MACF,KAAK,GACH6C,EAAQoiB,gBAAkBnc,EAAOrB,QACjC,MACF,KAAK,GACH5E,EAAQ4d,YAAc3X,EAAO9I,QAC7B,MACF,KAAK,GACH6C,EAAQqiB,eAAiBpc,EAAOrB,QAChC,MACF,KAAK,GACH5E,EAAQyd,WAAaxX,EAAO9I,QAC5B,MACF,KAAK,GACH6C,EAAQsiB,iBAAmBrc,EAAOrB,QAClC,MACF,KAAK,GACH5E,EAAQ0d,aAAezX,EAAO9I,QAC9B,MACF,KAAK,GACH6C,EAAQuiB,kBAAoBtc,EAAOrB,QACnC,MACF,KAAK,GACH5E,EAAQ2d,cAAgB1X,EAAO9I,QAC/B,MACF,KAAK,GACH6C,EAAQwiB,WAAavc,EAAO9I,QAC5B,MACF,KAAK,GACH6C,EAAQyiB,UAAYxc,EAAO9I,QAC3B,MACF,KAAK,GACH6C,EAAQ0iB,YAAczc,EAAO9I,QAC7B,MACF,KAAK,GACH6C,EAAQ2iB,aAAe1c,EAAO9I,QAC9B,MACF,QACE8I,EAAOa,SAAe,EAANgC,GAGrB,CACD,OAAO9I,CACR,GC9jBUsJ,eAAe,KAKfuZ,kBAA4C,CACvDrZ,UAAUr1B,EAAsBs1B,GAC9B,MAAM9F,EAASif,cAAcnqB,OAAOtkB,GAC9BukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH2c,cAAcxpB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAEtD7wB,OAAM,IAEG6pC,cAAcxpB,OAAO,IAAIiB,aCTpC,SAASyoB,kCACP,MAAO,CAAE1O,aAASrd,EACpB,CAMO,MAAMgsB,sBAAwB,CACnCtqB,OAAM,CAACuH,EAAgC2D,EAAqBgF,eAAI/E,OAAO7qB,iBAC7Cge,IAApBiJ,EAAQoU,SACVzQ,EAAOgB,OAAO,GAAGM,KAAKjF,EAAQoU,SAEzBzQ,GAGTvK,OAAOyP,EAAgCzzB,GACrC,MAAM6wB,EAAS4C,aAAiBF,eAAIzC,OAAS2C,EAAQ,IAAIF,eAAIzC,OAAO2C,GACpE,IAAIvxB,OAAiByf,IAAX3hB,EAAuB6wB,EAAO5rB,IAAM4rB,EAAOvL,IAAMtlB,EAC3D,MAAM4qB,EAAU8iB,kCAChB,KAAO7c,EAAOvL,IAAMpjB,GAAK,CACvB,MAAMwxB,EAAM7C,EAAOtB,SACnB,GAAQmE,IAAQ,GACT,EACH9I,EAAQoU,QAAUnO,EAAOhB,YAGzBgB,EAAOa,SAAe,EAANgC,EAGrB,CACD,OAAO9I,CACR,GCvCUsJ,eAAe,KAKf0Z,0BAA4D,CACvExZ,UAAUr1B,EAA8Bs1B,GACtC,MAAM9F,EAASof,sBAAsBtqB,OAAOtkB,GACtCukB,EAAS,IAAI2B,WAAWsJ,EAAOgC,SAAU,EAAGhC,EAAOtpB,KACzDovB,EAAQC,YAAYhR,GAAQ,EAC7B,EACDiR,YAAY1D,GACH8c,sBAAsB3pB,OAAO6M,EAAOvN,SAAUuN,EAAO2D,kBAE9D7wB,OAAM,IAEGgqC,sBAAsB3pB,OAAO,IAAIiB,aCU5B,SAAA4oB,yBAAwBC,0BACtCA,IAEA,MAAO,CACPC,SAAUD,EAA0BE,eAA+BC,gBACnEC,YAAaJ,EAA0BK,kBAAqCC,gBAC5EC,aAAcP,EAA0BQ,mBAAuCC,gBAC/EC,mBAAoBV,EAA0BW,yBAAmDC,gBACjGC,YAAab,EAA0Bc,kBAAqCC,gBAC5EC,UAAWhB,EAA0BiB,gBAAiCC,gBACtEC,SAAUnB,EAA0BoB,eAA+BC,gBACnEC,WAAYtB,EAA0BuB,iBAAmCC,gBACzEC,eAAgBzB,EAA0B0B,qBAA2CC,gBACrFC,cAAe5B,EAA0B6B,oBAAyCC,gBAClFC,UAAW/B,EAA0BgC,gBAAiCC,gBACtEC,SAAUlC,EAA0BmC,eAA+BC,gBACnEC,aAAcrC,EAA0BsC,mBAAuCC,gBAC/EC,aAAcxC,EAA0ByC,mBAAuCC,gBAC/EC,SAAU3C,EAA0B4C,eAA+BC,gBACnEC,cAAe9C,EAA0B+C,oBAAyCC,gBAClFC,oBAAqBjD,EAA0BkD,0BAAqDC,gBACpGC,YAAapD,EAA0BqD,kBAAqCC,gBAC5EC,kBAAmBvD,EAA0BwD,wBAAiDC,gBAC9FC,WAAY1D,EAA0B2D,iBAAmCC,gBACzEC,cAAe7D,EAA0B8D,oBAAyCC,gBAClFC,oBAAqBhE,EAA0BiE,0BAAqDC,gBACpGC,YAAanE,EAA0BoE,kBAAqCC,gBAC5EC,QAAStE,EAA0BuE,cAA6BC,gBAChEC,cAAezE,EAA0B0E,oBAAyCC,gBAClFC,YAAa5E,EAA0B6E,kBAAqCC,gBAC5EC,UAAW/E,EAA0BgF,gBAAiCC,gBACtEC,OAAQlF,EAA0BmF,aAA2BC,gBAC7DC,YAAarF,EAA0BsF,kBAAqCC,gBAC5EC,oBAAqBxF,EAA0ByF,0BAAqDC,gBAEtG,CC5DO,MAAMtf,eAAe,EAafuf,iBAAmB,GAGnBC,gBAA0C,CACrDtf,UAAUr1B,EAAsBs1B,GAC9B,MAAMsf,EAAMtf,EAAQuf,qBAAqBH,kBACzCpf,EAAQwf,WAAWF,EAAK50C,EAAMqnC,SAASxiC,GACvCywB,EAAQwf,WAAWF,EAAM,EAAG50C,EAAMqnC,SAASviC,GAC3CwwB,EAAQwf,WAAWF,EAAM,EAAG50C,EAAMqnC,SAAStiC,GAC3CuwB,EAAQwf,WAAWF,EAAM,GAAI50C,EAAMyL,SAAS5G,GAC5CywB,EAAQwf,WAAWF,EAAM,GAAI50C,EAAMyL,SAAS3G,GAC5CwwB,EAAQwf,WAAWF,EAAM,GAAI50C,EAAMyL,SAAS1G,GAC5CuwB,EAAQwf,WAAWF,EAAM,GAAI50C,EAAMyL,SAAS9E,GAC5C2uB,EAAQwf,WAAWF,EAAM,GAAI50C,EAAMgG,MAAMnB,GACzCywB,EAAQwf,WAAWF,EAAM,GAAI50C,EAAMgG,MAAMlB,GACzCwwB,EAAQwf,WAAWF,EAAM,GAAI50C,EAAMgG,MAAMjB,GACzCuwB,EAAQyf,UAAUH,EAAM,GAAI50C,EAAMurC,QAAU,EAC7C,EACD/V,YAAY1D,GACV,MAAM8iB,EAAM9iB,EAAOkjB,oBAAoBN,kBACvC,MAAO,CACLrN,SAAU,CACRxiC,EAAGitB,EAAOmjB,WAAWL,GACrB9vC,EAAGgtB,EAAOmjB,WAAWL,EAAM,GAC3B7vC,EAAG+sB,EAAOmjB,WAAWL,EAAM,IAE7BnpC,SAAU,CACR5G,EAAGitB,EAAOmjB,WAAWL,EAAM,IAC3B9vC,EAAGgtB,EAAOmjB,WAAWL,EAAM,IAC3B7vC,EAAG+sB,EAAOmjB,WAAWL,EAAM,IAC3BjuC,EAAGmrB,EAAOmjB,WAAWL,EAAM,KAE7B5uC,MAAO,CACLnB,EAAGitB,EAAOmjB,WAAWL,EAAM,IAC3B9vC,EAAGgtB,EAAOmjB,WAAWL,EAAM,IAC3B7vC,EAAG+sB,EAAOmjB,WAAWL,EAAM,KAE7BrJ,OAAQzZ,EAAOojB,UAAUN,EAAM,IAElC,EACDhwC,OAAM,KACG,CACLyiC,SAAU,CAAExiC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAC3BiB,MAAO,CAAEnB,EAAG,EAAGC,EAAG,EAAGC,EAAG,GACxB0G,SAAU,CAAE5G,EAAG,EAAGC,EAAG,EAAGC,EAAG,EAAG4B,EAAG,MAKvB,SAAAwuC,0BAAyBpG,0BACvCA,IAKA,OAAOA,EAA0B4F,gBAAiBxf,eACpD,CCnEA,IAAYA,aASN,SAAUigB,oBAAoBC,GAClC,MAAMC,EAA0BxG,wBAAwBuG,GAMxD,OAHAA,EAAOE,0BAA0BD,EAAwB/D,aAAaiE,KACtEH,EAAOE,0BAA0BD,EAAwBlE,aAAaoE,KAE/D,IACFF,EACHG,UAAWN,yBAAyBE,GACpC9D,aAAc8D,EAAOtG,0BAGnByC,mBAAuCC,gBACzCL,aAAciE,EAAOtG,0BAGnBsC,mBAAuCC,gBAE7C,CChCM,SAAUoE,OAAUC,GACxB,MAAO,CACLtgB,UAAUr1B,EAAiBs1B,GACzBA,EAAQsgB,YAAY51C,EAAMiB,QAC1B,IAAK,MAAM40C,KAAQ71C,EACjB21C,EAAKtgB,UAAUwgB,EAAMvgB,EAExB,EACDE,YAAY1D,GACV,MAAMgkB,EAAqB,GACrB70C,EAAS6wB,EAAOikB,aACtB,IAAK,IAAI/lC,EAAQ,EAAGA,EAAQ/O,EAAQ+O,IAClC8lC,EAASnxB,KAAKgxB,EAAKngB,YAAY1D,IAEjC,OAAOgkB,CACR,EACDlxC,OAAM,IACG,GAGb,EDhBA,SAAYuwB,GACVA,EAAAA,EAAA,KAAA,KAAA,MACD,CAFD,CAAYA,eAAAA,aAEX,CAAA,IENM,MAAM6gB,KAAyB,CACpC3gB,UAAUr1B,EAAgBs1B,GACxBA,EAAQ2gB,UAAUj2C,EAAQ,EAAI,EAC/B,EACDw1B,YAAY1D,GACmB,IAAtBA,EAAOokB,WAEhBtxC,OAAM,KACG,GCRL,SAAUuxC,MAASR,GACvB,MAAO,CACLtgB,UAAUr1B,EAAUs1B,GAClBqgB,EAAKtgB,UAAUr1B,EAAOs1B,EACvB,EACDE,YAAY1D,GACH6jB,EAAKngB,YAAY1D,GAE1BltB,OAAM,IACG+wC,EAAK/wC,SAGlB,CCZO,MAAMwxC,QAA2B,CACtC/gB,UAAUr1B,EAAes1B,GACvBA,EAAQ+gB,aAAar2C,EACtB,EACDw1B,YAAY1D,GACHA,EAAOwkB,cAEhB1xC,OAAM,IACG,GAOE2xC,QAA2B,CACtClhB,UAAUr1B,EAAes1B,GACvBA,EAAQkhB,aAAax2C,EACtB,EACDw1B,YAAY1D,GACHA,EAAO2kB,cAEhB7xC,OAAM,IACG,GCvBE8xC,MAAyB,CACpCrhB,UAAUr1B,EAAes1B,GACvBA,EAAQqhB,WAAWC,OAAO52C,GAC3B,EACDw1B,YAAY1D,GACH5E,OAAO4E,EAAO+kB,aAEvBjyC,OAAM,IACG,GAOEkyC,MAAyB,CACpCzhB,UAAUr1B,EAAes1B,GACvBA,EAAQyhB,WAAW/2C,EACpB,EACDw1B,YAAY1D,GACHA,EAAOklB,YAEhBpyC,OAAM,IACG,GAOEqyC,MAAyB,CACpC5hB,UAAUr1B,EAAes1B,GACvBA,EAAQ4hB,WAAWl3C,EACpB,EACDw1B,YAAY1D,GACHA,EAAOqlB,YAEhBvyC,OAAM,IACG,GAOEwyC,KAAwB,CACnC/hB,UAAUr1B,EAAes1B,GACvBA,EAAQ2gB,UAAUj2C,EACnB,EACDw1B,YAAY1D,GACHA,EAAOokB,WAEhBtxC,OAAM,IACG,GCrDEyyC,WAA8B,CACzChiB,UAAUr1B,EAAes1B,GACvBA,EAAQC,aAAY,IAAI+hB,aAAchzB,OAAOtkB,GAC9C,EACDw1B,YAAY1D,IACH,IAAIylB,aAActyB,OAAO6M,EAAO0lB,cAEzC5yC,OAAM,IACG,IAOE6yC,UAAYJ,WCMnB,SAAUK,KAAqBC,GACnC,MAAO,CACLtiB,UAAUr1B,EAAkBs1B,GAC1B,IAAK,MAAMsiB,KAAOD,EAEhBA,EAAKC,GAAKviB,UAAWr1B,EAAc43C,GAAMtiB,EAE5C,EACDE,YAAY1D,GACV,MAAM+lB,EAAsB,CAAA,EAC5B,IAAK,MAAMD,KAAOD,EAEdE,EAAiBD,GAAOD,EAAKC,GAAKpiB,YAAY1D,GAElD,OAAO+lB,CACR,EACDjzC,SACE,MAAMizC,EAAsB,CAAA,EAC5B,IAAK,MAAMD,KAAOD,EAEdE,EAAiBD,GAAOD,EAAKC,GAAKhzC,SAEtC,OAAOizC,CACR,EAEL,CC9CM,SAAUC,UAAaH,GAC3B,MAAO,CACLtiB,UAAUr1B,EAAsBs1B,GAC1Bt1B,GACFs1B,EAAQ2gB,UAAU,GAClB0B,EAAKtiB,UAAUr1B,EAAOs1B,IAEtBA,EAAQ2gB,UAAU,EAErB,EACDzgB,YAAY1D,GAEV,GADeA,EAAOokB,WAEpB,OAAOyB,EAAKniB,YAAY1D,EAE3B,EACDltB,SAEC,EAEL,CCbA,IAAiBmzC,QAAAA,QAqBhBA,aAAA,EArBgBA,QAAAA,QAAOA,UAAPA,QAAOA,QAqBvB,CAAA,GAlBcA,QAAO9sB,QAAG+qB,KAEV+B,QAAMnzB,OAAG6yB,UAETM,QAAKC,MAAG5B,QACR2B,QAAME,OAAG1B,QAETwB,QAAIG,KAAGd,KACPW,QAAKI,MAAGlB,MACRc,QAAGK,IAAGtB,MACNiB,QAAKrB,MAAG2B,MAERN,QAAM7qB,OAAGkpB,QAET2B,QAAIO,KAAGnC,MACP4B,QAAKv0B,MAAGkyB,OACRqC,QAAGQ,IAAGb,KACNK,QAAQS,SAAGV,UACzB,IAAAW,KAAA,CAAA,EAAAC,MAAA,CAAA,wGCjCD74C,OAAOC,eAAe44C,MAAS,aAAc,CAAE14C,OAAO,yFCAtD,IAAIuiB,EAAmBC,gBAAQA,eAAKD,kBAAqB1iB,OAAO+E,OAAM,SAAa6d,EAAGhc,EAAGic,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B7iB,OAAOC,eAAe2iB,EAAGE,EAAI,CAAEE,YAAY,EAAMC,IAAK,WAAa,OAAOrc,EAAEic,EAAG,GAClF,EAAA,SAAcD,EAAGhc,EAAGic,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BD,EAAEE,GAAMlc,EAAEic,EACb,GACGK,EAAgBP,gBAAQA,eAAKO,cAAiB,SAAStc,EAAG1G,GAC1D,IAAK,IAAIijB,KAAKvc,EAAa,YAANuc,GAAoBnjB,OAAOojB,UAAUC,eAAeC,KAAKpjB,EAASijB,IAAIT,EAAgBxiB,EAAS0G,EAAGuc,EAC3H,EACAnjB,OAAOC,eAAcC,EAAU,aAAc,CAAEC,OAAO,IACtDD,EAAA44C,aAAuB54C,EAAwB64C,cAAA74C,EAAA84C,cAAmB,EAClE91B,EAAaxe,eAAoBxE,GACjC,MAAM+4C,EAAetZ,WAAW9R,OAKhC,SAASmrB,EAASj3C,EAAGC,GAEjB,GAAID,IAAMC,EACN,OAAO,EACX,GAAID,aAAaskB,YAAcrkB,aAAaqkB,WAAY,CACpD,GAAItkB,EAAEiwB,aAAehwB,EAAEgwB,WACnB,OAAO,EAEX,IAAK,IAAI7vB,EAAI,EAAGA,EAAIJ,EAAEiwB,WAAY7vB,IAC9B,GAAIJ,EAAEI,KAAOH,EAAEG,GACX,OAAO,EAGf,OAAO,CACV,CACD,SAAI82C,GACIl3C,aAAak3C,GAAgBj3C,aAAai3C,IAEnCl3C,EAAEgK,OAAO/J,EAI3B,CACD9B,EAAA84C,SAAmBA,EAYnB94C,EAAA64C,cAPA,UAAwB9Q,GACpB,IAAK,MAAOiR,EAAMv1C,KAAWskC,EAAMkR,UAC/B,IAAK,MAAOC,EAAMv1C,KAAWF,EAAOw1C,eAC1B,CAACD,EAAME,EAAMv1C,EAG9B,EAsGD3D,EAAA44C,aA7FA,WAMI,MAAM7Q,EAAQ,IAAIyQ,IAKlB,SAASW,EAAYH,EAAME,EAAMl3B,EAAMo3B,GACnC,MAAMC,EAAYtR,EAAMhlB,IAAIi2B,GACtBtT,EAAYnlC,KAAKS,IAAIo4C,EAAiBC,GAAWt2B,IAAIm2B,IAAOxT,WAAa,GAC/E,GAAI2T,EACAA,EAAU/nB,IAAI4nB,EAAM,CAAExT,YAAW1jB,aAEhC,CACD,MAAMs3B,EAAe,IAAId,IACzBc,EAAahoB,IAAI4nB,EAAM,CAAExT,YAAW1jB,SACpC+lB,EAAMzW,IAAI0nB,EAAMM,EACnB,CACD,MAAO,CAAE5T,YAAW1jB,OACvB,CAgED,MAAO,CACHu3B,YA3DJ,SAAqBP,EAAME,EAAMl3B,GAE7B,MAAM0jB,GAAaqC,EAAMhlB,IAAIi2B,IAAOj2B,IAAIm2B,IAAOxT,WAAa,GAAK,EAEjE,OADAyT,EAAYH,EAAME,EAAMl3B,EAAM0jB,GACvB,CAAEsT,OAAME,OAAMl3B,OAAM0jB,YAC9B,EAuDG8T,eA7CJ,SAAwB1tB,GACpB,MAAMktB,KAAEA,EAAIE,KAAEA,EAAIl3B,KAAEA,EAAI0jB,UAAEA,GAAc5Z,EAClCzqB,EAAU0mC,EAAMhlB,IAAIi2B,IAAOj2B,IAAIm2B,GAErC,OAAK73C,GAAWA,EAAQqkC,UAAYA,GAChCyT,EAAYH,EAAME,EAAMl3B,EAAM0jB,GACvB5Z,GAGPzqB,EAAQqkC,UAAYA,EACb,CACHsT,OACAE,OACAl3B,KAAM3gB,EAAQ2gB,KACd0jB,UAAWrkC,EAAQqkC,WAIvBoT,EAASz3C,EAAQ2gB,KAAMA,GAChB8J,EAGX,SAAqBzqB,EAAS2gB,GAC1B,OAAO3gB,EAAU2gB,CACpB,CACGy3B,CAAYp4C,EAAQ2gB,KAAMA,GACnB,CACHg3B,OACAE,OACAl3B,KAAM3gB,EAAQ2gB,KACd0jB,UAAWrkC,EAAQqkC,YAG3ByT,EAAYH,EAAME,EAAMl3B,EAAM0jB,GAAW1jB,KAClC8J,EACV,EAWG4tB,SANJ,WACI,OAAO3R,CACV,EAMJ,eC1JD,IAAA4R,YAAAC,cAOA,SAASC,YAAYC,EAAqBC,GACxC,MAAMC,EAAaz5C,KAAKS,IAAI84C,EAAaC,GAAgB,KACzD,OAAsC,KAA/Bx5C,KAAK6jB,KAAK41B,EAAa,KAChC,CA+BA,MAAMC,uBAAyB,MASf,SAAAC,iBAAiBC,EAAmC,IAClE,MAAMC,EAAyBD,EAAQE,SAASC,eAAiB,EACjE,IAAIC,EAAmC,KACnCC,EAAyB,EAEzBL,EAAQM,SACVF,EAAgBJ,EAAQM,QAAQj2B,OAC5B21B,EAAQM,QAAQH,gBAClBE,EAAiBL,EAAQM,QAAQH,gBAE1BH,EAAQE,SACjBE,EAAgBJ,EAAQE,QAAQ71B,OAChCg2B,EAAiBL,EAAQE,QAAQn5C,QAAUi5C,EAAQE,QAAQ71B,OAAOtjB,QAElEq5C,EAAgB,IAAIp0B,WAClBg0B,EAAQO,iBAAmBT,wBAI/B,IAAIz1B,EAAqB+1B,EACrBI,EAAiB,IAAIC,SAASp2B,EAAOA,OAAQA,EAAOq2B,YACpDC,EAAkBN,EAClBO,EAAkBX,EAKtB,MAAMY,EAAS33C,IACb,GAAIy3C,EAAUz3C,EAASmhB,EAAOsN,WAAY,CACxC,MAAMmpB,EAAUpB,YAAYr1B,EAAOsN,WAAYgpB,EAAUz3C,GACnD0qB,EAAY,IAAI5H,WAAW80B,GACjCltB,EAAUuD,IAAI9M,GACdA,EAASuJ,EACT4sB,EAAO,IAAIC,SAASp2B,EAAOA,OAC5B,CAGD,OADAs2B,GAAWz3C,EACJy3C,EAAUz3C,CAAM,EAOnB63C,EAAS73C,IACb,GAAI03C,EAAU13C,EAASy3C,EACrB,MAAM,IAAI11B,MAAM,yCAIlB,OADA21B,GAAW13C,EACJ03C,EAAU13C,CAAM,EAGzB,MAAO,CAOLmhB,OAAM,IACGA,EAKT22B,aAAY,IACH32B,EAAOtjB,OAKhBk6C,cACEL,EAAU,EACVD,EAAU,CACX,EAIDO,kBAAiB,IACRN,EAKTO,mBAAkB,IACTR,EAMT7F,oBAAoB5xC,GACX63C,EAAM73C,GAKfqyB,eAAc,IACLolB,EAAUC,EAEnBxE,YAAW,IACFoE,EAAKzF,WAAWgG,EAAM,IAE/BxE,YAAW,IACFiE,EAAKY,WAAWL,EAAM,IAE/B/E,SAAQ,IACCwE,EAAKa,QAAQN,EAAM,IAE5B9D,UAAS,IACAuD,EAAKc,SAASP,EAAM,IAE7BjE,UAAS,IACA0D,EAAKe,SAASR,EAAM,IAE7BpE,UAAS,IACA6D,EAAKgB,YAAYT,EAAM,IAEhCU,UAAS,IACAjB,EAAKkB,SAASX,EAAM,IAE7BY,WAAU,IACDnB,EAAKoB,UAAUb,EAAM,IAE9BlF,WAAU,IACD2E,EAAKxF,UAAU+F,EAAM,IAE9Bc,WAAU,IACDrB,EAAKsB,aAAaf,EAAM,IAEjCzD,aACE,MAAMv2C,EAASy5C,EAAKxF,UAAU+F,EAAM,IACpC,OAAO12B,EAAO+L,SAAS2qB,EAAMh6C,GAASg6C,EAAM,GAC7C,EASDpG,qBAAqBzxC,GACZ23C,EAAM33C,GAKfqG,KAAI,IACKoxC,EASToB,SAAQ,IACC13B,EAAO+L,SAAS,EAAGuqB,GAQ5BqB,iBACE,OAAO,IAAIh2B,WAAW1D,KAAKy5B,WAC5B,EAED1mB,YAAYv1B,EAAmBkyB,GAAuB,GAChDA,GACF1P,KAAKozB,YAAY51C,EAAM6xB,YAGzB,MAAMpP,EAAIs4B,EAAM/6C,EAAM6xB,YACtBtN,EAAO8M,IAAIrxB,EAAOyiB,EACnB,EACD4zB,aAAar2C,GACX,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAK5F,WAAWryB,EAAGziB,EACpB,EACDw2C,aAAax2C,GACX,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAKyB,WAAW15B,EAAGziB,EACpB,EACDi2C,UAAUj2C,GACR,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAK0B,QAAQ35B,EAAGziB,EACjB,EACDk3C,WAAWl3C,GACT,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAK2B,SAAS55B,EAAGziB,EAClB,EACD+2C,WAAW/2C,GACT,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAK4B,SAAS75B,EAAGziB,EAClB,EACD22C,WAAW32C,GACT,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAK6B,YAAY95B,EAAGziB,EACrB,EACDw8C,WAAWx8C,GACT,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAK+B,SAASh6B,EAAGziB,EAClB,EACD08C,YAAY18C,GACV,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAKiC,UAAUl6B,EAAGziB,EACnB,EACD41C,YAAY51C,GACV,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAK3F,UAAUtyB,EAAGziB,EACnB,EACD48C,YAAY58C,GACV,MAAMyiB,EAAIs4B,EAAM,GAChBL,EAAKmC,aAAap6B,EAAGziB,EACtB,EAEDi1C,WAAWtvC,GACF+0C,EAAKzF,WAAWtvC,GAEzB21C,WAAW31C,GACF+0C,EAAKY,WAAW31C,GAEzB41C,QAAQ51C,GACC+0C,EAAKa,QAAQ51C,GAEtB61C,SAAS71C,GACA+0C,EAAKc,SAAS71C,GAEvB81C,SAAS91C,GACA+0C,EAAKe,SAAS91C,GAEvBm3C,SAASn3C,GACA+0C,EAAKgB,YAAY/1C,GAE1Bi2C,SAASj2C,GACA+0C,EAAKkB,SAASj2C,GAEvBm2C,UAAUn2C,GACD+0C,EAAKoB,UAAUn2C,GAExBuvC,UAAUvvC,GACD+0C,EAAKxF,UAAUvvC,GAExBo3C,UAAUp3C,GACD+0C,EAAKsB,aAAar2C,GAE3BmvC,WAAWnvC,EAAgB3F,GACzB06C,EAAK5F,WAAWnvC,EAAQ3F,EACzB,EACDm8C,WAAWx2C,EAAgB3F,GACzB06C,EAAKyB,WAAWx2C,EAAQ3F,EACzB,EACDo8C,QAAQz2C,EAAgB3F,GACtB06C,EAAK0B,QAAQz2C,EAAQ3F,EACtB,EACDq8C,SAAS12C,EAAgB3F,GACvB06C,EAAK2B,SAAS12C,EAAQ3F,EACvB,EACDs8C,SAAS32C,EAAgB3F,GACvB06C,EAAK4B,SAAS32C,EAAQ3F,EACvB,EACDg9C,SAASr3C,EAAgB3F,GACvB06C,EAAK6B,YAAY52C,EAAQ3F,EAC1B,EACDy8C,SAAS92C,EAAgB3F,GACvB06C,EAAK+B,SAAS92C,EAAQ3F,EACvB,EACD28C,UAAUh3C,EAAgB3F,GACxB06C,EAAKiC,UAAUh3C,EAAQ3F,EACxB,EACD+0C,UAAUpvC,EAAgB3F,GACxB06C,EAAK3F,UAAUpvC,EAAQ3F,EACxB,EACDi9C,UAAUt3C,EAAgB3F,GACxB06C,EAAKmC,aAAal3C,EAAQ3F,EAC3B,EAEL,CC1TM,IAAWk9C,aAAjB,SAAiBA,GACf,IAAY5E,EAwBZ,SAAgB6E,EAAS72B,GACvB,MAAMoT,EAAMpT,EAAImP,iBAChB,GAAIiE,EAAMwjB,EAAAE,cACR,OAAO,EAIT,QAAI1jB,EADkBpT,EAAI4uB,UAAU5uB,EAAI80B,qBAMzC,EApCW9C,EAAA4E,EAAI5E,OAAJ4E,OAQX,CAAA,IAPC5E,EAAA,SAAA,GAAA,WAGAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,iBAAA,GAAA,mBAEAA,EAAAA,EAAA,iBAAA,GAAA,mBAYW4E,EAAaE,cAAG,EAKbF,EAAAC,WAcAD,EAAAG,WAAhB,SAA2B/2B,GACzB,OAAK62B,EAAS72B,GAIP,CACLrlB,OAAQqlB,EAAIyvB,aACZJ,KAAMrvB,EAAIyvB,cALH,IAOV,CACF,CAjDD,CAAiBmH,cAAAA,YAiDhB,CAAA,IAED,IAAAI,cAAeJ,YChEEK,mBCHAC,qBCQDC,iBAAgBpI,OAC9BA,EAAMqI,WACNA,IAMA,MAAMC,EAAahF,YAAAA,eAEbiF,EAAqC,GAErCC,EAAwC,GA+C9C,SAASC,EAAyB99C,GAChC,MAAM+9C,EAAoBv6B,MAAM1gB,KAAK9C,GAErC,OADAA,EAAMiB,OAAS,EACR88C,CACR,CA6GD,OA7JAL,EAAWM,SACRC,WAAeA,EAAUC,WAQDC,EAR+BF,EAAUtI,KAc3D,SAA2ByI,GAChC,MAAM75B,EAAS01B,iBAAiB,CAC9BG,QAAS,CAAE71B,OAAQ65B,EAAc/D,cAAe,KAGlD,KAAO6C,cAAYC,SAAS54B,IAAS,CACnC,MAAM5e,EAAS4e,EAAO62B,oBAChBvvB,EAAUwyB,mBAAQ30B,KAAKnF,IAEvBoxB,KAAEA,EAAI2I,OAAEA,EAAMC,YAAEA,EAAWx8B,KAAEA,EAAI0jB,UAAEA,GAAc5Z,EACvD+xB,EAAiBj5B,KAAK,CACpBgxB,OACA2I,SACAC,cACAx8B,OACA0jB,YACA0Y,gBACAK,cAAej6B,EACZA,SACA+L,SAAS3qB,EAAQ4e,EAAO62B,sBAE9B,CACH,GA5BF,IAA2B+C,CAR+C,IA4JnE,CACLM,eAtDF,SAAwBC,GAEtB,MAAMC,EAAeb,EAAYD,GAC3Bt5B,EAAS01B,mBAEf,IAAK,MAAOqE,EAAQM,KAAiBF,EACnC,IAAK,MAAMH,KAAeK,EAAc,CACtC,MAAMC,EAAYxJ,EAAOyJ,aAAaP,GAChCQ,EAAkBF,EAAUG,IAAIV,GAClCO,EAAU5C,SAASqC,GAAQrC,WAC3B,KACEgD,EAAQtB,EAAWrE,YACvBgF,EACAC,EACAQ,GAEIp5C,EAAS4e,EAAO82B,qBAChB1F,EAAOkJ,EAAUG,IAAIV,GACvBpB,cAAY5E,KAAK4G,cACjBhC,cAAY5E,KAAK6G,iBACfC,EAA4D,CAChEzJ,OACA4I,cACAD,SACA7Y,UAAWwZ,EAAMxZ,WAEfiY,EAAW2B,MAAMz8C,GAAMA,EAAE08C,OAAOF,OAClCf,mBAAQ10B,MAAMgsB,EAAM2I,EAAQW,EAAMxZ,UAAWoZ,EAAWt6B,GACxDo6B,EAAah6B,KAAK,IACby6B,EACHZ,cAAej6B,EACZA,SACA+L,SAAS3qB,EAAQ4e,EAAO82B,wBAGhC,CAIH,MAAMkE,EAAkBtF,mBACxB,IAAK,MAAMgE,KAAaP,EAAY,CAClC6B,EAAgBpE,cAChB,IAAK,MAAMtvB,KAAW8yB,EAChBV,EAAUqB,OAAOzzB,IACnB0zB,EAAgBhqB,YAAY1J,EAAQ2yB,eAAe,GAGnDe,EAAgB91C,QAClBw0C,EAAUuB,KAAKD,EAAgBtD,WAElC,CACF,EAICwD,gBAzGF,WACE,MAAM1B,EAAoBD,EAAYF,GACtC,IAAK,MAAMK,KAAaP,EAAY,CAClC,MAAMn5B,EAAS01B,mBACf,IAAK,MAAMpuB,KAAWkyB,EAAmB,CACvC,MAAMh8B,KAAEA,EAAI0jB,UAAEA,EAAS8Y,YAAEA,EAAWD,OAAEA,EAAM3I,KAAEA,GAAS9pB,EACjD6zB,EAAuC,CAC3C3G,KAAMuF,EACNrF,KAAMsF,EACNx8B,KAAMA,GAAQ,KACd0jB,UAAWA,GAEPoZ,EAAYxJ,EAAOyJ,aAAaP,GAChCn9C,EAAUu8C,EAAWpE,eAAemG,GAG1C,GAAIA,IAAgBt+C,EAAS,CAC3B,MAAMu0C,EAAOkJ,EAAUG,IAAIV,GACvBpB,cAAY5E,KAAK4G,cACjBhC,cAAY5E,KAAK6G,iBACrBd,mBAAQ10B,MAAMgsB,EAAM2I,EAAQl9C,EAAQqkC,UAAWoZ,EAAWt6B,EAC3D,KAAM,CAEL,GAAIoxB,IAASuH,cAAY5E,KAAK6G,iBAC5BN,EAAUc,WAAWrB,OAChB,CACL,MAGMsB,EAAK3F,iBAHE,CACXG,QAAS,CAAE71B,OAAQsH,EAAQ9J,KAAOs4B,cAAe,KAKnDwE,EAAUgB,iBAAiBh0B,EAAQyyB,OAAQsB,GAC3Cf,EAAUiB,YACX,CAEDjC,EAAkBl5B,KAAKkH,EACxB,CACF,CAEGtH,EAAO9a,QACTw0C,EAAUuB,KAAKj7B,EAAO03B,WAEzB,CACF,EA+DH,CCnIM,SAAU8D,aACd15B,GAEA,OAAOxmB,OAAOktB,OAAO,IAAK1G,GAC5B,UCyIgB25B,gBAIdzB,EACA5G,EACAsI,GAGA,MAAMl+B,EAAO,IAAIw2B,IACX2H,EAAgB,IAAIC,IAEpBC,EAAgBnG,mBAKtB,SAASoG,IACP,OAAIJ,EACKtI,EAAKniB,YACVykB,iBAAiB,CACfO,QAAS,CACPj2B,OAAQ67B,EAAc77B,SACtB81B,cAAe+F,EAAc/E,yBAK5B1D,EAAK/yC,QAEf,CAED,SAAS07C,EAAatgD,GACpB,MAAO,IAAKqgD,OAAsBrgD,EACnC,CAED,OAvBIigD,GACFtI,EAAKtiB,UAAU4qB,EAAoBG,GAsB9B,CACL5K,IAAK+I,EACLgC,QAAS,WACP,OAAOF,GACR,EACDG,QAAS,SAAUlC,GACjB,OAAO4B,EAAclB,IAAIV,EAC1B,EACDU,IAAK,SAAUV,GACb,OAAOv8B,EAAKi9B,IAAIV,EACjB,EACDqB,WAAY,SAAUrB,GACpB,MAAMO,EAAY98B,EAAKe,IAAIw7B,GAG3B,OAFAv8B,EAAK0+B,OAAOnC,GACZ4B,EAAcl7C,IAAIs5C,GACXO,GAAa,IACrB,EACD6B,UAAW,SACTpC,GAEA,MAAMO,EAAY98B,EAAKe,IAAIw7B,GAC3B,OAAOO,EAAYkB,aAAalB,GAAa,IAC9C,EACD/7B,IAAK,SAAUw7B,GACb,MAAMO,EAAY98B,EAAKe,IAAIw7B,GAC3B,IAAKO,EACH,MAAM,IAAI15B,MACR,uBAAuBo5B,SAAmBD,eAG9C,OAAOyB,aAAalB,EACrB,EACDj6C,OAAQ,SACN05C,EACAt+C,GAGA,GADkB+hB,EAAKe,IAAIw7B,GAEzB,MAAM,IAAIn5B,MACR,sBAAsBo5B,SAAmBD,oBAG7C,MAAMqC,OACM/9B,IAAV5iB,EAAsBqgD,IAAoBC,EAAatgD,GAGzD,OAFA+hB,EAAKsP,IAAIitB,EAAQqC,GACjBT,EAAcl7C,IAAIs5C,GACXqC,CACR,EACDC,gBAAiB,SACftC,EACAt+C,GAEA,MAAM2gD,OACM/9B,IAAV5iB,EAAsBqgD,IAAoBC,EAAatgD,GAGzD,OAFA+hB,EAAKsP,IAAIitB,EAAQqC,GACjBT,EAAcl7C,IAAIs5C,GACXqC,CACR,EACDE,iBAAkB,SAAUvC,GAC1B,MAAMO,EAAY98B,EAAKe,IAAIw7B,GAC3B,OAAKO,GAGLqB,EAAcl7C,IAAIs5C,GACXO,GAHE,IAIV,EACDiC,WAAY,SAAUxC,GACpB,MAAMO,EAAYr8B,KAAKq+B,iBAAiBvC,GACxC,GAAkB,OAAdO,EACF,MAAM,IAAI15B,MACR,uBAAuBo5B,SAAmBD,eAG9C,OAAOO,CACR,EACDkC,SAAU,YACR,IAAK,MAAOzC,EAAQO,KAAc98B,OAC1B,CAACu8B,EAAQO,EAElB,EACDqB,cAAe,YACb,IAAK,MAAM5B,KAAU4B,QACb5B,CAET,EACDrC,SAASqC,GACP,MAAMO,EAAY98B,EAAKe,IAAIw7B,GAC3B,IAAKO,EACH,MAAM,IAAI15B,MACR,wBAAwBo5B,SAAmBD,eAI/C,MAAM/oB,EAAc0kB,mBAEpB,OADAtC,EAAKtiB,UAAUwpB,EAAWtpB,GACnBA,CACR,EACDyrB,kBAAkB1C,EAAgB/5B,GAChC,MAAMs6B,EAAY98B,EAAKe,IAAIw7B,GAC3B,IAAKO,EACH,MAAM,IAAI15B,MACR,iCAAiCo5B,SAAmBD,eAIxD3G,EAAKtiB,UAAUwpB,EAAWt6B,EAC3B,EACD08B,iBACE3C,EACA/5B,GAGA,IADkBxC,EAAKe,IAAIw7B,GAEzB,MAAM,IAAIn5B,MACR,gCAAgCo5B,SAAmBD,eAGvD,OAAO97B,KAAKq9B,iBAAiBvB,EAAQ/5B,EACtC,EACDs7B,iBACEvB,EACA/5B,GAEA,MAAMszB,EAAWF,EAAKniB,YAAYjR,GAGlC,OAFAxC,EAAKsP,IAAIitB,EAAQzG,GACjBqI,EAAcl7C,IAAIs5C,GACXzG,CACR,EACDiI,WAAY,WACVI,EAAcgB,OACf,EAEL,UCpWgBC,kBACd,MAAMC,EAAeC,OAAO7D,YAAY8D,uBAClCC,EAAgBF,OAAO7D,YAAYgE,wBACzC,MAAO,CACLC,eAAc,CAACC,GAAmB,IAC5BA,EACKH,EAAcE,iBAEdL,EAAaK,iBAGxBE,aAAarD,GAET8C,EAAaO,aAAarD,IAAWiD,EAAcI,aAAarD,GAGpEsD,eAAetD,GAEXd,YAAYqE,iBAAiBvD,IAC7B8C,EAAaU,sBAAsB9C,IAAIV,IACvCiD,EAAcO,sBAAsB9C,IAAIV,GAG5CwD,oBAAmB,IACV,IAAI3B,IAAI,IACViB,EAAaU,yBACbP,EAAcO,wBAIzB,CAEA,SAAST,OAAOU,GAKd,IAAIC,EAAgBD,EAAM,GAC1B,MAAME,EAA4B,IAAI9B,IAoBtC,MAAO,CACL2B,oBAAmB,IACV,IAAI3B,IAAI8B,GAEjBR,eAtBF,WACE,GAAIO,GAAiBD,EAAM,GACzB,MAAM,IAAI58B,MACR,uDAAuD48B,EAAM,OAAOA,EAAM,QAI9E,MAAMzD,EAAsB0D,EAI5B,OAHAA,IAEAC,EAAaj9C,IAAIs5C,GACVA,CACR,EAWCqD,aATF,SAAsBrD,GACpB,OAAO2D,EAAaxB,OAAOnC,EAC5B,EASH,ELpEA,SAAiBf,GAoBFA,EAAqB2E,sBAAG,GAKrB3E,EAAA5zB,MAAhB,SACEgsB,EACA2I,EACA7Y,EACA0c,EACA77B,GAGA,MAAM87B,EAAqB97B,EAAIuuB,qBAC7BqI,cAAYE,cAAgBG,EAAA2E,uBAI1BvM,IAASuH,cAAY5E,KAAK4G,eAC5BiD,EAAoBnB,kBAAkB1C,EAAQh4B,GAEhD,MAAM+7B,EAAgB/7B,EAAI7c,OAAS24C,EAGnC97B,EAAIyuB,UAAUqN,EAAoBC,GAClC/7B,EAAIyuB,UAAUqN,EAAqB,EAAGzM,GAGtCrvB,EAAIyuB,UAAUqN,EAAqB,EAAG9D,GACtCh4B,EAAIyuB,UAAUqN,EAAqB,GAAID,EAAoB3M,KAC3DlvB,EAAI22B,UAAUmF,EAAqB,GAAIxL,OAAOnR,IAC9Cnf,EAAIyuB,UACFqN,EAAqB,GACrBC,EAAgB9E,EAAA2E,sBAAwBhF,cAAYE,cAEvD,EAEeG,EAAA7zB,KAAhB,SACEpD,GAEA,MAAMg8B,EAASpF,cAAYG,WAAW/2B,GAEtC,IAAKg8B,EACH,OAAO,KAGT,MAAMC,EAAS,IACVD,EACHhE,OAAQh4B,EAAIyvB,aACZwI,YAAaj4B,EAAI0wB,YACjBvR,UAAWvY,OAAO5G,EAAIy1B,eAGxB,OAAIuG,EAAO3M,OAASuH,cAAY5E,KAAK6G,iBAC5BoD,EAGF,IACFA,EACHxgC,KAAMuE,EAAIkxB,aAEb,CACF,CAlFD,CAAiB+F,qBAAAA,mBAkFhB,KCrFD,SAAiBC,GA0Bf,SAASgF,EAAUlE,EAAgByD,GACjC,OAAOzD,GAAUyD,EAAM,IAAMzD,GAAUyD,EAAM,EAC9C,CArBYvE,EAAYiF,aAAG,WACfjF,EAAyBkF,0BAAG,IAC5BlF,EAAwBmF,yBAAG,IAE3BnF,EAAAoF,wBAAuC,CAClD,EACApF,EAAAmF,yBAA2B,GAGhBnF,EAAA8D,sBAAqC,CAChD9D,EAAAmF,yBACAnF,EAAAkF,0BAA4B,GAGjBlF,EAAAgE,uBAAsC,CACjDhE,EAAAkF,0BACAlF,EAAAiF,cAOcjF,EAAAqF,gBAAhB,SAAgCvE,GAC9B,OAAOkE,EAAUlE,EAAQd,EAAAgE,uBAC1B,EAEehE,EAAAsF,eAAhB,SAA+BxE,GAC7B,OAAOkE,EAAUlE,EAAQd,EAAA8D,sBAC1B,EAEe9D,EAAAqE,iBAAhB,SAAiCvD,GAC/B,OAAOkE,EAAUlE,EAAQd,EAAAoF,wBAC1B,CACF,CAzCD,CAAiBpF,cAAAA,YAyChB,CAAA,IKtCM,MAAMuF,yBAA2B,aAQxBC,kBACd,MAAMC,EAAoB,GAE1B,SAASC,IACPD,EAAQC,MAAK,CAACthD,EAAGC,IAAMA,EAAEshD,SAAWvhD,EAAEuhD,UACvC,CAmCD,MAAO,CACLn+C,IAlCF,SAAaqe,EAAc8/B,EAAkBx3B,GAC3C,GAAIs3B,EAAQG,MAAMvN,GAASA,EAAKxyB,KAAOA,IACrC,MAAM,IAAI8B,MAAM,wBACX,GAAIwG,GAAQs3B,EAAQG,MAAMvN,GAASA,EAAKlqB,OAASA,IACtD,MAAM,IAAIxG,MAAM,4BAGlB89B,EAAQt+B,KAAK,CACXtB,KACA8/B,WACAx3B,SAEFu3B,GACD,EAsBCG,OApBF,SAAgBC,GACd,IAAItzC,GAAS,EAQb,OALEA,EADsB,iBAAbszC,EACDL,EAAQM,WAAW1N,GAASA,EAAKlqB,OAAS23B,IAE1CL,EAAQM,WAAW1N,GAASA,EAAKxyB,KAAOigC,KAGnC,IAAXtzC,IAIJizC,EAAQt9B,OAAO3V,EAAO,GACtBkzC,KACO,EACR,EAKCM,WAAU,IACDP,EAGb,CCxCA,SAASQ,YACP,MAAMC,EAAkBvC,kBAClBwC,EAAuB,IAAIpL,IAG3BqL,EAAoB,IAAIrL,IAIxB0K,EAAUD,kBAchB,SAASa,EAAUnC,GAAmB,GAGpC,OADegC,EAAgBjC,eAAeC,EAE/C,CAgBD,SAAS3S,EAIP4I,EACA4G,EACA0B,GAEA,GAAI0D,EAAqB7gC,IAAIy7B,GAC3B,MAAM,IAAIp5B,MAAM,aAAao5B,sBAE/B,MAAMuF,EAAeC,gBACnBxF,EACA5G,EACAsI,GAGF,OADA0D,EAAqBtyB,IAAIktB,EAAauF,GAC/BA,CACR,CAmED,MAAO,CACLF,oBACAD,uBACAE,YACAG,iBAvGF,WACE,OAAOH,GAAU,EAClB,EAsGClC,aApGF,SAAsBrD,GACpB,IAAK,MAAM,CAAGO,KAAc8E,EACtB9E,EAAUG,IAAIV,IAChBO,EAAUc,WAAWrB,GAIzB,OAAOoF,EAAgB/B,aAAarD,EACrC,EA6FC2F,UA3HF,SACE5gC,EACA8/B,EAAmBJ,yBACnBp3B,GAEAs3B,EAAQj+C,IAAIqe,EAAI8/B,EAAUx3B,EAC3B,EAsHC63B,WAfF,WACE,OAAOP,EAAQO,YAChB,EAcCU,aArHF,SAAsBZ,GACpB,OAAOL,EAAQI,OAAOC,EACvB,kBA0CD,SAIE3L,EACA4G,EACA0B,GAEA,OAAOlR,EACLgJ,QAAAA,QAAQQ,IAAIZ,GACZ4G,EACA0B,EAEH,EA8DClR,4BACAoV,gBAjDF,aAEKC,GACH,IAAK,MAAO9F,KAAW+F,KAQzB,aACKx+B,GAEH,MAAOy+B,KAAsBC,GAAwB1+B,EACrD,IAAK,MAAOy4B,KAAWgG,EAAkBvD,WAAY,CACnD,IAAIyD,GAAU,EACd,IAAK,MAAMC,KAAgBF,EACzB,IAAKE,EAAazF,IAAIV,GAAS,CAC7BkG,GAAU,EACV,KACD,CAGCA,SACI,CAAClG,KAAWz4B,GAErB,CACF,CAzBsC6+B,IAAwBN,QACrD,CAAC9F,KAAW+F,EAAUM,KAAK53C,GAAMA,EAAE+V,IAAIw7B,KAKhD,EAyCCQ,aA9DF,SACEP,GAEA,MAAMM,EAAY8E,EAAqB7gC,IAAIy7B,GAC3C,IAAKM,EACH,MAAM,IAAI15B,MACR,aAAao5B,6FAGjB,OAAOM,CACR,EAqDCtJ,0BAjBF,SAAmCgJ,GACjCoF,EAAqBlD,OAAOlC,EAC7B,EAiBH,UAUgBqG,QAAOlH,WAAEA,GAA8B,IACrD,MAAMrI,EAASoO,YACToB,EAAapH,gBAAgB,CAAEpI,SAAQqI,WAAYA,GAAc,KACjEoH,EAAiB1P,oBAAoBC,GA2C3C,MAAO,CACLwO,UAAWxO,EAAOwO,UAClBG,iBAAkB3O,EAAO2O,iBACzBrC,aAActM,EAAOsM,aACrBsC,UAAW5O,EAAO4O,UAClBC,aAAc7O,EAAO6O,aACrBlE,gBAAiB3K,EAAO2K,gBACxBjR,0BAA2BsG,EAAOtG,0BAClCoV,gBAAiB9O,EAAO8O,gBACxBrF,aAAczJ,EAAOyJ,aACrBvJ,0BAA2BF,EAAOE,0BAClCwP,OApDF,SAAgBC,GACdH,EAAWpF,kBAEX,IAAK,MAAMwF,KAAU5P,EAAOmO,aAC1ByB,EAAO5hC,GAAG2hC,GAKZ,MAAME,EAA2B,CAC/BJ,EAAe9S,oBACf8S,EAAexS,mBAEX6S,EAAsBD,EAAyBP,KAAK9O,GAASA,EAAKL,MACxE,IAAK,MAAMiP,KAAgBS,EACzB,IAAK,MAAO5G,KAAWjJ,EAAO8O,gBAAgBM,GAC5CA,EAAa9E,WAAWrB,GAO5B,MAAM8G,EAAW,IAAI7M,IACrB,IAAK,MAAOgG,EAAa8G,KAAehQ,EAAOsO,qBAC7C,IAAIwB,EAAoBG,SAAS/G,GAEjC,IAAK,MAAMD,KAAU+G,EAAWnF,gBACzBkF,EAASpG,IAAIV,IAChB8G,EAAS/zB,IAAIitB,EAAQ,IAAI6B,KAE3BiF,EAAStiC,IAAIw7B,GAASt5C,IAAIu5C,GAG9BsG,EAAWpG,eAAe2G,GAE1B,IAAK,MAAOG,EAAcF,KAAehQ,EAAOsO,qBAC9C0B,EAAWvF,YAEd,EAcC0F,WAAY,EACZV,iBAEJ,CCnOA,MAAMW,2BAA6B,CACjCC,oBAAqB3N,QAAOA,QAAC7qB,OAC7By4B,iBAAkB5N,QAAOA,QAAC7qB,QAGtB04B,0BAA4B,KAC5BC,gCAAkC,KAClCC,oBAAsB,GAAK,GAE3B,SAAUC,0BAA0B1Q,GACxC,MAAM2Q,EAA+B3Q,EAAO2K,gBAC1CyF,2BACAG,2BAcF,OAXAI,EAA6BphD,OAAOywC,EAAOmQ,YAE3CnQ,EAAO4O,WAAU,KACf,MAAMnc,EAAQke,EAA6BljC,IAAIuyB,EAAOmQ,YAClD1d,EAAM6d,iBAAmB7d,EAAM4d,sBACjCM,EAA6BlF,WAC3BzL,EAAOmQ,YACPE,oBAAsB5d,EAAM6d,iBAC/B,GACAG,qBAEI,SAAUxH,EAAgB2H,GAC/B,MAAMpH,EAAYxJ,EAAOyP,eAAe/R,oBAAoB2N,UAC1DrL,EAAOmQ,YAGT,IAAK3G,EAAW,OAAO,EAEvB,MAAMpX,EAAWoX,EAAUpX,SAGrBye,EAAOC,eACX1e,IAEAwe,EACA3H,GAGI1qC,EAAKuyC,eACT1e,IAEAwe,EACA3H,GAGF,IAAK4H,EAAM,OAAO,EAClB,IAAKtyC,EAAI,OAAO,EAEhB,MAAMk0B,EAAQke,EAA6BljC,IAAIuyB,EAAOmQ,YAGtD,OACEU,EAAKzgB,UAAY7xB,EAAG6xB,WACpB7xB,EAAG6xB,UAAYqC,EAAM4d,sBAErBM,EAA6BlF,WAC3BzL,EAAOmQ,YACPG,iBAAmBrlD,KAAKS,IAAI6S,EAAG6xB,UAAWqC,EAAM6d,mBAC3C,EAGX,CACF,CAEM,SAAUS,8BAA8B/Q,GAC5C,MAAMgR,EAAqChR,EAAO2K,gBAChDyF,2BACAI,iCAcF,OAXAQ,EAAmCzhD,OAAOywC,EAAOmQ,YAEjDnQ,EAAO4O,WAAU,KACf,MAAMnc,EAAQue,EAAmCvjC,IAAIuyB,EAAOmQ,YACxD1d,EAAM6d,iBAAmB7d,EAAM4d,sBACjCW,EAAmCvF,WACjCzL,EAAOmQ,YACPE,oBAAsB5d,EAAM6d,iBAC/B,GACAG,qBAEI,SACLxH,EACA2H,EACAK,GAEA,MAAMzH,EAAYxJ,EAAOyP,eAAe/R,oBAAoB2N,UAC1DrL,EAAOmQ,YAGT,IAAK3G,EAAW,OAAO,EAEvB,MAGM0H,EAAUJ,eAHCtH,EAAUpX,SAKzB6e,EACAL,EACA3H,GAGF,IAAKiI,EAAS,OAAO,EAErB,MAAMze,EAAQue,EAAmCvjC,IAAIuyB,EAAOmQ,YAE5D,OAAIe,EAAQ9gB,UAAYqC,EAAM4d,sBAC5BW,EAAmCvF,WACjCzL,EAAOmQ,YACPG,iBAAmBrlD,KAAKS,IAAIwlD,EAAQ9gB,UAAWqC,EAAM6d,mBAChD,EAIX,CACF,CAEA,SAASQ,eACP1e,EACA6e,EACAL,EACA3H,GAEA,IAAIkI,EAGJ,IAAK,MAAMD,KAAW9e,EAElB8e,EAAQthB,SAAWghB,GACnBM,EAAQze,QAAUwe,KAChBhI,GAAWiI,EAAQ1e,KAAOyW,IAAWiI,EAAQ1e,IAAIN,aAE9Cif,GAAmBD,EAAQ9gB,WAAa+gB,EAAgB/gB,aAC3D+gB,EAAkBD,GAIxB,OAAOC,CACT,UCnJgBC,yBAMd,MAAM9Q,EAAO,oBACb,MAAO,CACL6J,KANF,YAAiBkH,GAEhB,EAKC/Q,OACA2J,OAAOzzB,GAEDA,EAAQsyB,gBAAkBxI,KAMrB9pB,EAGf,CCvBA,IAAY86B,iBAAZ,SAAYA,GACXA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,SAAA,MAAA,WACAA,EAAAA,EAAA,YAAA,MAAA,cACAA,EAAAA,EAAA,aAAA,MAAA,eACAA,EAAAA,EAAA,mBAAA,MAAA,qBACAA,EAAAA,EAAA,YAAA,MAAA,cACAA,EAAAA,EAAA,UAAA,MAAA,YACAA,EAAAA,EAAA,SAAA,MAAA,WACAA,EAAAA,EAAA,WAAA,MAAA,aACAA,EAAAA,EAAA,eAAA,MAAA,iBACAA,EAAAA,EAAA,cAAA,MAAA,gBACAA,EAAAA,EAAA,UAAA,MAAA,YACAA,EAAAA,EAAA,SAAA,MAAA,WACAA,EAAAA,EAAA,aAAA,MAAA,eACAA,EAAAA,EAAA,aAAA,MAAA,eACAA,EAAAA,EAAA,SAAA,MAAA,WACAA,EAAAA,EAAA,cAAA,MAAA,gBACAA,EAAAA,EAAA,oBAAA,MAAA,sBACAA,EAAAA,EAAA,YAAA,MAAA,cACAA,EAAAA,EAAA,kBAAA,MAAA,oBACAA,EAAAA,EAAA,WAAA,MAAA,aACAA,EAAAA,EAAA,cAAA,MAAA,gBACAA,EAAAA,EAAA,oBAAA,MAAA,sBACAA,EAAAA,EAAA,YAAA,MAAA,cACAA,EAAAA,EAAA,QAAA,MAAA,UACAA,EAAAA,EAAA,cAAA,MAAA,gBACAA,EAAAA,EAAA,YAAA,MAAA,cACAA,EAAAA,EAAA,UAAA,MAAA,YACAA,EAAAA,EAAA,OAAA,MAAA,SACAA,EAAAA,EAAA,YAAA,MAAA,cACAA,EAAAA,EAAA,oBAAA,MAAA,qBACA,CAhCD,CAAYA,kBAAAA,gBAgCX,KC7BD,MAAMC,aAAe/mD,OAAOgnD,OAAOF,iBAChCrH,QAAQ19C,GAAmB,iBAANA,IACrB+iD,IAAIz3B,iBAES45B,0BACd,GAAmB,oBAARC,IAET,MAAM,IAAI5hC,MACR,mEAIJ,MAAMwwB,EAAO,WACb,MAAO,CACLA,OACA6J,KAAK3zB,GAEHk7B,IACGC,QAAQ,0BAA2B,iBAAkB,CACpD,CAAEjlC,KAAM,IAAImE,WAAW2F,MAExBo7B,MAAMF,IAAIG,MACd,EACD5H,OAAOzzB,GAEDA,EAAQsyB,gBAAkBxI,MAKzBiR,aAAatB,SAASz5B,EAAQ0yB,gBAI1B1yB,GAGf,OCnCas7B,mBAkCXl7B,YACEb,EACAg8B,GAAoB,EACpB/lD,EACAgmD,GAEA7kC,KAAK8kC,UAAUl8B,EAAMg8B,EAAmB/lD,EAAQgmD,EACjD,CAUMC,UACLl8B,EACAg8B,GAAoB,EACpB/lD,EACAgmD,GAMA,OAJA7kC,KAAK4I,KAAOA,EACZ5I,KAAK4kC,kBAAoBA,EACzB5kC,KAAKnhB,OAASA,EACdmhB,KAAK6kC,cAAgBA,EACd7kC,IACR,QAOU+kC,SAeXt7B,YAIS0H,EAIAvI,EAIAo8B,EAAa,MARbhlC,KAAQmR,SAARA,EAIAnR,KAAI4I,KAAJA,EAIA5I,KAAKglC,MAALA,EAvBFhlC,KAAoBilC,sBAAG,EAGvBjlC,KAAmBklC,qBAAG,CAqBzB,QAaOC,WAWX17B,YAAY27B,GAVJplC,KAAAqlC,WAAa,IAAIrkC,MAIjBhB,KAAgBslC,iBAA6C,KAOnEtlC,KAAKulC,YAAc,IAAIZ,mBAAmB,GAEtCS,IACFplC,KAAKslC,iBAAmBF,EAE3B,CAWM5iD,IACL2uB,EACAvI,GAAe,EACf48B,GAAc,EACdR,EAAa,KACbS,GAAwB,GAExB,IAAKt0B,EACH,OAAO,KAGT,MAAMu0B,EAAW,IAAIX,SAAS5zB,EAAUvI,EAAMo8B,GAa9C,OAZAU,EAAST,qBAAuBQ,EAE5BD,EACFxlC,KAAKqlC,WAAWM,QAAQD,GAExB1lC,KAAKqlC,WAAWljC,KAAKujC,GAGnB1lC,KAAKslC,kBACPtlC,KAAKslC,iBAAiBI,GAGjBA,CACR,CAOME,QACLz0B,GAEA,OAAOnR,KAAKxd,IAAI2uB,OAAU/Q,OAAWA,OAAWA,GAAW,EAC5D,CAOMygC,OAAO6E,GACZ,IAAKA,EACH,OAAO,EAKT,OAAe,IAFD1lC,KAAKqlC,WAAWtvB,QAAQ2vB,KAGpC1lC,KAAK6lC,iBAAiBH,IACf,EAIV,CAQMI,eACL30B,EACA6zB,GAEA,IAAK,IAAIx3C,EAAQ,EAAGA,EAAQwS,KAAKqlC,WAAW5mD,OAAQ+O,IAClD,GACEwS,KAAKqlC,WAAW73C,GAAO2jB,WAAaA,KAClC6zB,GAASA,IAAUhlC,KAAKqlC,WAAW73C,GAAOw3C,OAG5C,OADAhlC,KAAK6lC,iBAAiB7lC,KAAKqlC,WAAW73C,KAC/B,EAIX,OAAO,CACR,CAWMu4C,gBACLC,EACAp9B,GAAe,EACf/pB,EACAgmD,GAEA,IAAK7kC,KAAKqlC,WAAW5mD,OACnB,OAAO,EAGT,MAAM6mC,EAAQtlB,KAAKulC,YACnBjgB,EAAM1c,KAAOA,EACb0c,EAAMzmC,OAASA,EACfymC,EAAMuf,cAAgBA,EACtBvf,EAAMsf,mBAAoB,EAC1Btf,EAAM2gB,gBAAkBD,EAExB,IAAK,MAAME,KAAOlmC,KAAKqlC,WACrB,IAAIa,EAAIhB,sBAIJgB,EAAIt9B,KAAOA,IACTs9B,EAAIlB,MACN1f,EAAM2gB,gBAAkBC,EAAI/0B,SAAS5P,MAAM2kC,EAAIlB,MAAO,CACpDgB,EACA1gB,IAGFA,EAAM2gB,gBAAkBC,EAAI/0B,SAAS60B,EAAW1gB,GAG9C4gB,EAAIjB,sBACNjlC,KAAK6lC,iBAAiBK,IAGtB5gB,EAAMsf,mBACR,OAAO,EAGX,OAAO,CACR,CAeMuB,2BACLH,EACAp9B,GAAe,EACf/pB,EACAgmD,GAGA,IAAIrkC,EAAkBW,QAAQC,QAAQ4kC,GAGtC,IAAKhmC,KAAKqlC,WAAW5mD,OACnB,OAAO+hB,EAGT,MAAM8kB,EAAQtlB,KAAKulC,YAiCnB,OAhCAjgB,EAAM1c,KAAOA,EACb0c,EAAMzmC,OAASA,EACfymC,EAAMuf,cAAgBA,EACtBvf,EAAMsf,mBAAoB,EAG1B5kC,KAAKqlC,WAAW7J,SAAS0K,IACnB5gB,EAAMsf,mBAGNsB,EAAIhB,qBAGJgB,EAAIt9B,KAAOA,IAEXpI,EADE0lC,EAAIlB,MACFxkC,EAAE4lC,MAAMC,IACV/gB,EAAM2gB,gBAAkBI,EACjBH,EAAI/0B,SAAS5P,MAAM2kC,EAAIlB,MAAO,CAACgB,EAAW1gB,OAG/C9kB,EAAE4lC,MAAMC,IACV/gB,EAAM2gB,gBAAkBI,EACjBH,EAAI/0B,SAAS60B,EAAW1gB,MAG/B4gB,EAAIjB,sBACNjlC,KAAK6lC,iBAAiBK,GAEzB,IAII1lC,EAAE4lC,MAAK,IACLJ,GAEV,CAQMM,eACLZ,EACAM,EACAp9B,GAAe,GAEf,MAAM0c,EAAQtlB,KAAKulC,YACnBjgB,EAAM1c,KAAOA,EACb0c,EAAMsf,mBAAoB,EAE1Bc,EAASv0B,SAAS60B,EAAW1gB,EAC9B,CAMMihB,eACL,OAAOvmC,KAAKqlC,WAAW5mD,OAAS,CACjC,CAKMigD,QACL1+B,KAAKqlC,WAAa,IAAIrkC,MACtBhB,KAAKslC,iBAAmB,IACzB,CAMMviD,QACL,MAAM9D,EAAS,IAAIkmD,WAInB,OAFAlmD,EAAOomD,WAAarlC,KAAKqlC,WAAW/iC,MAAM,GAEnCrjB,CACR,CAOMunD,gBAAgB59B,GAAe,GACpC,IAAK,MAAMs9B,KAAOlmC,KAAKqlC,WACrB,GAAIa,EAAIt9B,KAAOA,GAAQs9B,EAAIt9B,OAASA,EAClC,OAAO,EAGX,OAAO,CACR,CAEOi9B,iBAAiBH,GACvBA,EAAST,sBAAuB,EAChCS,EAASR,qBAAsB,EAC/B/jC,QAAQC,UAAUglC,KAAKjhC,KAAKhE,QAAQC,UAApCD,EAA+CslC,SAC7CzmC,KAAK0mC,QAAQhB,IAEhB,CAIOgB,QAAQhB,GACd,IAAKA,EACH,OAAO,EAGT,MAAMl4C,EAAQwS,KAAKqlC,WAAWtvB,QAAQ2vB,GAEtC,OAAe,IAAXl4C,IACFwS,KAAKqlC,WAAWliC,OAAO3V,EAAO,IACvB,EAIV,EClaH,SAASm5C,iBAAiBC,GACxB,MAAO,KACc,oBAARrC,KAAqBA,IAAIsC,UAAUD,EAAU,CAE5D,CAOO,MAAME,uBAAyB,IAAI3B,WACxCwB,iBAAiB,iBAMNI,aAAeD,uBAOfE,uBAAyB,IAAI7B,WACxCwB,iBAAiB,iBAMNM,aAAeD,uBAOfE,uBAAyB,IAAI/B,WACxCwB,iBAAiB,eAONQ,6BAA+B,IAAIhC,WAE9CwB,iBAAiB,qBAMNS,aAAe,IAAIjC,WAC9BwB,iBAAiB,eAONU,iBAAmB,IAAIlC,WAClCwB,iBAAiB,mBAONW,4BAA8B,IAAInC,WAE7CwB,iBAAiB,oBAMNY,+BAAiC,IAAIpC,WAEhDwB,iBAAiB,uBAMNa,yBAA2B,IAAIrC,WAE1CwB,iBAAiB,mBAMNc,0BAA4B,IAAItC,WAE3CwB,iBAAiB,2BAOHe,wBACK,oBAARnD,KACTA,IAAIoD,SAASlL,IACX,OAAQA,EAAMtJ,MACZ,IAAK,eAIH,YAHA2T,uBAAuBf,gBACrBtJ,EAAMl9B,MAIV,IAAK,eAIH,YAHAynC,uBAAuBjB,gBACrBtJ,EAAMl9B,MAIV,IAAK,aAIH,YAHA2nC,uBAAuBnB,gBACrBtJ,EAAMl9B,MAIV,IAAK,mBAIH,YAHA4nC,6BAA6BpB,gBAC3BtJ,EAAMl9B,MAIV,IAAK,aAAc,CACjB,MAAMqoC,EAAYnL,EAAMl9B,KAExB,YADA6nC,aAAarB,gBAAgB6B,EAE9B,CACD,IAAK,iBAIH,YAHAP,iBAAiBtB,gBACftJ,EAAMl9B,MAIV,IAAK,kBAIH,YAHA+nC,4BAA4BvB,gBAC1BtJ,EAAMl9B,MAIV,IAAK,qBAIH,YAHAgoC,+BAA+BxB,gBAC7BtJ,EAAMl9B,MAIV,IAAK,iBAIH,YAHAioC,yBAAyBzB,gBACvBtJ,EAAMl9B,MAIV,IAAK,gBAIH,YAHAkoC,0BAA0B1B,gBACxBtJ,EAAMl9B,MAIX,GAGP,CC/JA,MAAMsoC,kBAAoBvD,0BACbzR,OAASuP,OAAO,CAC3BlH,WAAY,CAAC2M,kBAAmB5D,4BAGlC,GAAmB,oBAARM,IAAqB,CAG9BkC,eAAeqB,IACb,MAAM12B,QAAiBmzB,IAAIC,QACzB,0BACA,sBACA,IAGF,GAAIpzB,EAAS7R,MAAM9gB,QACbopD,kBAAkBnM,UACpB,IAAK,MAAMqM,KAAa32B,EAAS7R,KAC/BsoC,kBAAkBnM,UAAUqM,EAInC,CAhBDxD,IAAIyD,WAAW,0BAA2B,CAAA,GAAIvD,MAAMF,IAAIG,OAkBxDH,IAAI0D,UAAUzF,IACZsF,IACGrD,MAAMF,IAAIG,OACVwD,SAAQ,IAAMrV,OAAO0P,OAAOC,IAAI,IAGrCkF,uBACD,CAEY,MAAA7nD,IAAM0kD,IAAI1kD,IACV6kD,MAAQH,IAAIG,MAEzB,IAAIyD,qBAEO,KAQK,SAAAC,iBAAiBtM,EAAgB2H,GAI/C,OAHK0E,uBACHA,qBAAuB5E,0BAA0B1Q,SAE5CsV,qBAAqBrM,EAAQ2H,EACtC,CAEA,IAAI4E,yBAMO,cASKC,qBACdxM,EACA2H,EACAK,GAKA,OAHKuE,2BACHA,yBAA2BzE,8BAA8B/Q,SAEpDwV,yBAAyBvM,EAAQ2H,EAAcK,EACxD,CC9EM,SAAUyE,uBAAuB1V,GACrC,MAAMI,EAAYJ,EAAOyP,eAAerP,UACxC,MAAO,KACL,IAAK,MAAM6I,KAAU7I,EAAUyK,gBAAiB,CAC9C,IAAIpyC,EAAY2nC,EAAUiL,UAAUpC,GACpC,KAAOxwC,GAAaA,EAAUy9B,QAAQ,CACpC,GAAIz9B,EAAUy9B,SAAW+S,EAAQ,CAC/ByI,IAAIG,MAAM,wCAAwC5I,KAClD,KACD,CACCxwC,EAAY2nC,EAAUiL,UAAU5yC,EAAUy9B,OAE7C,CACF,EAEL,OC7BakK,UAAYJ,OAAOyP,eAAerP,UAElCzG,SAAWqG,OAAOyP,eAAe9V,SAEjCG,YAAckG,OAAOyP,eAAe3V,YAEpCG,aAAe+F,OAAOyP,eAAexV,aAErCG,mBAAqB4F,OAAOyP,eAAerV,mBAE3CG,YAAcyF,OAAOyP,eAAelV,YAEpCG,UAAYsF,OAAOyP,eAAe/U,UAElCG,SAAWmF,OAAOyP,eAAe5U,SAEjCG,WAAagF,OAAOyP,eAAezU,WAEnCG,eAAiB6E,OAAOyP,eAAetU,eAEvCG,cAAgB0E,OAAOyP,eAAenU,cAEtCG,UAAYuE,OAAOyP,eAAehU,UAElCG,SAAWoE,OAAOyP,eAAe7T,SAEjCG,aAAeiE,OAAOyP,eAAe1T,aAErCG,aAAe8D,OAAOyP,eAAevT,aAErCG,SAAW2D,OAAOyP,eAAepT,SAEjCG,cAAgBwD,OAAOyP,eAAejT,cAEtCG,oBAAsBqD,OAAOyP,eAAe9S,oBAE5CG,YAAckD,OAAOyP,eAAe3S,YAEpCG,kBAAoB+C,OAAOyP,eAAexS,kBAE1CG,WAAa4C,OAAOyP,eAAerS,WAEnCG,cAAgByC,OAAOyP,eAAelS,cAEtCG,oBAAsBsC,OAAOyP,eAAe/R,oBAE5CG,YAAcmC,OAAOyP,eAAe5R,YAEpCG,QAAUgC,OAAOyP,eAAezR,QAEhCG,cAAgB6B,OAAOyP,eAAetR,cAEtCG,YAAc0B,OAAOyP,eAAenR,YAEpCG,UAAYuB,OAAOyP,eAAehR,UAElCG,OAASoB,OAAOyP,eAAe7Q,OAE/BG,YAAciB,OAAOyP,eAAe1Q,YAEpCG,oBAAsBc,OAAOyP,eAAevQ,oBC7DzD,IAAiByW,WAAAA,QA+DhBA,gBAAA,EA/DgBA,WAAAA,QAAAA,aAAAA,QAAAA,WA+DhB,CAAA,GA7DaA,WAAAvV,UAAYJ,OAAOyP,eAAerP,UAElCuV,WAAAhc,SAAWqG,OAAOyP,eAAe9V,SAEjCgc,WAAA7b,YAAckG,OAAOyP,eAAe3V,YAEpC6b,WAAA1b,aAAe+F,OAAOyP,eAAexV,aAErC0b,WAAAvb,mBAAqB4F,OAAOyP,eAAerV,mBAE3Cub,WAAApb,YAAcyF,OAAOyP,eAAelV,YAEpCob,WAAAjb,UAAYsF,OAAOyP,eAAe/U,UAElCib,WAAA9a,SAAWmF,OAAOyP,eAAe5U,SAEjC8a,WAAA3a,WAAagF,OAAOyP,eAAezU,WAEnC2a,WAAAxa,eAAiB6E,OAAOyP,eAAetU,eAEvCwa,WAAAra,cAAgB0E,OAAOyP,eAAenU,cAEtCqa,WAAAla,UAAYuE,OAAOyP,eAAehU,UAElCka,WAAA/Z,SAAWoE,OAAOyP,eAAe7T,SAEjC+Z,WAAA5Z,aAAeiE,OAAOyP,eAAe1T,aAErC4Z,WAAAzZ,aAAe8D,OAAOyP,eAAevT,aAErCyZ,WAAAtZ,SAAW2D,OAAOyP,eAAepT,SAEjCsZ,WAAAnZ,cAAgBwD,OAAOyP,eAAejT,cAEtCmZ,WAAAhZ,oBAAsBqD,OAAOyP,eAAe9S,oBAE5CgZ,WAAA7Y,YAAckD,OAAOyP,eAAe3S,YAEpC6Y,WAAA1Y,kBAAoB+C,OAAOyP,eAAexS,kBAE1C0Y,WAAAvY,WAAa4C,OAAOyP,eAAerS,WAEnCuY,WAAApY,cAAgByC,OAAOyP,eAAelS,cAEtCoY,WAAAjY,oBAAsBsC,OAAOyP,eAAe/R,oBAE5CiY,WAAA9X,YAAcmC,OAAOyP,eAAe5R,YAEpC8X,WAAA3X,QAAUgC,OAAOyP,eAAezR,QAEhC2X,WAAAxX,cAAgB6B,OAAOyP,eAAetR,cAEtCwX,WAAArX,YAAc0B,OAAOyP,eAAenR,YAEpCqX,WAAAlX,UAAYuB,OAAOyP,eAAehR,UAElCkX,WAAA/W,OAASoB,OAAOyP,eAAe7Q,OAE/B+W,WAAA5W,YAAciB,OAAOyP,eAAe1Q,YAEpC4W,WAAAzW,oBAAsBc,OAAOyP,eAAevQ,oBC9D1D,IAAI0W,yBAAoD,KACpDC,gCAAwE,KAExEC,iBAAwD,cAK5CC,qBAId,OAHKD,mBACHA,iBAAmB,IAAIxD,YAElBwD,gBACT,CAEA,SAASE,iCACP,IAAKH,gCAAiC,CACpCA,gCAAkCnE,IAAIyD,WACpC,mCACA,CAAE,GAGCU,gCAAgCtC,MAAM0C,IACzCL,yBAA2BK,CAAC,IAG9B,MAAMpD,EAAWkD,qBAEjBrE,IAAIsC,UAAU,SACdtC,IAAIoD,SAASlL,IACQ,UAAfA,EAAMtJ,MACRuS,EAASK,gBAAgBtJ,EAAMl9B,KAChC,GAEJ,CACD,OAAOmpC,+BACT,OAMaK,WAKXt/B,cAJQzJ,KAAYgpC,aAAa,GACzBhpC,KAASipC,WAAG,EACZjpC,KAAQkpC,UAAG,EAGZL,iCAAiCzC,MAAK,KACzCpmC,KAAKipC,WAAY,EACjBjpC,KAAKmpC,OAAO,GAEf,CAEDpmC,GACEsG,EACA8H,GAEA,OAAOy3B,qBAAqBpmD,KAAKukB,IAC/B,IACE,MAAM9iB,EAAImlD,KAAKC,MAAMtiC,EAAEsC,SAEnBplB,EAAEolB,UAAYA,GAChB8H,EAASltB,EAAEqlD,QAASviC,EAAEwiC,OAOzB,CALC,MAAOxiC,GACPw9B,IAAIG,MACF,gCAAmC39B,EAAYsC,SAAW,IAC1DtC,EAEH,IAEJ,CAGDyiC,QAAQngC,GACNrJ,KAAKgpC,aAAa7mC,KAAKkH,GAEnBrJ,KAAKipC,WACPjpC,KAAKmpC,OAER,CAED/lC,KAAKiG,EAAiBigC,GACpB,MAAMG,EAAgBL,KAAKM,UAAU,CAAErgC,UAASigC,YAChDtpC,KAAKwpC,QAAQC,GACbb,qBAAqB7C,gBAAgB,CACnC18B,QAASogC,EACTF,OAAQ,QAEX,CAEOJ,QACN,GAAiC,IAA7BnpC,KAAKgpC,aAAavqD,OAAc,OACpC,IAAKuhB,KAAKipC,UAAW,OACrB,IAAKR,yBAA0B,OAC/B,GAAIzoC,KAAKkpC,SAAU,OAEnB,MAAM7/B,EAAUrJ,KAAKgpC,aAAaW,QAElC3pC,KAAKkpC,UAAW,EAEhB3E,IAAIC,QAAQiE,yBAAyBmB,UAAW,OAAQ,CAACvgC,IAAU+8B,MAChEllB,IACClhB,KAAKkpC,UAAW,EAChBlpC,KAAKmpC,OAAO,IAEbpiC,IACC/G,KAAKkpC,UAAW,CAAK,GAG1B,EACF3rD,QAAAivC,SAAAA,SAAAjvC,QAAAovC,YAAAA,YAAApvC,QAAAuvC,aAAAA,aAAAvvC,QAAA0vC,mBAAAA,mBAAA1vC,QAAA6vC,YAAAA,YAAA7vC,QAAAgwC,UAAAA,UAAAhwC,QAAAmwC,SAAAA,SAAAnwC,QAAAswC,WAAAA,WAAAtwC,QAAAywC,eAAAA,eAAAzwC,QAAA4wC,cAAAA,cAAA5wC,QAAAG,QAAAmsD,cAAAnsD,QAAAH,QAAA6kD,OAAAA,OAAA7kD,QAAA+wC,UAAAA,UAAA/wC,QAAAkxC,SAAAA,SAAAlxC,QAAAqxC,aAAAA,aAAArxC,QAAAwxC,aAAAA,aAAAxxC,QAAAwrD,WAAAA,WAAAxrD,QAAA2xC,SAAAA,SAAA3xC,QAAA4nD,WAAAA,WAAA5nD,QAAAwnD,SAAAA,SAAAxnD,QAAAonD,mBAAAA,mBAAApnD,QAAA8xC,cAAAA,cAAA9xC,QAAAiyC,oBAAAA,oBAAAjyC,QAAAoyC,YAAAA,YAAApyC,QAAAuyC,kBAAAA,kBAAAvyC,QAAA0yC,WAAAA,WAAA1yC,QAAA6yC,cAAAA,cAAA7yC,QAAAgzC,oBAAAA,oBAAAhzC,QAAAmzC,YAAAA,YAAAnzC,QAAAyI,WAAA6jD,cAAA7jD,WAAAzI,QAAAE,QAAAosD,cAAApsD,QAAAF,QAAAszC,QAAAA,QAAAtzC,QAAAyzC,cAAAA,cAAAzzC,QAAA4zC,YAAAA,YAAA5zC,QAAA+zC,UAAAA,UAAA/zC,QAAA01C,UAAAA,UAAA11C,QAAAk0C,OAAAA,OAAAl0C,QAAAq0C,YAAAA,YAAAr0C,QAAAsE,QAAAgoD,cAAAhoD,QAAAtE,QAAAw0C,oBAAAA,oBAAAx0C,QAAAmqD,sBAAAA,sBAAAnqD,QAAAgrD,uBAAAA,uBAAAhrD,QAAAggD,aAAAA,aAAAhgD,QAAAs1C,OAAAA,OAAAt1C,QAAAmnD,MAAAA,MAAAnnD,QAAAqrD,mBAAAA,mBAAArrD,QAAA+qD,qBAAAA,qBAAA/qD,QAAAqmD,8BAAAA,8BAAArmD,QAAAsC,IAAAA,IAAAtC,QAAAwpD,aAAAA,aAAAxpD,QAAAupD,uBAAAA,uBAAAvpD,QAAA0pD,aAAAA,aAAA1pD,QAAAypD,uBAAAA,uBAAAzpD,QAAAkqD,0BAAAA,0BAAAlqD,QAAA+pD,4BAAAA,4BAAA/pD,QAAAgqD,+BAAAA,+BAAAhqD,QAAA4pD,6BAAAA,6BAAA5pD,QAAA8pD,iBAAAA,iBAAA9pD,QAAAiqD,yBAAAA,yBAAAjqD,QAAA2pD,uBAAAA,uBAAA3pD,QAAA6pD,aAAAA,aAAA7pD,QAAA6qD,iBAAAA,iBAAA7qD,QAAAgmD,0BAAAA,0BAAAlmD,OAAAC,eAAAC,QAAA,aAAA,CAAAC,OAAA,GAAA,GAAAwiB,KAAAlT,KAAAkT,KAAAlT,MAAA,CAAA"}