{"version":3,"file":"index.min.js","sources":["../node_modules/@dcl/ecs-math/dist/Vector3.js","../node_modules/@dcl/ecs-math/dist/Scalar.js","../node_modules/@dcl/ecs-math/dist/types.js","../node_modules/@dcl/ecs-math/dist/Quaternion.js","../node_modules/@dcl/ecs-math/dist/index.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../src/components/generated/pb/Animator.gen.ts","../src/components/generated/Animator.gen.ts","../src/components/generated/pb/AudioSource.gen.ts","../src/components/generated/AudioSource.gen.ts","../src/components/generated/pb/AvatarAttach.gen.ts","../src/components/generated/AvatarAttach.gen.ts","../src/components/generated/pb/common/Vector3.gen.ts","../src/components/generated/pb/AvatarModifierArea.gen.ts","../src/components/generated/AvatarModifierArea.gen.ts","../node_modules/long/src/long.js","../src/components/generated/pb/common/Color3.gen.ts","../src/components/generated/pb/AvatarShape.gen.ts","../src/components/generated/AvatarShape.gen.ts","../src/components/generated/pb/Billboard.gen.ts","../src/components/generated/Billboard.gen.ts","../src/components/generated/pb/BoxShape.gen.ts","../src/components/generated/BoxShape.gen.ts","../src/components/generated/pb/CameraMode.gen.ts","../src/components/generated/CameraMode.gen.ts","../src/components/generated/pb/CameraModeArea.gen.ts","../src/components/generated/CameraModeArea.gen.ts","../src/components/generated/pb/CylinderShape.gen.ts","../src/components/generated/CylinderShape.gen.ts","../src/components/generated/pb/GLTFShape.gen.ts","../src/components/generated/GLTFShape.gen.ts","../src/components/generated/pb/Material.gen.ts","../src/components/generated/Material.gen.ts","../src/components/generated/pb/MeshRenderer.gen.ts","../src/components/generated/MeshRenderer.gen.ts","../src/components/generated/pb/NFTShape.gen.ts","../src/components/generated/NFTShape.gen.ts","../src/components/generated/pb/OnPointerDown.gen.ts","../src/components/generated/OnPointerDown.gen.ts","../src/components/generated/pb/OnPointerDownResult.gen.ts","../src/components/generated/OnPointerDownResult.gen.ts","../src/components/generated/pb/OnPointerUp.gen.ts","../src/components/generated/OnPointerUp.gen.ts","../src/components/generated/pb/OnPointerUpResult.gen.ts","../src/components/generated/OnPointerUpResult.gen.ts","../src/components/generated/pb/PlaneShape.gen.ts","../src/components/generated/PlaneShape.gen.ts","../src/components/generated/pb/PointerLock.gen.ts","../src/components/generated/PointerLock.gen.ts","../src/components/generated/pb/SphereShape.gen.ts","../src/components/generated/SphereShape.gen.ts","../src/components/generated/pb/TextShape.gen.ts","../src/components/generated/TextShape.gen.ts","../src/components/generated/pb/UiText.gen.ts","../src/components/generated/UiText.gen.ts","../src/components/generated/pb/VisibilityComponent.gen.ts","../src/components/generated/VisibilityComponent.gen.ts","../src/components/generated/index.gen.ts","../src/components/legacy/Transform.ts","../src/components/index.ts","../src/schemas/Array.ts","../src/schemas/basic/Boolean.ts","../src/schemas/basic/Enum.ts","../src/schemas/basic/Float.ts","../src/schemas/basic/Integer.ts","../src/schemas/basic/String.ts","../src/schemas/Map.ts","../src/schemas/Optional.ts","../src/schemas/index.ts","../node_modules/@dcl/crdt/dist/types.js","../node_modules/@dcl/crdt/dist/index.js","../src/serialization/ByteBuffer/index.ts","../src/serialization/wireMessage.ts","../src/serialization/crdt/componentOperation.ts","../src/engine/entity-utils.ts","../src/systems/crdt/index.ts","../src/engine/readonly.ts","../src/engine/component.ts","../src/engine/entity.ts","../src/engine/systems.ts","../src/engine/index.ts","../src/components/generated/ids.gen.ts","../src/systems/crdt/transports/rendererTransport.ts","../src/systems/crdt/transports/networkTransport.ts","../src/runtime/initialization.ts","../src/components/generated/global.gen.ts","../src/components/generated/global.namespace.gen.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector3 = void 0;\n/**\n * @public\n */\nvar Vector3;\n(function (Vector3) {\n    /**\n     * Creates a new Vector3 object from the given x, y, z (floats) coordinates.\n     * @param x - defines the first coordinates (on X axis)\n     * @param y - defines the second coordinates (on Y axis)\n     * @param z - defines the third coordinates (on Z axis)\n     */\n    function create(\n    /**\n     * Defines the first coordinates (on X axis)\n     */\n    x = 0, \n    /**\n     * Defines the second coordinates (on Y axis)\n     */\n    y = 0, \n    /**\n     * Defines the third coordinates (on Z axis)\n     */\n    z = 0) {\n        return { x, y, z };\n    }\n    Vector3.create = create;\n    /**\n     * Returns a new Vector3 as the result of the addition of the two given vectors.\n     * @param vector1 - the first vector\n     * @param vector2 - the second vector\n     * @returns the resulting vector\n     */\n    function add(vector1, vector2) {\n        return {\n            x: vector1.x + vector2.x,\n            y: vector1.y + vector2.y,\n            z: vector1.z + vector2.z\n        };\n    }\n    Vector3.add = add;\n    /**\n     * Returns a new Vector3 as the result of the substraction of the two given vectors.\n     * @returns the resulting vector\n     */\n    function subtract(minuend, subtrahend) {\n        return {\n            x: minuend.x - subtrahend.x,\n            y: minuend.y - subtrahend.y,\n            z: minuend.z - subtrahend.z\n        };\n    }\n    Vector3.subtract = subtract;\n    /**\n     * Returns a new Vector3 as the result of the substraction of the two given vectors.\n     * @returns the resulting vector\n     */\n    function subtractToRef(minuend, subtrahend, result) {\n        result.x = minuend.x - subtrahend.x;\n        result.y = minuend.y - subtrahend.y;\n        result.z = minuend.z - subtrahend.z;\n    }\n    Vector3.subtractToRef = subtractToRef;\n    /**\n     * Returns a new Vector3 with the other sign\n     * @returns the resulting vector\n     */\n    function opposite(value) {\n        return { x: -value.x, y: -value.y, z: -value.z };\n    }\n    Vector3.opposite = opposite;\n    /**\n     * Copy source into dest\n     *\n     */\n    function copy(source, dest) {\n        dest.x = source.x;\n        dest.y = source.y;\n        dest.z = source.z;\n    }\n    Vector3.copy = copy;\n    /**\n     * Returns a new Vector3 with the same value\n     * @returns the resulting vector\n     */\n    function clone(source) {\n        return Object.assign({}, source);\n    }\n    Vector3.clone = clone;\n    // Properties\n    /**\n     * Gets the length of the Vector3\n     * @returns the length of the Vecto3\n     */\n    function length(vector) {\n        return Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);\n    }\n    Vector3.length = length;\n    /**\n     * Gets the squared length of the Vector3\n     * @returns squared length of the Vector3\n     */\n    function lengthSquared(vector) {\n        return vector.x * vector.x + vector.y * vector.y + vector.z * vector.z;\n    }\n    Vector3.lengthSquared = lengthSquared;\n    /**\n     * Returns a new Vector3 set with the current Vector3 coordinates multiplied by the float \"scale\"\n     * @param scale - defines the multiplier factor\n     * @returns a new Vector3\n     */\n    function scaleToRef(vector, scale, result) {\n        result.x = vector.x * scale;\n        result.y = vector.y * scale;\n        result.z = vector.z * scale;\n    }\n    Vector3.scaleToRef = scaleToRef;\n    /**\n     * Returns a new Vector3 set with the current Vector3 coordinates multiplied by the float \"scale\"\n     * @param scale - defines the multiplier factor\n     * @returns a new Vector3\n     */\n    function scale(vector, scale) {\n        return create(vector.x * scale, vector.y * scale, vector.z * scale);\n    }\n    Vector3.scale = scale;\n    /**\n     * Normalize the current Vector3 with the given input length.\n     * Please note that this is an in place operation.\n     * @param len - the length of the vector\n     * @returns the current updated Vector3\n     */\n    function normalizeFromLength(vector, len) {\n        const result = create(0, 0, 0);\n        normalizeFromLengthToRef(vector, len, result);\n        return result;\n    }\n    Vector3.normalizeFromLength = normalizeFromLength;\n    /**\n     * Normalize the current Vector3 with the given input length.\n     * Please note that this is an in place operation.\n     * @param len - the length of the vector\n     * @returns the current updated Vector3\n     */\n    function normalizeFromLengthToRef(vector, len, result) {\n        if (len === 0 || len === 1.0) {\n            copy(vector, result);\n            return;\n        }\n        scaleToRef(vector, 1.0 / len, result);\n    }\n    Vector3.normalizeFromLengthToRef = normalizeFromLengthToRef;\n    /**\n     * Normalize the current Vector3.\n     * Please note that this is an in place operation.\n     * @returns the current updated Vector3\n     */\n    function normalize(vector) {\n        return normalizeFromLength(vector, length(vector));\n    }\n    Vector3.normalize = normalize;\n    /**\n     * Normalize the current Vector3.\n     * Please note that this is an in place operation.\n     * @returns the current updated Vector3\n     */\n    function normalizeToRef(vector, result) {\n        normalizeFromLengthToRef(vector, length(vector), result);\n    }\n    Vector3.normalizeToRef = normalizeToRef;\n    /**\n     * Returns the dot product (float) between the vectors \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @returns the dot product\n     */\n    function dot(left, right) {\n        return left.x * right.x + left.y * right.y + left.z * right.z;\n    }\n    Vector3.dot = dot;\n    /**\n     * Rotates current Vector3 based on the given quaternion, but applies the rotation to target Vector3.\n     * @param q - defines the Quaternion\n     * @param result - defines the target Vector3\n     * @returns the current Vector3\n     */\n    function rotate(vector, q) {\n        const { x, y, z } = vector;\n        const { x: qx, y: qy, z: qz, w: qw } = q;\n        // calculate quat * vector\n        const ix = qw * x + qy * z - qz * y;\n        const iy = qw * y + qz * x - qx * z;\n        const iz = qw * z + qx * y - qy * x;\n        const iw = -qx * x - qy * y - qz * z;\n        // calculate result * inverse quat\n        return {\n            x: ix * qw + iw * -qx + iy * -qz - iz * -qy,\n            y: iy * qw + iw * -qy + iz * -qx - ix * -qz,\n            z: iz * qw + iw * -qz + ix * -qy - iy * -qx\n        };\n    }\n    Vector3.rotate = rotate;\n    /**\n     * Returns a new Vector3 located for \"amount\" (float) on the linear interpolation between the vectors \"start\" and \"end\"\n     * @param start - defines the start value\n     * @param end - defines the end value\n     * @param amount - max defines amount between both (between 0 and 1)\n     * @returns the new Vector3\n     */\n    function lerp(start, end, amount) {\n        const result = create(0, 0, 0);\n        lerpToRef(start, end, amount, result);\n        return result;\n    }\n    Vector3.lerp = lerp;\n    /**\n     * Sets the given vector \"result\" with the result of the linear interpolation from the vector \"start\" for \"amount\" to the vector \"end\"\n     * @param start - defines the start value\n     * @param end - defines the end value\n     * @param amount - max defines amount between both (between 0 and 1)\n     * @param result - defines the Vector3 where to store the result\n     */\n    function lerpToRef(start, end, amount, result) {\n        result.x = start.x + (end.x - start.x) * amount;\n        result.y = start.y + (end.y - start.y) * amount;\n        result.z = start.z + (end.z - start.z) * amount;\n    }\n    Vector3.lerpToRef = lerpToRef;\n    /**\n     * Returns a new Vector3 as the cross product of the vectors \"left\" and \"right\"\n     * The cross product is then orthogonal to both \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @returns the cross product\n     */\n    function cross(left, right) {\n        const result = Vector3.Zero();\n        Vector3.crossToRef(left, right, result);\n        return result;\n    }\n    Vector3.cross = cross;\n    /**\n     * Sets the given vector \"result\" with the cross product of \"left\" and \"right\"\n     * The cross product is then orthogonal to both \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @param result - defines the Vector3 where to store the result\n     */\n    function crossToRef(left, right, result) {\n        result.x = left.y * right.z - left.z * right.y;\n        result.y = left.z * right.x - left.x * right.z;\n        result.z = left.x * right.y - left.y * right.x;\n    }\n    Vector3.crossToRef = crossToRef;\n    /**\n     * Returns a new Vector3 set to (0.0, 0.0, 0.0)\n     * @returns a new empty Vector3\n     */\n    function Zero() {\n        return create(0.0, 0.0, 0.0);\n    }\n    Vector3.Zero = Zero;\n    /**\n     * Returns a new Vector3 set to (1.0, 1.0, 1.0)\n     * @returns a new unit Vector3\n     */\n    function One() {\n        return create(1.0, 1.0, 1.0);\n    }\n    Vector3.One = One;\n    /**\n     * Returns a new Vector3 set tolengthSquared (0.0, 1.0, 0.0)\n     * @returns a new up Vector3\n     */\n    function Up() {\n        return create(0.0, 1.0, 0.0);\n    }\n    Vector3.Up = Up;\n    /**\n     * Returns a new Vector3 set to (0.0, -1.0, 0.0)\n     * @returns a new down Vector3\n     */\n    function Down() {\n        return create(0.0, -1.0, 0.0);\n    }\n    Vector3.Down = Down;\n    /**\n     * Returns a new Vector3 set to (0.0, 0.0, 1.0)\n     * @returns a new forward Vector3\n     */\n    function Forward() {\n        return create(0.0, 0.0, 1.0);\n    }\n    Vector3.Forward = Forward;\n    /**\n     * Returns a new Vector3 set to (0.0, 0.0, -1.0)\n     * @returns a new forward Vector3\n     */\n    function Backward() {\n        return create(0.0, 0.0, -1.0);\n    }\n    Vector3.Backward = Backward;\n    /**\n     * Returns a new Vector3 set to (1.0, 0.0, 0.0)\n     * @returns a new right Vector3\n     */\n    function Right() {\n        return create(1.0, 0.0, 0.0);\n    }\n    Vector3.Right = Right;\n    /**\n     * Returns a new Vector3 set to (-1.0, 0.0, 0.0)\n     * @returns a new left Vector3\n     */\n    function Left() {\n        return create(-1.0, 0.0, 0.0);\n    }\n    Vector3.Left = Left;\n})(Vector3 = exports.Vector3 || (exports.Vector3 = {}));\n//# sourceMappingURL=Vector3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Scalar = void 0;\n/**\n * Two pi constants convenient for computation.\n */\nconst TwoPi = Math.PI * 2;\n/**\n * Boolean : true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\n * @param a - number\n * @param b - number\n * @param epsilon - (default = 1.401298E-45)\n * @returns true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\n */\nfunction withinEpsilon(a, b, epsilon = 1.401298e-45) {\n    const num = a - b;\n    return -epsilon <= num && num <= epsilon;\n}\n/**\n * Returns a string : the upper case translation of the number i to hexadecimal.\n * @param i - number\n * @returns the upper case translation of the number i to hexadecimal.\n */\nfunction toHex(i) {\n    const str = i.toString(16);\n    if (i <= 15) {\n        return ('0' + str).toUpperCase();\n    }\n    return str.toUpperCase();\n}\n/**\n * Returns -1 if value is negative and +1 is value is positive.\n * @param _value - the value\n * @returns the value itself if it's equal to zero.\n */\nfunction sign(value) {\n    const _value = +value; // convert to a number\n    if (_value === 0 || isNaN(_value)) {\n        return _value;\n    }\n    return _value > 0 ? 1 : -1;\n}\n/**\n * Returns the value itself if it's between min and max.\n * Returns min if the value is lower than min.\n * Returns max if the value is greater than max.\n * @param value - the value to clmap\n * @param min - the min value to clamp to (default: 0)\n * @param max - the max value to clamp to (default: 1)\n * @returns the clamped value\n */\nfunction clamp(value, min = 0, max = 1) {\n    return Math.min(max, Math.max(min, value));\n}\n/**\n * the log2 of value.\n * @param value - the value to compute log2 of\n * @returns the log2 of value.\n */\nfunction log2(value) {\n    return Math.log(value) * Math.LOG2E;\n}\n/**\n * Loops the value, so that it is never larger than length and never smaller than 0.\n *\n * This is similar to the modulo operator but it works with floating point numbers.\n * For example, using 3.0 for t and 2.5 for length, the result would be 0.5.\n * With t = 5 and length = 2.5, the result would be 0.0.\n * Note, however, that the behaviour is not defined for negative numbers as it is for the modulo operator\n * @param value - the value\n * @param length - the length\n * @returns the looped value\n */\nfunction repeat(value, length) {\n    return value - Math.floor(value / length) * length;\n}\n/**\n * Normalize the value between 0.0 and 1.0 using min and max values\n * @param value - value to normalize\n * @param min - max to normalize between\n * @param max - min to normalize between\n * @returns the normalized value\n */\nfunction normalize(value, min, max) {\n    return (value - min) / (max - min);\n}\n/**\n * Denormalize the value from 0.0 and 1.0 using min and max values\n * @param normalized - value to denormalize\n * @param min - max to denormalize between\n * @param max - min to denormalize between\n * @returns the denormalized value\n */\nfunction denormalize(normalized, min, max) {\n    return normalized * (max - min) + min;\n}\n/**\n * Calculates the shortest difference between two given angles given in degrees.\n * @param current - current angle in degrees\n * @param target - target angle in degrees\n * @returns the delta\n */\nfunction deltaAngle(current, target) {\n    let num = repeat(target - current, 360.0);\n    if (num > 180.0) {\n        num -= 360.0;\n    }\n    return num;\n}\n/**\n * PingPongs the value t, so that it is never larger than length and never smaller than 0.\n * @param tx - value\n * @param length - length\n * @returns The returned value will move back and forth between 0 and length\n */\nfunction pingPong(tx, length) {\n    const t = repeat(tx, length * 2.0);\n    return length - Math.abs(t - length);\n}\n/**\n * Interpolates between min and max with smoothing at the limits.\n *\n * This function interpolates between min and max in a similar way to Lerp. However, the interpolation will gradually speed up\n * from the start and slow down toward the end. This is useful for creating natural-looking animation, fading and other transitions.\n * @param from - from\n * @param to - to\n * @param tx - value\n * @returns the smooth stepped value\n */\nfunction smoothStep(from, to, tx) {\n    let t = clamp(tx);\n    t = -2.0 * t * t * t + 3.0 * t * t;\n    return to * t + from * (1.0 - t);\n}\n/**\n * Moves a value current towards target.\n *\n * This is essentially the same as Mathf.Lerp but instead the function will ensure that the speed never exceeds maxDelta.\n * Negative values of maxDelta pushes the value away from target.\n * @param current - current value\n * @param target - target value\n * @param maxDelta - max distance to move\n * @returns resulting value\n */\nfunction moveTowards(current, target, maxDelta) {\n    let result = 0;\n    if (Math.abs(target - current) <= maxDelta) {\n        result = target;\n    }\n    else {\n        result = current + sign(target - current) * maxDelta;\n    }\n    return result;\n}\n/**\n * Same as MoveTowards but makes sure the values interpolate correctly when they wrap around 360 degrees.\n *\n * Variables current and target are assumed to be in degrees. For optimization reasons, negative values of maxDelta\n *  are not supported and may cause oscillation. To push current away from a target angle, add 180 to that angle instead.\n * @param current - current value\n * @param target - target value\n * @param maxDelta - max distance to move\n * @returns resulting angle\n */\nfunction moveTowardsAngle(current, target, maxDelta) {\n    const num = deltaAngle(current, target);\n    let result = 0;\n    if (-maxDelta < num && num < maxDelta) {\n        result = target;\n    }\n    else {\n        result = moveTowards(current, current + num, maxDelta);\n    }\n    return result;\n}\n/**\n * Creates a new scalar with values linearly interpolated of \"amount\" between the start scalar and the end scalar\n * @param start - start value\n * @param end - target value\n * @param amount - amount to lerp between\n * @returns the lerped value\n */\nfunction lerp(start, end, amount) {\n    return start + (end - start) * amount;\n}\n/**\n * Same as Lerp but makes sure the values interpolate correctly when they wrap around 360 degrees.\n * The parameter t is clamped to the range [0, 1]. Variables a and b are assumed to be in degrees.\n * @param start - start value\n * @param end - target value\n * @param amount - amount to lerp between\n * @returns the lerped value\n */\nfunction lerpAngle(start, end, amount) {\n    let num = repeat(end - start, 360.0);\n    if (num > 180.0) {\n        num -= 360.0;\n    }\n    return start + num * clamp(amount);\n}\n/**\n * Calculates the linear parameter t that produces the interpolant value within the range [a, b].\n * @param a - start value\n * @param b - target value\n * @param value - value between a and b\n * @returns the inverseLerp value\n */\nfunction inverseLerp(a, b, value) {\n    let result = 0;\n    if (a !== b) {\n        result = clamp((value - a) / (b - a));\n    }\n    else {\n        result = 0.0;\n    }\n    return result;\n}\n/**\n * Returns a new scalar located for \"amount\" (float) on the Hermite spline defined by the scalars \"value1\", \"value3\", \"tangent1\", \"tangent2\".\n * {@link http://mathworld.wolfram.com/HermitePolynomial.html}\n * @param value1 - spline value\n * @param tangent1 - spline value\n * @param value2 - spline value\n * @param tangent2 - spline value\n * @param amount - input value\n * @returns hermite result\n */\nfunction hermite(value1, tangent1, value2, tangent2, amount) {\n    const squared = amount * amount;\n    const cubed = amount * squared;\n    const part1 = 2.0 * cubed - 3.0 * squared + 1.0;\n    const part2 = -2.0 * cubed + 3.0 * squared;\n    const part3 = cubed - 2.0 * squared + amount;\n    const part4 = cubed - squared;\n    return value1 * part1 + value2 * part2 + tangent1 * part3 + tangent2 * part4;\n}\n/**\n * Returns a random float number between and min and max values\n * @param min - min value of random\n * @param max - max value of random\n * @returns random value\n */\nfunction randomRange(min, max) {\n    if (min === max) {\n        return min;\n    }\n    return Math.random() * (max - min) + min;\n}\n/**\n * This function returns percentage of a number in a given range.\n *\n * RangeToPercent(40,20,60) will return 0.5 (50%)\n * RangeToPercent(34,0,100) will return 0.34 (34%)\n * @param num - to convert to percentage\n * @param min - min range\n * @param max - max range\n * @returns the percentage\n */\nfunction rangeToPercent(num, min, max) {\n    return (num - min) / (max - min);\n}\n/**\n * This function returns number that corresponds to the percentage in a given range.\n *\n * PercentToRange(0.34,0,100) will return 34.\n * @param percent - to convert to number\n * @param min - min range\n * @param max - max range\n * @returns the number\n */\nfunction percentToRange(percent, min, max) {\n    return (max - min) * percent + min;\n}\n/**\n * Returns the angle converted to equivalent value between -Math.PI and Math.PI radians.\n * @param angle - The angle to normalize in radian.\n * @returns The converted angle.\n */\nfunction normalizeRadians(angle) {\n    // More precise but slower version kept for reference.\n    // tslint:disable:no-commented-out-code\n    /*\n      // angle = angle % Tools.TwoPi;\n      // angle = (angle + Tools.TwoPi) % Tools.TwoPi;\n  \n      //if (angle > Math.PI) {\n      //\tangle -= Tools.TwoPi;\n      //}\n        */\n    return angle - TwoPi * Math.floor((angle + Math.PI) / TwoPi);\n}\n/**\n * Scalar computation library\n * @public\n */\nexports.Scalar = {\n    withinEpsilon,\n    toHex,\n    sign,\n    clamp,\n    log2,\n    repeat,\n    normalize,\n    denormalize,\n    deltaAngle,\n    pingPong,\n    smoothStep,\n    moveTowards,\n    moveTowardsAngle,\n    lerp,\n    lerpAngle,\n    inverseLerp,\n    hermite,\n    randomRange,\n    rangeToPercent,\n    percentToRange,\n    normalizeRadians,\n    TwoPi\n};\n//# sourceMappingURL=Scalar.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RAD2DEG = exports.DEG2RAD = exports.Epsilon = exports.ToLinearSpace = exports.ToGammaSpace = exports.Space = exports.Orientation = void 0;\n/**\n * Defines potential orientation for back face culling\n * @public\n */\nvar Orientation;\n(function (Orientation) {\n    /**\n     * Clockwise\n     */\n    Orientation[Orientation[\"CW\"] = 0] = \"CW\";\n    /** Counter clockwise */\n    Orientation[Orientation[\"CCW\"] = 1] = \"CCW\";\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\n/**\n * Defines supported spaces\n * @public\n */\nvar Space;\n(function (Space) {\n    /** Local (object) space */\n    Space[Space[\"LOCAL\"] = 0] = \"LOCAL\";\n    /** World space */\n    Space[Space[\"WORLD\"] = 1] = \"WORLD\";\n    /** Bone space */\n    Space[Space[\"BONE\"] = 2] = \"BONE\";\n})(Space = exports.Space || (exports.Space = {}));\n/**\n * Constant used to convert a value to gamma space\n * @public\n */\nexports.ToGammaSpace = 1 / 2.2;\n/**\n * Constant used to convert a value to linear space\n * @public\n */\nexports.ToLinearSpace = 2.2;\n/**\n * Constant used to define the minimal number value in Babylon.js\n * @public\n */\nexports.Epsilon = 0.000001;\n/**\n * Constant used to convert from Euler degrees to radians\n * @public\n */\nexports.DEG2RAD = Math.PI / 180;\n/**\n * Constant used to convert from radians to Euler degrees\n * @public\n */\nexports.RAD2DEG = 360 / (Math.PI * 2);\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quaternion = void 0;\nconst Vector3_1 = require(\"./Vector3\");\nconst Scalar_1 = require(\"./Scalar\");\nconst types_1 = require(\"./types\");\n/**\n * @public\n */\nvar Quaternion;\n(function (Quaternion) {\n    /**\n     * Creates a new Quaternion from the given floats\n     * @param x - defines the first component (0 by default)\n     * @param y - defines the second component (0 by default)\n     * @param z - defines the third component (0 by default)\n     * @param w - defines the fourth component (1.0 by default)\n     */\n    function create(\n    /** defines the first component (0 by default) */\n    x = 0.0, \n    /** defines the second component (0 by default) */\n    y = 0.0, \n    /** defines the third component (0 by default) */\n    z = 0.0, \n    /** defines the fourth component (1.0 by default) */\n    w = 1.0) {\n        return { x, y, z, w };\n    }\n    Quaternion.create = create;\n    /**\n     * Returns a new Quaternion as the result of the addition of the two given quaternions.\n     * @param q1 - the first quaternion\n     * @param q2 - the second quaternion\n     * @returns the resulting quaternion\n     */\n    function add(q1, q2) {\n        return { x: q1.x + q2.x, y: q1.y + q2.y, z: q1.z + q2.z, w: q1.w + q2.w };\n    }\n    Quaternion.add = add;\n    /**\n     * Creates a new rotation from the given Euler float angles (y, x, z) and stores it in the target quaternion\n     * @param yaw - defines the rotation around Y axis\n     * @param pitch - defines the rotation around X axis\n     * @param roll - defines the rotation around Z axis\n     * @param result - defines the target quaternion\n     */\n    function rotationYawPitchRoll(yaw, pitch, roll) {\n        // Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\n        const halfPitch = pitch * 0.5;\n        const halfYaw = yaw * 0.5;\n        const halfRoll = roll * 0.5;\n        const c1 = Math.cos(halfPitch);\n        const c2 = Math.cos(halfYaw);\n        const c3 = Math.cos(halfRoll);\n        const s1 = Math.sin(halfPitch);\n        const s2 = Math.sin(halfYaw);\n        const s3 = Math.sin(halfRoll);\n        return create(c2 * s1 * c3 + s2 * c1 * s3, s2 * c1 * c3 - c2 * s1 * s3, c2 * c1 * s3 - s2 * s1 * c3, c2 * c1 * c3 + s2 * s1 * s3);\n    }\n    Quaternion.rotationYawPitchRoll = rotationYawPitchRoll;\n    /**\n     * Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis.\n     * @param x - the rotation on the x axis in euler degrees\n     * @param y - the rotation on the y axis in euler degrees\n     * @param z - the rotation on the z axis in euler degrees\n     */\n    function euler(x, y, z) {\n        return rotationYawPitchRoll(y * types_1.DEG2RAD, x * types_1.DEG2RAD, z * types_1.DEG2RAD);\n    }\n    Quaternion.euler = euler;\n    /**\n     * Gets length of current quaternion\n     * @returns the quaternion length (float)\n     */\n    function length(q) {\n        return Math.sqrt(lengthSquared(q));\n    }\n    Quaternion.length = length;\n    /**\n     * Gets length of current quaternion\n     * @returns the quaternion length (float)\n     */\n    function lengthSquared(q) {\n        return q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w;\n    }\n    Quaternion.lengthSquared = lengthSquared;\n    /**\n     * Returns the dot product (float) between the quaternions \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @returns the dot product\n     */\n    function dot(left, right) {\n        return (left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w);\n    }\n    Quaternion.dot = dot;\n    /**\n     * Returns the angle in degrees between two rotations a and b.\n     * @param quat1 - defines the first quaternion\n     * @param quat2 - defines the second quaternion\n     */\n    function angle(quat1, quat2) {\n        const dotVal = dot(quat1, quat2);\n        return Math.acos(Math.min(Math.abs(dotVal), 1)) * 2 * types_1.RAD2DEG;\n    }\n    Quaternion.angle = angle;\n    /**\n     * The from quaternion is rotated towards to by an angular step of maxDegreesDelta.\n     * @param from - defines the first quaternion\n     * @param to - defines the second quaternion\n     * @param maxDegreesDelta - the interval step\n     */\n    function rotateTowards(from, to, maxDegreesDelta) {\n        const num = angle(from, to);\n        if (num === 0) {\n            return to;\n        }\n        const t = Math.min(1, maxDegreesDelta / num);\n        return slerp(from, to, t);\n    }\n    Quaternion.rotateTowards = rotateTowards;\n    /**\n     * Creates a rotation with the specified forward and upwards directions.\n     * @param forward - the direction to look in\n     * @param up - the vector that defines in which direction up is\n     */\n    function lookRotation(forward, up = { x: 0.0, y: 1.0, z: 0.0 }) {\n        const forwardNew = Vector3_1.Vector3.normalize(forward);\n        const right = Vector3_1.Vector3.normalize(Vector3_1.Vector3.cross(up, forwardNew));\n        const upNew = Vector3_1.Vector3.cross(forwardNew, right);\n        const m00 = right.x;\n        const m01 = right.y;\n        const m02 = right.z;\n        const m10 = upNew.x;\n        const m11 = upNew.y;\n        const m12 = upNew.z;\n        const m20 = forwardNew.x;\n        const m21 = forwardNew.y;\n        const m22 = forwardNew.z;\n        const num8 = m00 + m11 + m22;\n        const quaternion = create();\n        if (num8 > 0) {\n            let num = Math.sqrt(num8 + 1);\n            quaternion.w = num * 0.5;\n            num = 0.5 / num;\n            quaternion.x = (m12 - m21) * num;\n            quaternion.y = (m20 - m02) * num;\n            quaternion.z = (m01 - m10) * num;\n            return quaternion;\n        }\n        if (m00 >= m11 && m00 >= m22) {\n            const num7 = Math.sqrt(1 + m00 - m11 - m22);\n            const num4 = 0.5 / num7;\n            quaternion.x = 0.5 * num7;\n            quaternion.y = (m01 + m10) * num4;\n            quaternion.z = (m02 + m20) * num4;\n            quaternion.w = (m12 - m21) * num4;\n            return quaternion;\n        }\n        if (m11 > m22) {\n            const num6 = Math.sqrt(1 + m11 - m00 - m22);\n            const num3 = 0.5 / num6;\n            quaternion.x = (m10 + m01) * num3;\n            quaternion.y = 0.5 * num6;\n            quaternion.z = (m21 + m12) * num3;\n            quaternion.w = (m20 - m02) * num3;\n            return quaternion;\n        }\n        const num5 = Math.sqrt(1 + m22 - m00 - m11);\n        const num2 = 0.5 / num5;\n        quaternion.x = (m20 + m02) * num2;\n        quaternion.y = (m21 + m12) * num2;\n        quaternion.z = 0.5 * num5;\n        quaternion.w = (m01 - m10) * num2;\n        return quaternion;\n    }\n    Quaternion.lookRotation = lookRotation;\n    /**\n     * Normalize in place the current quaternion\n     * @returns the current updated quaternion\n     */\n    function normalize(q) {\n        const qLength = 1.0 / length(q);\n        return create(q.x * qLength, q.y * qLength, q.z * qLength, q.w * qLength);\n    }\n    Quaternion.normalize = normalize;\n    /**\n     * Creates a rotation which rotates from fromDirection to toDirection.\n     * @param from - defines the first direction Vector\n     * @param to - defines the target direction Vector\n     */\n    function fromToRotation(from, to, up = Vector3_1.Vector3.Up()) {\n        // Unity-based calculations implemented from https://forum.unity.com/threads/quaternion-lookrotation-around-an-axis.608470/#post-4069888\n        const v0 = Vector3_1.Vector3.normalize(from);\n        const v1 = Vector3_1.Vector3.normalize(to);\n        const a = Vector3_1.Vector3.cross(v0, v1);\n        const w = Math.sqrt(Vector3_1.Vector3.lengthSquared(v0) * Vector3_1.Vector3.lengthSquared(v1)) +\n            Vector3_1.Vector3.dot(v0, v1);\n        if (Vector3_1.Vector3.lengthSquared(a) < 0.0001) {\n            // the vectors are parallel, check w to find direction\n            // if w is 0 then values are opposite, and we sould rotate 180 degrees around the supplied axis\n            // otherwise the vectors in the same direction and no rotation should occur\n            return Math.abs(w) < 0.0001\n                ? normalize(create(up.x, up.y, up.z, 0))\n                : Identity();\n        }\n        else {\n            return normalize(create(a.x, a.y, a.z, w));\n        }\n    }\n    Quaternion.fromToRotation = fromToRotation;\n    /**\n     * Creates an identity quaternion\n     * @returns - the identity quaternion\n     */\n    function Identity() {\n        return create(0.0, 0.0, 0.0, 1.0);\n    }\n    Quaternion.Identity = Identity;\n    /**\n     * Gets or sets the euler angle representation of the rotation.\n     * Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\n     */\n    function eulerAngles(q) {\n        const out = Vector3_1.Vector3.create();\n        // if the input quaternion is normalized, this is exactly one. Otherwise, this acts as a correction factor for the quaternion's not-normalizedness\n        const unit = q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w;\n        // q will have a magnitude of 0.5 or greater if and only if q is a singularity case\n        const test = q.x * q.w - q.y * q.z;\n        if (test > 0.4995 * unit) {\n            // singularity at north pole\n            out.x = Math.PI / 2;\n            out.y = 2 * Math.atan2(q.y, q.x);\n            out.z = 0;\n        }\n        else if (test < -0.4995 * unit) {\n            // singularity at south pole\n            out.x = -Math.PI / 2;\n            out.y = -2 * Math.atan2(q.y, q.x);\n            out.z = 0;\n        }\n        else {\n            // no singularity - q is the majority of cases\n            out.x = Math.asin(2 * (q.w * q.x - q.y * q.z));\n            out.y = Math.atan2(2 * q.w * q.y + 2 * q.z * q.x, 1 - 2 * (q.x * q.x + q.y * q.y));\n            out.z = Math.atan2(2 * q.w * q.z + 2 * q.x * q.y, 1 - 2 * (q.z * q.z + q.x * q.x));\n        }\n        out.x *= types_1.RAD2DEG;\n        out.y *= types_1.RAD2DEG;\n        out.z *= types_1.RAD2DEG;\n        // ensure the degree values are between 0 and 360\n        out.x = Scalar_1.Scalar.repeat(out.x, 360);\n        out.y = Scalar_1.Scalar.repeat(out.y, 360);\n        out.z = Scalar_1.Scalar.repeat(out.z, 360);\n        return out;\n    }\n    Quaternion.eulerAngles = eulerAngles;\n    /**\n     * Creates a new rotation from the given Euler float angles (y, x, z) and stores it in the target quaternion\n     * @param yaw - defines the rotation around Y axis\n     * @param pitch - defines the rotation around X axis\n     * @param roll - defines the rotation around Z axis\n     * @param result - defines the target quaternion\n     */\n    function rotationYawPitchRollToRef(yaw, pitch, roll, result) {\n        // Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\n        const halfPitch = pitch * 0.5;\n        const halfYaw = yaw * 0.5;\n        const halfRoll = roll * 0.5;\n        const c1 = Math.cos(halfPitch);\n        const c2 = Math.cos(halfYaw);\n        const c3 = Math.cos(halfRoll);\n        const s1 = Math.sin(halfPitch);\n        const s2 = Math.sin(halfYaw);\n        const s3 = Math.sin(halfRoll);\n        result.x = c2 * s1 * c3 + s2 * c1 * s3;\n        result.y = s2 * c1 * c3 - c2 * s1 * s3;\n        result.z = c2 * c1 * s3 - s2 * s1 * c3;\n        result.w = c2 * c1 * c3 + s2 * s1 * s3;\n    }\n    Quaternion.rotationYawPitchRollToRef = rotationYawPitchRollToRef;\n    /**\n     * Updates the given quaternion with the given rotation matrix values\n     * @param matrix - defines the source matrix\n     * @param result - defines the target quaternion\n     */\n    function fromRotationMatrixToRef(matrix, result) {\n        const data = matrix._m;\n        // tslint:disable:one-variable-per-declaration\n        const m11 = data[0], m12 = data[4], m13 = data[8];\n        const m21 = data[1], m22 = data[5], m23 = data[9];\n        const m31 = data[2], m32 = data[6], m33 = data[10];\n        // tslint:enable:one-variable-per-declaration\n        const trace = m11 + m22 + m33;\n        let s;\n        if (trace > 0) {\n            s = 0.5 / Math.sqrt(trace + 1.0);\n            result.w = 0.25 / s;\n            result.x = (m32 - m23) * s;\n            result.y = (m13 - m31) * s;\n            result.z = (m21 - m12) * s;\n        }\n        else if (m11 > m22 && m11 > m33) {\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n            result.w = (m32 - m23) / s;\n            result.x = 0.25 * s;\n            result.y = (m12 + m21) / s;\n            result.z = (m13 + m31) / s;\n        }\n        else if (m22 > m33) {\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n            result.w = (m13 - m31) / s;\n            result.x = (m12 + m21) / s;\n            result.y = 0.25 * s;\n            result.z = (m23 + m32) / s;\n        }\n        else {\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n            result.w = (m21 - m12) / s;\n            result.x = (m13 + m31) / s;\n            result.y = (m23 + m32) / s;\n            result.z = 0.25 * s;\n        }\n    }\n    Quaternion.fromRotationMatrixToRef = fromRotationMatrixToRef;\n    /**\n     * Interpolates between two quaternions\n     * @param left - defines first quaternion\n     * @param right - defines second quaternion\n     * @param amount - defines the gradient to use\n     * @returns the new interpolated quaternion\n     */\n    function slerp(left, right, amount) {\n        const result = Quaternion.Identity();\n        Quaternion.slerpToRef(left, right, amount, result);\n        return result;\n    }\n    Quaternion.slerp = slerp;\n    /**\n     * Interpolates between two quaternions and stores it into a target quaternion\n     * @param left - defines first quaternion\n     * @param right - defines second quaternion\n     * @param amount - defines the gradient to use\n     * @param result - defines the target quaternion\n     */\n    function slerpToRef(left, right, amount, result) {\n        let num2;\n        let num3;\n        let num4 = left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\n        let flag = false;\n        if (num4 < 0) {\n            flag = true;\n            num4 = -num4;\n        }\n        if (num4 > 0.999999) {\n            num3 = 1 - amount;\n            num2 = flag ? -amount : amount;\n        }\n        else {\n            const num5 = Math.acos(num4);\n            const num6 = 1.0 / Math.sin(num5);\n            num3 = Math.sin((1.0 - amount) * num5) * num6;\n            num2 = flag\n                ? -Math.sin(amount * num5) * num6\n                : Math.sin(amount * num5) * num6;\n        }\n        result.x = num3 * left.x + num2 * right.x;\n        result.y = num3 * left.y + num2 * right.y;\n        result.z = num3 * left.z + num2 * right.z;\n        result.w = num3 * left.w + num2 * right.w;\n    }\n    Quaternion.slerpToRef = slerpToRef;\n    /**\n     * Multiplies two quaternions\n     * @param self - defines the first operand\n     * @param q1 - defines the second operand\n     * @returns a new quaternion set as the multiplication result of the self one with the given one \"q1\"\n     */\n    function multiply(self, q1) {\n        const result = create(0, 0, 0, 1.0);\n        multiplyToRef(self, q1, result);\n        return result;\n    }\n    Quaternion.multiply = multiply;\n    /**\n     * Sets the given \"result\" as the the multiplication result of the self one with the given one \"q1\"\n     * @param self - defines the first operand\n     * @param q1 - defines the second operand\n     * @param result - defines the target quaternion\n     * @returns the current quaternion\n     */\n    function multiplyToRef(self, q1, result) {\n        result.x = self.x * q1.w + self.y * q1.z - self.z * q1.y + self.w * q1.x;\n        result.y = -self.x * q1.z + self.y * q1.w + self.z * q1.x + self.w * q1.y;\n        result.z = self.x * q1.y - self.y * q1.x + self.z * q1.w + self.w * q1.z;\n        result.w = -self.x * q1.x - self.y * q1.y - self.z * q1.z + self.w * q1.w;\n    }\n    Quaternion.multiplyToRef = multiplyToRef;\n    function angleAxis(degress, axis) {\n        if (Vector3_1.Vector3.lengthSquared(axis) === 0) {\n            return Quaternion.Identity();\n        }\n        const result = Identity();\n        let radians = degress * types_1.DEG2RAD;\n        radians *= 0.5;\n        const a2 = Vector3_1.Vector3.normalize(axis);\n        Vector3_1.Vector3.scaleToRef(a2, Math.sin(radians), a2);\n        result.x = a2.x;\n        result.y = a2.y;\n        result.z = a2.z;\n        result.w = Math.cos(radians);\n        return normalize(result);\n    }\n    Quaternion.angleAxis = angleAxis;\n    /**\n     * Returns a zero filled quaternion\n     */\n    function Zero() {\n        return create(0.0, 0.0, 0.0, 0.0);\n    }\n    Quaternion.Zero = Zero;\n})(Quaternion = exports.Quaternion || (exports.Quaternion = {}));\n//# sourceMappingURL=Quaternion.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Quaternion\"), exports);\n__exportStar(require(\"./Vector3\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBAnimator {\n  states: PBAnimationState[]\n}\n\nexport interface PBAnimationState {\n  name: string\n  clip: string\n  playing?: boolean | undefined\n  /** default=1.0s */\n  weight?: number | undefined\n  /** default=1.0 */\n  speed?: number | undefined\n  /** default=true */\n  loop?: boolean | undefined\n  shouldReset?: boolean | undefined\n}\n\nfunction createBasePBAnimator(): PBAnimator {\n  return { states: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBAnimator = {\n  encode(message: PBAnimator, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.states) {\n      PBAnimationState.encode(v!, writer.uint32(10).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAnimator {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAnimator()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.states.push(PBAnimationState.decode(reader, reader.uint32()))\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBAnimationState(): PBAnimationState {\n  return {\n    name: '',\n    clip: '',\n    playing: undefined,\n    weight: undefined,\n    speed: undefined,\n    loop: undefined,\n    shouldReset: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBAnimationState = {\n  encode(message: PBAnimationState, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.name !== '') {\n      writer.uint32(10).string(message.name)\n    }\n    if (message.clip !== '') {\n      writer.uint32(18).string(message.clip)\n    }\n    if (message.playing !== undefined) {\n      writer.uint32(24).bool(message.playing)\n    }\n    if (message.weight !== undefined) {\n      writer.uint32(37).float(message.weight)\n    }\n    if (message.speed !== undefined) {\n      writer.uint32(45).float(message.speed)\n    }\n    if (message.loop !== undefined) {\n      writer.uint32(48).bool(message.loop)\n    }\n    if (message.shouldReset !== undefined) {\n      writer.uint32(56).bool(message.shouldReset)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAnimationState {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAnimationState()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string()\n          break\n        case 2:\n          message.clip = reader.string()\n          break\n        case 3:\n          message.playing = reader.bool()\n          break\n        case 4:\n          message.weight = reader.float()\n          break\n        case 5:\n          message.speed = reader.float()\n          break\n        case 6:\n          message.loop = reader.bool()\n          break\n        case 7:\n          message.shouldReset = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAnimator } from './pb/Animator.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1042\n\n/**\n * @internal\n */\nexport const AnimatorSchema: ISchema<PBAnimator> = {\n  serialize(value: PBAnimator, builder: ByteBuffer): void {\n    const writer = PBAnimator.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAnimator {\n    return PBAnimator.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAnimator {\n    // TODO: this is a hack.\n    return PBAnimator.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBAudioSource {\n  playing?: boolean | undefined\n  /** default=1.0f */\n  volume?: number | undefined\n  loop?: boolean | undefined\n  /** default=1.0f */\n  pitch?: number | undefined\n  audioClipUrl: string\n}\n\nfunction createBasePBAudioSource(): PBAudioSource {\n  return { playing: undefined, volume: undefined, loop: undefined, pitch: undefined, audioClipUrl: '' }\n}\n\n\n/**\n * @internal\n */\nexport const PBAudioSource = {\n  encode(message: PBAudioSource, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.playing !== undefined) {\n      writer.uint32(8).bool(message.playing)\n    }\n    if (message.volume !== undefined) {\n      writer.uint32(21).float(message.volume)\n    }\n    if (message.loop !== undefined) {\n      writer.uint32(24).bool(message.loop)\n    }\n    if (message.pitch !== undefined) {\n      writer.uint32(37).float(message.pitch)\n    }\n    if (message.audioClipUrl !== '') {\n      writer.uint32(42).string(message.audioClipUrl)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAudioSource {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAudioSource()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.playing = reader.bool()\n          break\n        case 2:\n          message.volume = reader.float()\n          break\n        case 3:\n          message.loop = reader.bool()\n          break\n        case 4:\n          message.pitch = reader.float()\n          break\n        case 5:\n          message.audioClipUrl = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAudioSource } from './pb/AudioSource.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1020\n\n/**\n * @internal\n */\nexport const AudioSourceSchema: ISchema<PBAudioSource> = {\n  serialize(value: PBAudioSource, builder: ByteBuffer): void {\n    const writer = PBAudioSource.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAudioSource {\n    return PBAudioSource.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAudioSource {\n    // TODO: this is a hack.\n    return PBAudioSource.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum AvatarAnchorPoint {\n  POSITION = 0,\n  NAME_TAG = 1,\n  LEFT_HAND = 2,\n  RIGHT_HAND = 3,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBAvatarAttach {\n  avatarId: string\n  anchorPointId: AvatarAnchorPoint\n}\n\nfunction createBasePBAvatarAttach(): PBAvatarAttach {\n  return { avatarId: '', anchorPointId: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBAvatarAttach = {\n  encode(message: PBAvatarAttach, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.avatarId !== '') {\n      writer.uint32(10).string(message.avatarId)\n    }\n    if (message.anchorPointId !== 0) {\n      writer.uint32(16).int32(message.anchorPointId)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarAttach {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAvatarAttach()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.avatarId = reader.string()\n          break\n        case 2:\n          message.anchorPointId = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAvatarAttach } from './pb/AvatarAttach.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1073\n\n/**\n * @internal\n */\nexport const AvatarAttachSchema: ISchema<PBAvatarAttach> = {\n  serialize(value: PBAvatarAttach, builder: ByteBuffer): void {\n    const writer = PBAvatarAttach.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAvatarAttach {\n    return PBAvatarAttach.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAvatarAttach {\n    // TODO: this is a hack.\n    return PBAvatarAttach.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface Vector3 {\n  x: number\n  y: number\n  z: number\n}\n\nfunction createBaseVector3(): Vector3 {\n  return { x: 0, y: 0, z: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const Vector3 = {\n  encode(message: Vector3, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.x !== 0) {\n      writer.uint32(13).float(message.x)\n    }\n    if (message.y !== 0) {\n      writer.uint32(21).float(message.y)\n    }\n    if (message.z !== 0) {\n      writer.uint32(29).float(message.z)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Vector3 {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBaseVector3()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.x = reader.float()\n          break\n        case 2:\n          message.y = reader.float()\n          break\n        case 3:\n          message.z = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","/* eslint-disable */\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum AvatarModifier {\n  HIDE_AVATARS = 0,\n  DISABLE_PASSPORTS = 1,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBAvatarModifierArea {\n  area: Vector3 | undefined\n  excludeIds: string[]\n  modifiers: AvatarModifier[]\n}\n\nfunction createBasePBAvatarModifierArea(): PBAvatarModifierArea {\n  return { area: undefined, excludeIds: [], modifiers: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBAvatarModifierArea = {\n  encode(message: PBAvatarModifierArea, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.area !== undefined) {\n      Vector3.encode(message.area, writer.uint32(10).fork()).ldelim()\n    }\n    for (const v of message.excludeIds) {\n      writer.uint32(18).string(v!)\n    }\n    writer.uint32(26).fork()\n    for (const v of message.modifiers) {\n      writer.int32(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarModifierArea {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAvatarModifierArea()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.area = Vector3.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.excludeIds.push(reader.string())\n          break\n        case 3:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.modifiers.push(reader.int32() as any)\n            }\n          } else {\n            message.modifiers.push(reader.int32() as any)\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAvatarModifierArea } from './pb/AvatarModifierArea.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1070\n\n/**\n * @internal\n */\nexport const AvatarModifierAreaSchema: ISchema<PBAvatarModifierArea> = {\n  serialize(value: PBAvatarModifierArea, builder: ByteBuffer): void {\n    const writer = PBAvatarModifierArea.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAvatarModifierArea {\n    return PBAvatarModifierArea.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAvatarModifierArea {\n    // TODO: this is a hack.\n    return PBAvatarModifierArea.decode(new Uint8Array())\n  }\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface Color3 {\n  r: number\n  g: number\n  b: number\n}\n\nfunction createBaseColor3(): Color3 {\n  return { r: 0, g: 0, b: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const Color3 = {\n  encode(message: Color3, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.r !== 0) {\n      writer.uint32(13).float(message.r)\n    }\n    if (message.g !== 0) {\n      writer.uint32(21).float(message.g)\n    }\n    if (message.b !== 0) {\n      writer.uint32(29).float(message.b)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Color3 {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBaseColor3()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.r = reader.float()\n          break\n        case 2:\n          message.g = reader.float()\n          break\n        case 3:\n          message.b = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","/* eslint-disable */\nimport Long from 'long'\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBAvatarShape {\n  id: string\n  name?: string | undefined\n  bodyShape?: string | undefined\n  skinColor?: Color3 | undefined\n  hairColor?: Color3 | undefined\n  eyeColor?: Color3 | undefined\n  wearables: string[]\n  expressionTriggerId?: string | undefined\n  expressionTriggerTimestamp?: number | undefined\n  stickerTriggerId?: string | undefined\n  stickerTriggerTimestamp?: number | undefined\n  talking?: boolean | undefined\n}\n\nfunction createBasePBAvatarShape(): PBAvatarShape {\n  return {\n    id: '',\n    name: undefined,\n    bodyShape: undefined,\n    skinColor: undefined,\n    hairColor: undefined,\n    eyeColor: undefined,\n    wearables: [],\n    expressionTriggerId: undefined,\n    expressionTriggerTimestamp: undefined,\n    stickerTriggerId: undefined,\n    stickerTriggerTimestamp: undefined,\n    talking: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBAvatarShape = {\n  encode(message: PBAvatarShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.id !== '') {\n      writer.uint32(10).string(message.id)\n    }\n    if (message.name !== undefined) {\n      writer.uint32(18).string(message.name)\n    }\n    if (message.bodyShape !== undefined) {\n      writer.uint32(26).string(message.bodyShape)\n    }\n    if (message.skinColor !== undefined) {\n      Color3.encode(message.skinColor, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.hairColor !== undefined) {\n      Color3.encode(message.hairColor, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.eyeColor !== undefined) {\n      Color3.encode(message.eyeColor, writer.uint32(50).fork()).ldelim()\n    }\n    for (const v of message.wearables) {\n      writer.uint32(58).string(v!)\n    }\n    if (message.expressionTriggerId !== undefined) {\n      writer.uint32(66).string(message.expressionTriggerId)\n    }\n    if (message.expressionTriggerTimestamp !== undefined) {\n      writer.uint32(72).int64(message.expressionTriggerTimestamp)\n    }\n    if (message.stickerTriggerId !== undefined) {\n      writer.uint32(82).string(message.stickerTriggerId)\n    }\n    if (message.stickerTriggerTimestamp !== undefined) {\n      writer.uint32(88).int64(message.stickerTriggerTimestamp)\n    }\n    if (message.talking !== undefined) {\n      writer.uint32(96).bool(message.talking)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAvatarShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string()\n          break\n        case 2:\n          message.name = reader.string()\n          break\n        case 3:\n          message.bodyShape = reader.string()\n          break\n        case 4:\n          message.skinColor = Color3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.hairColor = Color3.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.eyeColor = Color3.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.wearables.push(reader.string())\n          break\n        case 8:\n          message.expressionTriggerId = reader.string()\n          break\n        case 9:\n          message.expressionTriggerTimestamp = longToNumber(reader.int64() as Long)\n          break\n        case 10:\n          message.stickerTriggerId = reader.string()\n          break\n        case 11:\n          message.stickerTriggerTimestamp = longToNumber(reader.int64() as Long)\n          break\n        case 12:\n          message.talking = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\ndeclare var self: any | undefined\ndeclare var window: any | undefined\ndeclare var global: any | undefined\nvar globalThis: any = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis\n  if (typeof self !== 'undefined') return self\n  if (typeof window !== 'undefined') return window\n  if (typeof global !== 'undefined') return global\n  throw 'Unable to locate global object'\n})()\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER')\n  }\n  return long.toNumber()\n}\n\nif (_m0.util.Long !== Long) {\n  _m0.util.Long = Long as any\n  _m0.configure()\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAvatarShape } from './pb/AvatarShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1080\n\n/**\n * @internal\n */\nexport const AvatarShapeSchema: ISchema<PBAvatarShape> = {\n  serialize(value: PBAvatarShape, builder: ByteBuffer): void {\n    const writer = PBAvatarShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAvatarShape {\n    return PBAvatarShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAvatarShape {\n    // TODO: this is a hack.\n    return PBAvatarShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBBillboard {\n  /** default=true */\n  x?: boolean | undefined\n  /** default=true */\n  y?: boolean | undefined\n  /** default=true */\n  z?: boolean | undefined\n}\n\nfunction createBasePBBillboard(): PBBillboard {\n  return { x: undefined, y: undefined, z: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBBillboard = {\n  encode(message: PBBillboard, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.x !== undefined) {\n      writer.uint32(8).bool(message.x)\n    }\n    if (message.y !== undefined) {\n      writer.uint32(16).bool(message.y)\n    }\n    if (message.z !== undefined) {\n      writer.uint32(24).bool(message.z)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBBillboard {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBBillboard()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.x = reader.bool()\n          break\n        case 2:\n          message.y = reader.bool()\n          break\n        case 3:\n          message.z = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBBillboard } from './pb/Billboard.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1090\n\n/**\n * @internal\n */\nexport const BillboardSchema: ISchema<PBBillboard> = {\n  serialize(value: PBBillboard, builder: ByteBuffer): void {\n    const writer = PBBillboard.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBBillboard {\n    return PBBillboard.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBBillboard {\n    // TODO: this is a hack.\n    return PBBillboard.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBBoxShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  uvs: number[]\n}\n\nfunction createBasePBBoxShape(): PBBoxShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined, uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBBoxShape = {\n  encode(message: PBBoxShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    writer.uint32(34).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBBoxShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBBoxShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBBoxShape } from './pb/BoxShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1013\n\n/**\n * @internal\n */\nexport const BoxShapeSchema: ISchema<PBBoxShape> = {\n  serialize(value: PBBoxShape, builder: ByteBuffer): void {\n    const writer = PBBoxShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBBoxShape {\n    return PBBoxShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBBoxShape {\n    // TODO: this is a hack.\n    return PBBoxShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { CameraModeValue } from './common/CameraModeValue.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBCameraMode {\n  mode: CameraModeValue\n}\n\nfunction createBasePBCameraMode(): PBCameraMode {\n  return { mode: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBCameraMode = {\n  encode(message: PBCameraMode, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBCameraMode {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBCameraMode()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBCameraMode } from './pb/CameraMode.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1072\n\n/**\n * @internal\n */\nexport const CameraModeSchema: ISchema<PBCameraMode> = {\n  serialize(value: PBCameraMode, builder: ByteBuffer): void {\n    const writer = PBCameraMode.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBCameraMode {\n    return PBCameraMode.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBCameraMode {\n    // TODO: this is a hack.\n    return PBCameraMode.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { CameraModeValue } from './common/CameraModeValue.gen'\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBCameraModeArea {\n  area: Vector3 | undefined\n  mode: CameraModeValue\n}\n\nfunction createBasePBCameraModeArea(): PBCameraModeArea {\n  return { area: undefined, mode: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBCameraModeArea = {\n  encode(message: PBCameraModeArea, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.area !== undefined) {\n      Vector3.encode(message.area, writer.uint32(10).fork()).ldelim()\n    }\n    if (message.mode !== 0) {\n      writer.uint32(16).int32(message.mode)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBCameraModeArea {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBCameraModeArea()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.area = Vector3.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.mode = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBCameraModeArea } from './pb/CameraModeArea.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1071\n\n/**\n * @internal\n */\nexport const CameraModeAreaSchema: ISchema<PBCameraModeArea> = {\n  serialize(value: PBCameraModeArea, builder: ByteBuffer): void {\n    const writer = PBCameraModeArea.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBCameraModeArea {\n    return PBCameraModeArea.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBCameraModeArea {\n    // TODO: this is a hack.\n    return PBCameraModeArea.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBCylinderShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  /** default=1.0 */\n  radiusTop?: number | undefined\n  /** default=1.0 */\n  radiusBottom?: number | undefined\n}\n\nfunction createBasePBCylinderShape(): PBCylinderShape {\n  return {\n    withCollisions: undefined,\n    isPointerBlocker: undefined,\n    visible: undefined,\n    radiusTop: undefined,\n    radiusBottom: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBCylinderShape = {\n  encode(message: PBCylinderShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    if (message.radiusTop !== undefined) {\n      writer.uint32(37).float(message.radiusTop)\n    }\n    if (message.radiusBottom !== undefined) {\n      writer.uint32(45).float(message.radiusBottom)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBCylinderShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBCylinderShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          message.radiusTop = reader.float()\n          break\n        case 5:\n          message.radiusBottom = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBCylinderShape } from './pb/CylinderShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1016\n\n/**\n * @internal\n */\nexport const CylinderShapeSchema: ISchema<PBCylinderShape> = {\n  serialize(value: PBCylinderShape, builder: ByteBuffer): void {\n    const writer = PBCylinderShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBCylinderShape {\n    return PBCylinderShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBCylinderShape {\n    // TODO: this is a hack.\n    return PBCylinderShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBGLTFShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  src: string\n}\n\nfunction createBasePBGLTFShape(): PBGLTFShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined, src: '' }\n}\n\n\n/**\n * @internal\n */\nexport const PBGLTFShape = {\n  encode(message: PBGLTFShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    if (message.src !== '') {\n      writer.uint32(34).string(message.src)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBGLTFShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBGLTFShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          message.src = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBGLTFShape } from './pb/GLTFShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1041\n\n/**\n * @internal\n */\nexport const GLTFShapeSchema: ISchema<PBGLTFShape> = {\n  serialize(value: PBGLTFShape, builder: ByteBuffer): void {\n    const writer = PBGLTFShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBGLTFShape {\n    return PBGLTFShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBGLTFShape {\n    // TODO: this is a hack.\n    return PBGLTFShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum TextureWrapMode {\n  Repeat = 0,\n  Clamp = 1,\n  Mirror = 2,\n  MirrorOnce = 3,\n  UNRECOGNIZED = -1\n}\n\nexport const enum FilterMode {\n  Point = 0,\n  Bilinear = 1,\n  Trilinear = 2,\n  UNRECOGNIZED = -1\n}\n\nexport const enum TransparencyMode {\n  Opaque = 0,\n  AlphaTest = 1,\n  AlphaBlend = 2,\n  AlphaTestAndAlphaBlend = 3,\n  Auto = 4,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBMaterial {\n  /** default = null */\n  texture?: PBMaterial_Texture | undefined\n  /** default = 0.5. range value: from 0 to 1 */\n  alphaTest?: number | undefined\n  /** default =  true */\n  castShadows?: boolean | undefined\n  /** default = null */\n  alphaTexture?: PBMaterial_Texture | undefined\n  /** default = null */\n  emissiveTexture?: PBMaterial_Texture | undefined\n  /** default = null */\n  bumpTexture?: PBMaterial_Texture | undefined\n  /** default = white; */\n  albedoColor?: Color3 | undefined\n  /** default = black; */\n  emissiveColor?: Color3 | undefined\n  /** default = white; */\n  reflectivityColor?: Color3 | undefined\n  /** default = TransparencyMode.Auto */\n  transparencyMode?: TransparencyMode | undefined\n  /** default = 0.5 */\n  metallic?: number | undefined\n  /** default = 0.5 */\n  roughness?: number | undefined\n  /** default = 1 */\n  glossiness?: number | undefined\n  /** default = 1 */\n  specularIntensity?: number | undefined\n  /** default = 2 */\n  emissiveIntensity?: number | undefined\n  /** default = 1 */\n  directIntensity?: number | undefined\n}\n\nexport interface PBMaterial_Texture {\n  src: string\n  /** default = TextureWrapMode.Clamp */\n  wrapMode?: TextureWrapMode | undefined\n  /** default = FilterMode.Bilinear */\n  filterMode?: FilterMode | undefined\n}\n\nfunction createBasePBMaterial(): PBMaterial {\n  return {\n    texture: undefined,\n    alphaTest: undefined,\n    castShadows: undefined,\n    alphaTexture: undefined,\n    emissiveTexture: undefined,\n    bumpTexture: undefined,\n    albedoColor: undefined,\n    emissiveColor: undefined,\n    reflectivityColor: undefined,\n    transparencyMode: undefined,\n    metallic: undefined,\n    roughness: undefined,\n    glossiness: undefined,\n    specularIntensity: undefined,\n    emissiveIntensity: undefined,\n    directIntensity: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBMaterial = {\n  encode(message: PBMaterial, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.texture !== undefined) {\n      PBMaterial_Texture.encode(message.texture, writer.uint32(10).fork()).ldelim()\n    }\n    if (message.alphaTest !== undefined) {\n      writer.uint32(21).float(message.alphaTest)\n    }\n    if (message.castShadows !== undefined) {\n      writer.uint32(24).bool(message.castShadows)\n    }\n    if (message.alphaTexture !== undefined) {\n      PBMaterial_Texture.encode(message.alphaTexture, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.emissiveTexture !== undefined) {\n      PBMaterial_Texture.encode(message.emissiveTexture, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.bumpTexture !== undefined) {\n      PBMaterial_Texture.encode(message.bumpTexture, writer.uint32(50).fork()).ldelim()\n    }\n    if (message.albedoColor !== undefined) {\n      Color3.encode(message.albedoColor, writer.uint32(58).fork()).ldelim()\n    }\n    if (message.emissiveColor !== undefined) {\n      Color3.encode(message.emissiveColor, writer.uint32(66).fork()).ldelim()\n    }\n    if (message.reflectivityColor !== undefined) {\n      Color3.encode(message.reflectivityColor, writer.uint32(74).fork()).ldelim()\n    }\n    if (message.transparencyMode !== undefined) {\n      writer.uint32(80).int32(message.transparencyMode)\n    }\n    if (message.metallic !== undefined) {\n      writer.uint32(93).float(message.metallic)\n    }\n    if (message.roughness !== undefined) {\n      writer.uint32(101).float(message.roughness)\n    }\n    if (message.glossiness !== undefined) {\n      writer.uint32(109).float(message.glossiness)\n    }\n    if (message.specularIntensity !== undefined) {\n      writer.uint32(117).float(message.specularIntensity)\n    }\n    if (message.emissiveIntensity !== undefined) {\n      writer.uint32(125).float(message.emissiveIntensity)\n    }\n    if (message.directIntensity !== undefined) {\n      writer.uint32(133).float(message.directIntensity)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMaterial {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMaterial()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.texture = PBMaterial_Texture.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.alphaTest = reader.float()\n          break\n        case 3:\n          message.castShadows = reader.bool()\n          break\n        case 4:\n          message.alphaTexture = PBMaterial_Texture.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.emissiveTexture = PBMaterial_Texture.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.bumpTexture = PBMaterial_Texture.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.albedoColor = Color3.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.emissiveColor = Color3.decode(reader, reader.uint32())\n          break\n        case 9:\n          message.reflectivityColor = Color3.decode(reader, reader.uint32())\n          break\n        case 10:\n          message.transparencyMode = reader.int32() as any\n          break\n        case 11:\n          message.metallic = reader.float()\n          break\n        case 12:\n          message.roughness = reader.float()\n          break\n        case 13:\n          message.glossiness = reader.float()\n          break\n        case 14:\n          message.specularIntensity = reader.float()\n          break\n        case 15:\n          message.emissiveIntensity = reader.float()\n          break\n        case 16:\n          message.directIntensity = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMaterial_Texture(): PBMaterial_Texture {\n  return { src: '', wrapMode: undefined, filterMode: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBMaterial_Texture = {\n  encode(message: PBMaterial_Texture, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.src !== '') {\n      writer.uint32(10).string(message.src)\n    }\n    if (message.wrapMode !== undefined) {\n      writer.uint32(16).int32(message.wrapMode)\n    }\n    if (message.filterMode !== undefined) {\n      writer.uint32(24).int32(message.filterMode)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMaterial_Texture {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMaterial_Texture()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.src = reader.string()\n          break\n        case 2:\n          message.wrapMode = reader.int32() as any\n          break\n        case 3:\n          message.filterMode = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBMaterial } from './pb/Material.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1017\n\n/**\n * @internal\n */\nexport const MaterialSchema: ISchema<PBMaterial> = {\n  serialize(value: PBMaterial, builder: ByteBuffer): void {\n    const writer = PBMaterial.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBMaterial {\n    return PBMaterial.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBMaterial {\n    // TODO: this is a hack.\n    return PBMaterial.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBMeshRenderer {\n  box: PBMeshRenderer_BoxMesh | undefined\n  sphere: PBMeshRenderer_SphereMesh | undefined\n  cylinder: PBMeshRenderer_CylinderMesh | undefined\n  plane: PBMeshRenderer_PlaneMesh | undefined\n}\n\nexport interface PBMeshRenderer_BoxMesh {\n  uvs: number[]\n}\n\nexport interface PBMeshRenderer_CylinderMesh {\n  /** default=1.0 */\n  radiusTop?: number | undefined\n  /** default=1.0 */\n  radiusBottom?: number | undefined\n}\n\nexport interface PBMeshRenderer_PlaneMesh {\n  uvs: number[]\n}\n\nexport interface PBMeshRenderer_SphereMesh {}\n\nfunction createBasePBMeshRenderer(): PBMeshRenderer {\n  return { box: undefined, sphere: undefined, cylinder: undefined, plane: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer = {\n  encode(message: PBMeshRenderer, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.box !== undefined) {\n      PBMeshRenderer_BoxMesh.encode(message.box, writer.uint32(10).fork()).ldelim()\n    }\n    if (message.sphere !== undefined) {\n      PBMeshRenderer_SphereMesh.encode(message.sphere, writer.uint32(18).fork()).ldelim()\n    }\n    if (message.cylinder !== undefined) {\n      PBMeshRenderer_CylinderMesh.encode(message.cylinder, writer.uint32(26).fork()).ldelim()\n    }\n    if (message.plane !== undefined) {\n      PBMeshRenderer_PlaneMesh.encode(message.plane, writer.uint32(34).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.box = PBMeshRenderer_BoxMesh.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.sphere = PBMeshRenderer_SphereMesh.decode(reader, reader.uint32())\n          break\n        case 3:\n          message.cylinder = PBMeshRenderer_CylinderMesh.decode(reader, reader.uint32())\n          break\n        case 4:\n          message.plane = PBMeshRenderer_PlaneMesh.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshRenderer_BoxMesh(): PBMeshRenderer_BoxMesh {\n  return { uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer_BoxMesh = {\n  encode(message: PBMeshRenderer_BoxMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    writer.uint32(10).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer_BoxMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer_BoxMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshRenderer_CylinderMesh(): PBMeshRenderer_CylinderMesh {\n  return { radiusTop: undefined, radiusBottom: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer_CylinderMesh = {\n  encode(message: PBMeshRenderer_CylinderMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.radiusTop !== undefined) {\n      writer.uint32(13).float(message.radiusTop)\n    }\n    if (message.radiusBottom !== undefined) {\n      writer.uint32(21).float(message.radiusBottom)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer_CylinderMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer_CylinderMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.radiusTop = reader.float()\n          break\n        case 2:\n          message.radiusBottom = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshRenderer_PlaneMesh(): PBMeshRenderer_PlaneMesh {\n  return { uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer_PlaneMesh = {\n  encode(message: PBMeshRenderer_PlaneMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    writer.uint32(10).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer_PlaneMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer_PlaneMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBMeshRenderer_SphereMesh(): PBMeshRenderer_SphereMesh {\n  return {}\n}\n\n\n/**\n * @internal\n */\nexport const PBMeshRenderer_SphereMesh = {\n  encode(_: PBMeshRenderer_SphereMesh, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBMeshRenderer_SphereMesh {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBMeshRenderer_SphereMesh()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBMeshRenderer } from './pb/MeshRenderer.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1018\n\n/**\n * @internal\n */\nexport const MeshRendererSchema: ISchema<PBMeshRenderer> = {\n  serialize(value: PBMeshRenderer, builder: ByteBuffer): void {\n    const writer = PBMeshRenderer.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBMeshRenderer {\n    return PBMeshRenderer.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBMeshRenderer {\n    // TODO: this is a hack.\n    return PBMeshRenderer.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBNFTShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  src: string\n  assetId?: string | undefined\n  style?: number | undefined\n  color?: Color3 | undefined\n}\n\nfunction createBasePBNFTShape(): PBNFTShape {\n  return {\n    withCollisions: undefined,\n    isPointerBlocker: undefined,\n    visible: undefined,\n    src: '',\n    assetId: undefined,\n    style: undefined,\n    color: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBNFTShape = {\n  encode(message: PBNFTShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    if (message.src !== '') {\n      writer.uint32(34).string(message.src)\n    }\n    if (message.assetId !== undefined) {\n      writer.uint32(42).string(message.assetId)\n    }\n    if (message.style !== undefined) {\n      writer.uint32(48).int32(message.style)\n    }\n    if (message.color !== undefined) {\n      Color3.encode(message.color, writer.uint32(58).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBNFTShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBNFTShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          message.src = reader.string()\n          break\n        case 5:\n          message.assetId = reader.string()\n          break\n        case 6:\n          message.style = reader.int32()\n          break\n        case 7:\n          message.color = Color3.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBNFTShape } from './pb/NFTShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1040\n\n/**\n * @internal\n */\nexport const NFTShapeSchema: ISchema<PBNFTShape> = {\n  serialize(value: PBNFTShape, builder: ByteBuffer): void {\n    const writer = PBNFTShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBNFTShape {\n    return PBNFTShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBNFTShape {\n    // TODO: this is a hack.\n    return PBNFTShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerDown {\n  /** default=ActionButton.ANY */\n  button?: ActionButton | undefined\n  /** default='Interact' */\n  hoverText?: string | undefined\n  /** default=10 */\n  maxDistance?: number | undefined\n  /** default=true */\n  showFeedback?: boolean | undefined\n}\n\nfunction createBasePBOnPointerDown(): PBOnPointerDown {\n  return { button: undefined, hoverText: undefined, maxDistance: undefined, showFeedback: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerDown = {\n  encode(message: PBOnPointerDown, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== undefined) {\n      writer.uint32(8).int32(message.button)\n    }\n    if (message.hoverText !== undefined) {\n      writer.uint32(18).string(message.hoverText)\n    }\n    if (message.maxDistance !== undefined) {\n      writer.uint32(29).float(message.maxDistance)\n    }\n    if (message.showFeedback !== undefined) {\n      writer.uint32(32).bool(message.showFeedback)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerDown {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerDown()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.button = reader.int32() as any\n          break\n        case 2:\n          message.hoverText = reader.string()\n          break\n        case 3:\n          message.maxDistance = reader.float()\n          break\n        case 4:\n          message.showFeedback = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerDown } from './pb/OnPointerDown.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1060\n\n/**\n * @internal\n */\nexport const OnPointerDownSchema: ISchema<PBOnPointerDown> = {\n  serialize(value: PBOnPointerDown, builder: ByteBuffer): void {\n    const writer = PBOnPointerDown.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerDown {\n    return PBOnPointerDown.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerDown {\n    // TODO: this is a hack.\n    return PBOnPointerDown.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerDownResult {\n  button: ActionButton\n  meshName: string\n  origin: Vector3 | undefined\n  direction: Vector3 | undefined\n  point: Vector3 | undefined\n  normal: Vector3 | undefined\n  distance: number\n  timestamp: number\n}\n\nfunction createBasePBOnPointerDownResult(): PBOnPointerDownResult {\n  return {\n    button: 0,\n    meshName: '',\n    origin: undefined,\n    direction: undefined,\n    point: undefined,\n    normal: undefined,\n    distance: 0,\n    timestamp: 0\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerDownResult = {\n  encode(message: PBOnPointerDownResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== 0) {\n      writer.uint32(16).int32(message.button)\n    }\n    if (message.meshName !== '') {\n      writer.uint32(26).string(message.meshName)\n    }\n    if (message.origin !== undefined) {\n      Vector3.encode(message.origin, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.direction !== undefined) {\n      Vector3.encode(message.direction, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.point !== undefined) {\n      Vector3.encode(message.point, writer.uint32(50).fork()).ldelim()\n    }\n    if (message.normal !== undefined) {\n      Vector3.encode(message.normal, writer.uint32(58).fork()).ldelim()\n    }\n    if (message.distance !== 0) {\n      writer.uint32(69).float(message.distance)\n    }\n    if (message.timestamp !== 0) {\n      writer.uint32(72).int32(message.timestamp)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerDownResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerDownResult()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 2:\n          message.button = reader.int32() as any\n          break\n        case 3:\n          message.meshName = reader.string()\n          break\n        case 4:\n          message.origin = Vector3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.direction = Vector3.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.point = Vector3.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.normal = Vector3.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.distance = reader.float()\n          break\n        case 9:\n          message.timestamp = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerDownResult } from './pb/OnPointerDownResult.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1066\n\n/**\n * @internal\n */\nexport const OnPointerDownResultSchema: ISchema<PBOnPointerDownResult> = {\n  serialize(value: PBOnPointerDownResult, builder: ByteBuffer): void {\n    const writer = PBOnPointerDownResult.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerDownResult {\n    return PBOnPointerDownResult.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerDownResult {\n    // TODO: this is a hack.\n    return PBOnPointerDownResult.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerUp {\n  /** default=ActionButton.ANY */\n  button?: ActionButton | undefined\n  /** default='Interact' */\n  hoverText?: string | undefined\n  /** default=10 */\n  maxDistance?: number | undefined\n  /** default=true */\n  showFeedback?: boolean | undefined\n}\n\nfunction createBasePBOnPointerUp(): PBOnPointerUp {\n  return { button: undefined, hoverText: undefined, maxDistance: undefined, showFeedback: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerUp = {\n  encode(message: PBOnPointerUp, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== undefined) {\n      writer.uint32(8).int32(message.button)\n    }\n    if (message.hoverText !== undefined) {\n      writer.uint32(18).string(message.hoverText)\n    }\n    if (message.maxDistance !== undefined) {\n      writer.uint32(29).float(message.maxDistance)\n    }\n    if (message.showFeedback !== undefined) {\n      writer.uint32(32).bool(message.showFeedback)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerUp {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerUp()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.button = reader.int32() as any\n          break\n        case 2:\n          message.hoverText = reader.string()\n          break\n        case 3:\n          message.maxDistance = reader.float()\n          break\n        case 4:\n          message.showFeedback = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerUp } from './pb/OnPointerUp.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1061\n\n/**\n * @internal\n */\nexport const OnPointerUpSchema: ISchema<PBOnPointerUp> = {\n  serialize(value: PBOnPointerUp, builder: ByteBuffer): void {\n    const writer = PBOnPointerUp.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerUp {\n    return PBOnPointerUp.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerUp {\n    // TODO: this is a hack.\n    return PBOnPointerUp.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport { Vector3 } from './common/Vector3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerUpResult {\n  button: ActionButton\n  meshName: string\n  origin: Vector3 | undefined\n  direction: Vector3 | undefined\n  point: Vector3 | undefined\n  normal: Vector3 | undefined\n  distance: number\n  timestamp: number\n}\n\nfunction createBasePBOnPointerUpResult(): PBOnPointerUpResult {\n  return {\n    button: 0,\n    meshName: '',\n    origin: undefined,\n    direction: undefined,\n    point: undefined,\n    normal: undefined,\n    distance: 0,\n    timestamp: 0\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerUpResult = {\n  encode(message: PBOnPointerUpResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== 0) {\n      writer.uint32(16).int32(message.button)\n    }\n    if (message.meshName !== '') {\n      writer.uint32(26).string(message.meshName)\n    }\n    if (message.origin !== undefined) {\n      Vector3.encode(message.origin, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.direction !== undefined) {\n      Vector3.encode(message.direction, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.point !== undefined) {\n      Vector3.encode(message.point, writer.uint32(50).fork()).ldelim()\n    }\n    if (message.normal !== undefined) {\n      Vector3.encode(message.normal, writer.uint32(58).fork()).ldelim()\n    }\n    if (message.distance !== 0) {\n      writer.uint32(69).float(message.distance)\n    }\n    if (message.timestamp !== 0) {\n      writer.uint32(72).int32(message.timestamp)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerUpResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerUpResult()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 2:\n          message.button = reader.int32() as any\n          break\n        case 3:\n          message.meshName = reader.string()\n          break\n        case 4:\n          message.origin = Vector3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.direction = Vector3.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.point = Vector3.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.normal = Vector3.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.distance = reader.float()\n          break\n        case 9:\n          message.timestamp = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerUpResult } from './pb/OnPointerUpResult.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1065\n\n/**\n * @internal\n */\nexport const OnPointerUpResultSchema: ISchema<PBOnPointerUpResult> = {\n  serialize(value: PBOnPointerUpResult, builder: ByteBuffer): void {\n    const writer = PBOnPointerUpResult.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerUpResult {\n    return PBOnPointerUpResult.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerUpResult {\n    // TODO: this is a hack.\n    return PBOnPointerUpResult.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBPlaneShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  uvs: number[]\n}\n\nfunction createBasePBPlaneShape(): PBPlaneShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined, uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBPlaneShape = {\n  encode(message: PBPlaneShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    writer.uint32(34).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPlaneShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPlaneShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBPlaneShape } from './pb/PlaneShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1014\n\n/**\n * @internal\n */\nexport const PlaneShapeSchema: ISchema<PBPlaneShape> = {\n  serialize(value: PBPlaneShape, builder: ByteBuffer): void {\n    const writer = PBPlaneShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBPlaneShape {\n    return PBPlaneShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBPlaneShape {\n    // TODO: this is a hack.\n    return PBPlaneShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBPointerLock {\n  isPointerLocked: boolean\n}\n\nfunction createBasePBPointerLock(): PBPointerLock {\n  return { isPointerLocked: false }\n}\n\n\n/**\n * @internal\n */\nexport const PBPointerLock = {\n  encode(message: PBPointerLock, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.isPointerLocked === true) {\n      writer.uint32(8).bool(message.isPointerLocked)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPointerLock {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPointerLock()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.isPointerLocked = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBPointerLock } from './pb/PointerLock.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1074\n\n/**\n * @internal\n */\nexport const PointerLockSchema: ISchema<PBPointerLock> = {\n  serialize(value: PBPointerLock, builder: ByteBuffer): void {\n    const writer = PBPointerLock.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBPointerLock {\n    return PBPointerLock.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBPointerLock {\n    // TODO: this is a hack.\n    return PBPointerLock.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBSphereShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n}\n\nfunction createBasePBSphereShape(): PBSphereShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBSphereShape = {\n  encode(message: PBSphereShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBSphereShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBSphereShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBSphereShape } from './pb/SphereShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1015\n\n/**\n * @internal\n */\nexport const SphereShapeSchema: ISchema<PBSphereShape> = {\n  serialize(value: PBSphereShape, builder: ByteBuffer): void {\n    const writer = PBSphereShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBSphereShape {\n    return PBSphereShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBSphereShape {\n    // TODO: this is a hack.\n    return PBSphereShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBTextShape {\n  text: string\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  font?: string | undefined\n  /** default=1.0f */\n  opacity?: number | undefined\n  /** default=10 */\n  fontSize?: number | undefined\n  fontAutoSize?: boolean | undefined\n  /** default='center' */\n  hTextAlign?: string | undefined\n  /** default='center' */\n  vTextAlign?: string | undefined\n  /** default=1 */\n  width?: number | undefined\n  /** default=1 */\n  height?: number | undefined\n  paddingTop?: number | undefined\n  paddingRight?: number | undefined\n  paddingBottom?: number | undefined\n  paddingLeft?: number | undefined\n  lineSpacing?: number | undefined\n  lineCount?: number | undefined\n  textWrapping?: boolean | undefined\n  shadowBlur?: number | undefined\n  shadowOffsetX?: number | undefined\n  shadowOffsetY?: number | undefined\n  outlineWidth?: number | undefined\n  /** default=(1.0,1.0,1.0) */\n  shadowColor?: Color3 | undefined\n  /** default=(1.0,1.0,1.0) */\n  outlineColor?: Color3 | undefined\n  /** default=(1.0,1.0,1.0) */\n  textColor?: Color3 | undefined\n}\n\nfunction createBasePBTextShape(): PBTextShape {\n  return {\n    text: '',\n    visible: undefined,\n    font: undefined,\n    opacity: undefined,\n    fontSize: undefined,\n    fontAutoSize: undefined,\n    hTextAlign: undefined,\n    vTextAlign: undefined,\n    width: undefined,\n    height: undefined,\n    paddingTop: undefined,\n    paddingRight: undefined,\n    paddingBottom: undefined,\n    paddingLeft: undefined,\n    lineSpacing: undefined,\n    lineCount: undefined,\n    textWrapping: undefined,\n    shadowBlur: undefined,\n    shadowOffsetX: undefined,\n    shadowOffsetY: undefined,\n    outlineWidth: undefined,\n    shadowColor: undefined,\n    outlineColor: undefined,\n    textColor: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBTextShape = {\n  encode(message: PBTextShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.text !== '') {\n      writer.uint32(10).string(message.text)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(16).bool(message.visible)\n    }\n    if (message.font !== undefined) {\n      writer.uint32(26).string(message.font)\n    }\n    if (message.opacity !== undefined) {\n      writer.uint32(37).float(message.opacity)\n    }\n    if (message.fontSize !== undefined) {\n      writer.uint32(45).float(message.fontSize)\n    }\n    if (message.fontAutoSize !== undefined) {\n      writer.uint32(48).bool(message.fontAutoSize)\n    }\n    if (message.hTextAlign !== undefined) {\n      writer.uint32(58).string(message.hTextAlign)\n    }\n    if (message.vTextAlign !== undefined) {\n      writer.uint32(66).string(message.vTextAlign)\n    }\n    if (message.width !== undefined) {\n      writer.uint32(77).float(message.width)\n    }\n    if (message.height !== undefined) {\n      writer.uint32(85).float(message.height)\n    }\n    if (message.paddingTop !== undefined) {\n      writer.uint32(93).float(message.paddingTop)\n    }\n    if (message.paddingRight !== undefined) {\n      writer.uint32(101).float(message.paddingRight)\n    }\n    if (message.paddingBottom !== undefined) {\n      writer.uint32(109).float(message.paddingBottom)\n    }\n    if (message.paddingLeft !== undefined) {\n      writer.uint32(117).float(message.paddingLeft)\n    }\n    if (message.lineSpacing !== undefined) {\n      writer.uint32(125).float(message.lineSpacing)\n    }\n    if (message.lineCount !== undefined) {\n      writer.uint32(128).int32(message.lineCount)\n    }\n    if (message.textWrapping !== undefined) {\n      writer.uint32(136).bool(message.textWrapping)\n    }\n    if (message.shadowBlur !== undefined) {\n      writer.uint32(149).float(message.shadowBlur)\n    }\n    if (message.shadowOffsetX !== undefined) {\n      writer.uint32(157).float(message.shadowOffsetX)\n    }\n    if (message.shadowOffsetY !== undefined) {\n      writer.uint32(165).float(message.shadowOffsetY)\n    }\n    if (message.outlineWidth !== undefined) {\n      writer.uint32(173).float(message.outlineWidth)\n    }\n    if (message.shadowColor !== undefined) {\n      Color3.encode(message.shadowColor, writer.uint32(178).fork()).ldelim()\n    }\n    if (message.outlineColor !== undefined) {\n      Color3.encode(message.outlineColor, writer.uint32(186).fork()).ldelim()\n    }\n    if (message.textColor !== undefined) {\n      Color3.encode(message.textColor, writer.uint32(194).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBTextShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBTextShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.text = reader.string()\n          break\n        case 2:\n          message.visible = reader.bool()\n          break\n        case 3:\n          message.font = reader.string()\n          break\n        case 4:\n          message.opacity = reader.float()\n          break\n        case 5:\n          message.fontSize = reader.float()\n          break\n        case 6:\n          message.fontAutoSize = reader.bool()\n          break\n        case 7:\n          message.hTextAlign = reader.string()\n          break\n        case 8:\n          message.vTextAlign = reader.string()\n          break\n        case 9:\n          message.width = reader.float()\n          break\n        case 10:\n          message.height = reader.float()\n          break\n        case 11:\n          message.paddingTop = reader.float()\n          break\n        case 12:\n          message.paddingRight = reader.float()\n          break\n        case 13:\n          message.paddingBottom = reader.float()\n          break\n        case 14:\n          message.paddingLeft = reader.float()\n          break\n        case 15:\n          message.lineSpacing = reader.float()\n          break\n        case 16:\n          message.lineCount = reader.int32()\n          break\n        case 17:\n          message.textWrapping = reader.bool()\n          break\n        case 18:\n          message.shadowBlur = reader.float()\n          break\n        case 19:\n          message.shadowOffsetX = reader.float()\n          break\n        case 20:\n          message.shadowOffsetY = reader.float()\n          break\n        case 21:\n          message.outlineWidth = reader.float()\n          break\n        case 22:\n          message.shadowColor = Color3.decode(reader, reader.uint32())\n          break\n        case 23:\n          message.outlineColor = Color3.decode(reader, reader.uint32())\n          break\n        case 24:\n          message.textColor = Color3.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBTextShape } from './pb/TextShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1030\n\n/**\n * @internal\n */\nexport const TextShapeSchema: ISchema<PBTextShape> = {\n  serialize(value: PBTextShape, builder: ByteBuffer): void {\n    const writer = PBTextShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBTextShape {\n    return PBTextShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBTextShape {\n    // TODO: this is a hack.\n    return PBTextShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBUiText {\n  text: string\n  textColor: Color3 | undefined\n}\n\nfunction createBasePBUiText(): PBUiText {\n  return { text: '', textColor: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBUiText = {\n  encode(message: PBUiText, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.text !== '') {\n      writer.uint32(10).string(message.text)\n    }\n    if (message.textColor !== undefined) {\n      Color3.encode(message.textColor, writer.uint32(18).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBUiText {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBUiText()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.text = reader.string()\n          break\n        case 2:\n          message.textColor = Color3.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBUiText } from './pb/UiText.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1052\n\n/**\n * @internal\n */\nexport const UiTextSchema: ISchema<PBUiText> = {\n  serialize(value: PBUiText, builder: ByteBuffer): void {\n    const writer = PBUiText.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBUiText {\n    return PBUiText.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBUiText {\n    // TODO: this is a hack.\n    return PBUiText.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBVisibilityComponent {\n  /** default=true */\n  visible?: boolean | undefined\n}\n\nfunction createBasePBVisibilityComponent(): PBVisibilityComponent {\n  return { visible: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBVisibilityComponent = {\n  encode(message: PBVisibilityComponent, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.visible !== undefined) {\n      writer.uint32(8).bool(message.visible)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBVisibilityComponent {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBVisibilityComponent()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.visible = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBVisibilityComponent } from './pb/VisibilityComponent.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1081\n\n/**\n * @internal\n */\nexport const VisibilityComponentSchema: ISchema<PBVisibilityComponent> = {\n  serialize(value: PBVisibilityComponent, builder: ByteBuffer): void {\n    const writer = PBVisibilityComponent.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBVisibilityComponent {\n    return PBVisibilityComponent.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBVisibilityComponent {\n    // TODO: this is a hack.\n    return PBVisibilityComponent.decode(new Uint8Array())\n  }\n}\n","import type { IEngine } from '../../engine/types'\nimport * as TransformSchema from '../legacy/Transform'\nimport * as AnimatorSchema from './Animator.gen'\nimport * as AudioSourceSchema from './AudioSource.gen'\nimport * as AvatarAttachSchema from './AvatarAttach.gen'\nimport * as AvatarModifierAreaSchema from './AvatarModifierArea.gen'\nimport * as AvatarShapeSchema from './AvatarShape.gen'\nimport * as BillboardSchema from './Billboard.gen'\nimport * as BoxShapeSchema from './BoxShape.gen'\nimport * as CameraModeSchema from './CameraMode.gen'\nimport * as CameraModeAreaSchema from './CameraModeArea.gen'\nimport * as CylinderShapeSchema from './CylinderShape.gen'\nimport * as GLTFShapeSchema from './GLTFShape.gen'\nimport * as MaterialSchema from './Material.gen'\nimport * as MeshRendererSchema from './MeshRenderer.gen'\nimport * as NFTShapeSchema from './NFTShape.gen'\nimport * as OnPointerDownSchema from './OnPointerDown.gen'\nimport * as OnPointerDownResultSchema from './OnPointerDownResult.gen'\nimport * as OnPointerUpSchema from './OnPointerUp.gen'\nimport * as OnPointerUpResultSchema from './OnPointerUpResult.gen'\nimport * as PlaneShapeSchema from './PlaneShape.gen'\nimport * as PointerLockSchema from './PointerLock.gen'\nimport * as SphereShapeSchema from './SphereShape.gen'\nimport * as TextShapeSchema from './TextShape.gen'\nimport * as UiTextSchema from './UiText.gen'\nimport * as VisibilityComponentSchema from './VisibilityComponent.gen'\n\nexport function defineLibraryComponents({\n  defineComponentFromSchema\n}: Pick<IEngine, 'defineComponentFromSchema'>) {\n  return {\n\t\tAnimator: defineComponentFromSchema(AnimatorSchema.AnimatorSchema, AnimatorSchema.COMPONENT_ID),\n\t\tAudioSource: defineComponentFromSchema(AudioSourceSchema.AudioSourceSchema, AudioSourceSchema.COMPONENT_ID),\n\t\tAvatarAttach: defineComponentFromSchema(AvatarAttachSchema.AvatarAttachSchema, AvatarAttachSchema.COMPONENT_ID),\n\t\tAvatarModifierArea: defineComponentFromSchema(AvatarModifierAreaSchema.AvatarModifierAreaSchema, AvatarModifierAreaSchema.COMPONENT_ID),\n\t\tAvatarShape: defineComponentFromSchema(AvatarShapeSchema.AvatarShapeSchema, AvatarShapeSchema.COMPONENT_ID),\n\t\tBillboard: defineComponentFromSchema(BillboardSchema.BillboardSchema, BillboardSchema.COMPONENT_ID),\n\t\tBoxShape: defineComponentFromSchema(BoxShapeSchema.BoxShapeSchema, BoxShapeSchema.COMPONENT_ID),\n\t\tCameraMode: defineComponentFromSchema(CameraModeSchema.CameraModeSchema, CameraModeSchema.COMPONENT_ID),\n\t\tCameraModeArea: defineComponentFromSchema(CameraModeAreaSchema.CameraModeAreaSchema, CameraModeAreaSchema.COMPONENT_ID),\n\t\tCylinderShape: defineComponentFromSchema(CylinderShapeSchema.CylinderShapeSchema, CylinderShapeSchema.COMPONENT_ID),\n\t\tGLTFShape: defineComponentFromSchema(GLTFShapeSchema.GLTFShapeSchema, GLTFShapeSchema.COMPONENT_ID),\n\t\tMaterial: defineComponentFromSchema(MaterialSchema.MaterialSchema, MaterialSchema.COMPONENT_ID),\n\t\tMeshRenderer: defineComponentFromSchema(MeshRendererSchema.MeshRendererSchema, MeshRendererSchema.COMPONENT_ID),\n\t\tNFTShape: defineComponentFromSchema(NFTShapeSchema.NFTShapeSchema, NFTShapeSchema.COMPONENT_ID),\n\t\tOnPointerDown: defineComponentFromSchema(OnPointerDownSchema.OnPointerDownSchema, OnPointerDownSchema.COMPONENT_ID),\n\t\tOnPointerDownResult: defineComponentFromSchema(OnPointerDownResultSchema.OnPointerDownResultSchema, OnPointerDownResultSchema.COMPONENT_ID),\n\t\tOnPointerUp: defineComponentFromSchema(OnPointerUpSchema.OnPointerUpSchema, OnPointerUpSchema.COMPONENT_ID),\n\t\tOnPointerUpResult: defineComponentFromSchema(OnPointerUpResultSchema.OnPointerUpResultSchema, OnPointerUpResultSchema.COMPONENT_ID),\n\t\tPlaneShape: defineComponentFromSchema(PlaneShapeSchema.PlaneShapeSchema, PlaneShapeSchema.COMPONENT_ID),\n\t\tPointerLock: defineComponentFromSchema(PointerLockSchema.PointerLockSchema, PointerLockSchema.COMPONENT_ID),\n\t\tSphereShape: defineComponentFromSchema(SphereShapeSchema.SphereShapeSchema, SphereShapeSchema.COMPONENT_ID),\n\t\tTextShape: defineComponentFromSchema(TextShapeSchema.TextShapeSchema, TextShapeSchema.COMPONENT_ID),\n\t\tUiText: defineComponentFromSchema(UiTextSchema.UiTextSchema, UiTextSchema.COMPONENT_ID),\n\t\tVisibilityComponent: defineComponentFromSchema(VisibilityComponentSchema.VisibilityComponentSchema, VisibilityComponentSchema.COMPONENT_ID),\n  }\n}\n","import type { ISchema } from '../../schemas/ISchema'\nimport { Entity } from '../../engine/entity'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ComponentDefinition, IEngine } from '../../engine'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1\n\n/**\n * @public\n */\nexport type TransformType = {\n  position: { x: number; y: number; z: number }\n  rotation: { x: number; y: number; z: number; w: number }\n  scale: { x: number; y: number; z: number }\n  parent?: Entity\n}\n\n/** @internal */\nexport const TRANSFORM_LENGTH = 44\n\n/** @internal */\nexport const TransformSchema: ISchema<TransformType> = {\n  serialize(value: TransformType, builder: ByteBuffer): void {\n    const ptr = builder.incrementWriteOffset(TRANSFORM_LENGTH)\n    builder.setFloat32(ptr, value.position.x)\n    builder.setFloat32(ptr + 4, value.position.y)\n    builder.setFloat32(ptr + 8, value.position.z)\n    builder.setFloat32(ptr + 12, value.rotation.x)\n    builder.setFloat32(ptr + 16, value.rotation.y)\n    builder.setFloat32(ptr + 20, value.rotation.z)\n    builder.setFloat32(ptr + 24, value.rotation.w)\n    builder.setFloat32(ptr + 28, value.scale.x)\n    builder.setFloat32(ptr + 32, value.scale.y)\n    builder.setFloat32(ptr + 36, value.scale.z)\n    builder.setUint32(ptr + 40, value.parent || 0)\n  },\n  deserialize(reader: ByteBuffer): TransformType {\n    const ptr = reader.incrementReadOffset(TRANSFORM_LENGTH)\n    return {\n      position: {\n        x: reader.getFloat32(ptr),\n        y: reader.getFloat32(ptr + 4),\n        z: reader.getFloat32(ptr + 8)\n      },\n      rotation: {\n        x: reader.getFloat32(ptr + 12),\n        y: reader.getFloat32(ptr + 16),\n        z: reader.getFloat32(ptr + 20),\n        w: reader.getFloat32(ptr + 24)\n      },\n      scale: {\n        x: reader.getFloat32(ptr + 28),\n        y: reader.getFloat32(ptr + 32),\n        z: reader.getFloat32(ptr + 36)\n      },\n      parent: reader.getUint32(ptr + 40) as Entity\n    }\n  },\n  create(): TransformType {\n    return {\n      position: { x: 0, y: 0, z: 0 },\n      scale: { x: 1, y: 1, z: 1 },\n      rotation: { x: 0, y: 0, z: 0, w: 1 }\n    }\n  }\n}\n\nexport function defineTransformComponent({\n  defineComponentFromSchema\n}: Pick<IEngine, 'defineComponentFromSchema'>): ComponentDefinition<\n  ISchema<TransformType>,\n  Partial<TransformType>\n> {\n  return defineComponentFromSchema(TransformSchema, COMPONENT_ID)\n}\n","import { PreEngine } from '../engine'\nimport { ISchema } from '../schemas/ISchema'\n\nimport { defineLibraryComponents } from './generated/index.gen'\nimport * as MeshRendererSchema from './generated/MeshRenderer.gen'\nimport { PBMeshRenderer } from './generated/pb/MeshRenderer.gen'\nimport { defineTransformComponent } from './legacy/Transform'\n\nexport enum COMPONENT_ID {\n  SYNC = 1000\n}\n\n/**\n * @public\n */\nexport type SdkComponents = ReturnType<typeof defineSdkComponents>\n\nexport function defineSdkComponents(engine: PreEngine) {\n  const autogeneratedComponents = defineLibraryComponents(engine)\n  engine.removeComponentDefinition(autogeneratedComponents.MeshRenderer._id)\n  return {\n    ...autogeneratedComponents,\n    Transform: defineTransformComponent(engine),\n    MeshRenderer: engine.defineComponentFromSchema<\n      ISchema<PBMeshRenderer>,\n      Partial<PBMeshRenderer>\n    >(MeshRendererSchema.MeshRendererSchema, MeshRendererSchema.COMPONENT_ID)\n  }\n}\n","import { ByteBuffer } from '../serialization/ByteBuffer'\nimport { ISchema } from './ISchema'\n\n/**\n * @public\n */\nexport function IArray<T>(type: ISchema<T>): ISchema<Array<T>> {\n  return {\n    serialize(value: Array<T>, builder: ByteBuffer): void {\n      builder.writeUint32(value.length)\n      for (const item of value) {\n        type.serialize(item, builder)\n      }\n    },\n    deserialize(reader: ByteBuffer): Array<T> {\n      const newArray: Array<T> = []\n      const length = reader.readUint32()\n      for (let index = 0; index < length; index++) {\n        newArray.push(type.deserialize(reader))\n      }\n      return newArray\n    },\n    create() {\n      return []\n    }\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const Bool: ISchema<boolean> = {\n  serialize(value: boolean, builder: ByteBuffer): void {\n    builder.writeInt8(value ? 1 : 0)\n  },\n  deserialize(reader: ByteBuffer): boolean {\n    return reader.readInt8() === 1\n  },\n  create() {\n    return false\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport function IEnum<T>(type: ISchema<any>): ISchema<T> {\n  return {\n    serialize(value: T, builder: ByteBuffer): void {\n      type.serialize(value, builder)\n    },\n    deserialize(reader: ByteBuffer): T {\n      return type.deserialize(reader)\n    },\n    create() {\n      return type.create()\n    }\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const Float32: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeFloat32(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readFloat32()\n  },\n  create() {\n    return 0.0\n  }\n}\n\n/**\n * @public\n */\nexport const Float64: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeFloat64(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readFloat64()\n  },\n  create() {\n    return 0.0\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const Int64: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt64(BigInt(value))\n  },\n  deserialize(reader: ByteBuffer): number {\n    return Number(reader.readInt64())\n  },\n  create() {\n    return 0\n  }\n}\n\n/**\n * @public\n */\nexport const Int32: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt32(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readInt32()\n  },\n  create() {\n    return 0\n  }\n}\n\n/**\n * @public\n */\nexport const Int16: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt16(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readInt16()\n  },\n  create() {\n    return 0\n  }\n}\n\n/**\n * @public\n */\nexport const Int8: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt8(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readInt8()\n  },\n  create() {\n    return 0\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const FlatString: ISchema<string> = {\n  serialize(value: string, builder: ByteBuffer): void {\n    builder.writeBuffer(new TextEncoder().encode(value))\n  },\n  deserialize(reader: ByteBuffer): string {\n    return new TextDecoder().decode(reader.readBuffer())\n  },\n  create() {\n    return ''\n  }\n}\n\n/**\n * @public\n */\nexport const EcsString = FlatString\n","import { ByteBuffer } from '../serialization/ByteBuffer'\nimport { ISchema } from './ISchema'\nimport { ToOptional } from './typing'\n\n/**\n * @public\n */\nexport interface Spec {\n  [key: string]: ISchema\n}\n\n/**\n * @public\n */\nexport type Result<T extends Spec> = ToOptional<{\n  [K in keyof T]: T[K] extends ISchema\n    ? ReturnType<T[K]['deserialize']>\n    : T[K] extends Spec\n    ? Result<T[K]>\n    : never\n}>\n\nexport type MapSchemaType<T extends Spec> = ISchema<Result<T>>\n\n/**\n * @public\n */\nexport function IMap<T extends Spec>(spec: T): ISchema<Result<T>> {\n  return {\n    serialize(value: Result<T>, builder: ByteBuffer): void {\n      for (const key in spec) {\n        // TODO: as any\n        spec[key].serialize((value as any)[key], builder)\n      }\n    },\n    deserialize(reader: ByteBuffer): Result<T> {\n      const newValue: Result<T> = {} as any\n      for (const key in spec) {\n        // TODO: as any\n        ;(newValue as any)[key] = spec[key].deserialize(reader)\n      }\n      return newValue\n    },\n    create() {\n      const newValue: Result<T> = {} as any\n      for (const key in spec) {\n        // TODO: as any\n        ;(newValue as any)[key] = spec[key].create()\n      }\n      return newValue\n    }\n  }\n}\n","import { ByteBuffer } from '../serialization/ByteBuffer'\nimport { ISchema } from './ISchema'\n\n/**\n * @public\n */\nexport function IOptional<T>(spec: ISchema<T>): ISchema<T | undefined> {\n  return {\n    serialize(value: T | undefined, builder: ByteBuffer): void {\n      if (value) {\n        builder.writeInt8(1)\n        spec.serialize(value, builder)\n      } else {\n        builder.writeInt8(0)\n      }\n    },\n    deserialize(reader: ByteBuffer): T | undefined {\n      const exists = reader.readInt8()\n      if (exists) {\n        return spec.deserialize(reader)\n      }\n    },\n    create() {\n      return undefined\n    }\n  }\n}\n","import { IArray } from './Array'\nimport { Bool } from './basic/Boolean'\nimport { IEnum } from './basic/Enum'\nimport { Float32, Float64 } from './basic/Float'\nimport { Int16, Int32, Int8, Int64 as iInt64 } from './basic/Integer'\nimport { EcsString } from './basic/String'\nimport { ISchema } from './ISchema'\nimport { IMap } from './Map'\nimport { IOptional } from './Optional'\n\n/**\n * @public\n */\nexport namespace Schemas {\n  export type SchemaType = ISchema\n\n  export const Boolean = Bool\n\n  export const String = EcsString\n\n  export const Float = Float32\n  export const Double = Float64\n\n  export const Byte = Int8\n  export const Short = Int16\n  export const Int = Int32\n  export const Int64 = iInt64\n\n  export const Number = Float32\n\n  export const Enum = IEnum\n  export const Array = IArray\n  export const Map = IMap\n  export const Optional = IOptional\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crdtProtocol = exports.stateIterator = exports.sameData = void 0;\n__exportStar(require(\"./types\"), exports);\n/**\n * Compare raw data.\n * @internal\n */\nfunction sameData(a, b) {\n    // At reference level\n    if (a === b)\n        return true;\n    if (a instanceof Uint8Array && b instanceof Uint8Array) {\n        if (a.byteLength !== b.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < a.byteLength; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (globalThis.Buffer) {\n        if (a instanceof Buffer && b instanceof Buffer) {\n            // Deep level\n            return a.equals(b);\n        }\n    }\n    return false;\n}\nexports.sameData = sameData;\n/**\n * State iterator\n * @internal\n */\nfunction* stateIterator(state) {\n    for (const [key1, value1] of state.entries()) {\n        for (const [key2, value2] of value1.entries()) {\n            yield [key1, key2, value2];\n        }\n    }\n}\nexports.stateIterator = stateIterator;\n/**\n * @public\n * CRDT protocol.\n * Stores the latest state, and decides whenever we have\n * to process and store the new data in case its an update, or\n * to discard and send our local value cause remote it's outdated.\n */\nfunction crdtProtocol() {\n    /**\n     * Local state where we store the latest lamport timestamp\n     * and the raw data value\n     * @internal\n     */\n    const state = new Map();\n    /**\n     * We should call this fn in order to update the state\n     * @internal\n     */\n    function updateState(key1, key2, data, remoteTimestamp) {\n        const key1Value = state.get(key1);\n        const timestamp = Math.max(remoteTimestamp, key1Value?.get(key2)?.timestamp || 0);\n        if (key1Value) {\n            key1Value.set(key2, { timestamp, data });\n        }\n        else {\n            const newKey1Value = new Map();\n            newKey1Value.set(key2, { timestamp, data });\n            state.set(key1, newKey1Value);\n        }\n        return { timestamp, data };\n    }\n    /**\n     * Create an event for the specified key and store the new data and\n     * lamport timestmap incremented by one in the state.\n     * @public\n     */\n    function createEvent(key1, key2, data) {\n        // Increment the timestamp\n        const timestamp = (state.get(key1)?.get(key2)?.timestamp || 0) + 1;\n        updateState(key1, key2, data, timestamp);\n        return { key1, key2, data, timestamp };\n    }\n    /**\n     * Process the received message only if the lamport number recieved is higher\n     * than the stored one. If its lower, we spread it to the network to correct the peer.\n     * If they are equal, the bigger raw data wins.\n  \n     * Returns the recieved data if the lamport number was bigger than ours.\n     * If it was an outdated message, then we return void\n     * @public\n     */\n    function processMessage(message) {\n        const { key1, key2, data, timestamp } = message;\n        const current = state.get(key1)?.get(key2);\n        // The received message is > than our current value, update our state.\n        if (!current || current.timestamp < timestamp) {\n            updateState(key1, key2, data, timestamp);\n            return message;\n        }\n        // Outdated Message. Resend our state message through the wire.\n        if (current.timestamp > timestamp) {\n            return {\n                key1,\n                key2,\n                data: current.data,\n                timestamp: current.timestamp\n            };\n        }\n        // Same data, same timestamp. Weirdo echo message.\n        if (sameData(current.data, data)) {\n            return message;\n        }\n        // Race condition, same timestamp diff data.\n        function compareData(current, data) {\n            return current > data;\n        }\n        if (compareData(current.data, data)) {\n            return {\n                key1,\n                key2,\n                data: current.data,\n                timestamp: current.timestamp\n            };\n        }\n        updateState(key1, key2, data, timestamp).data;\n        return message;\n    }\n    /**\n     * Returns the current state\n     * @public\n     */\n    function getState() {\n        return state;\n    }\n    return {\n        createEvent,\n        processMessage,\n        getState\n    };\n}\nexports.crdtProtocol = crdtProtocol;\n//# sourceMappingURL=index.js.map","/**\n * Take the max between currentSize and intendedSize and then plus 1024. Then,\n *  find the next nearer multiple of 1024.\n * @param currentSize - number\n * @param intendedSize - number\n * @returns the calculated number\n */\nfunction getNextSize(currentSize: number, intendedSize: number) {\n  const minNewSize = Math.max(currentSize, intendedSize) + 1024\n  return Math.ceil(minNewSize / 1024) * 1024\n}\n\n/**\n * @param writing - writing option, see object specs.\n * @param reading - reading option, see object specs.\n * @param initialCapacity - Initial capacity of buffer to allocate, ignored if you use writing or reading options\n */\nexport interface CreateByteBufferOptions {\n  /**\n   * @param buffer - a buffer already allocated to read from there.\n   * @param currentOffset - set the cursor where begins to read. Default 0\n   * @param length - delimite where the valid data ends. Default: buffer.length\n   */\n  reading?: {\n    buffer: Uint8Array\n    length?: number\n    currentOffset: number\n  }\n\n  /**\n   * @param buffer - a buffer already allocated to write there.\n   * @param currentOffset - set the cursor to not start writing from the begin of it. Default 0\n   */\n  writing?: {\n    buffer: Uint8Array\n    currentOffset?: number\n  }\n\n  initialCapacity?: number\n}\n\nconst defaultInitialCapacity = 10240\n\n/**\n * ByteBuffer is a wrapper of DataView which also adds a read and write offset.\n *  Also in a write operation it resizes the buffer is being used if it needs.\n *\n * - Use read and write function to generate or consume data.\n * - Use set and get only if you are sure that you're doing.\n */\nexport function createByteBuffer(options: CreateByteBufferOptions = {}) {\n  const initialROffset: number = options.reading?.currentOffset || 0\n  let initialBuffer: Uint8Array | null = null\n  let initialWOffset: number = 0\n\n  if (options.writing) {\n    initialBuffer = options.writing.buffer\n    if (options.writing.currentOffset) {\n      initialWOffset = options.writing.currentOffset\n    }\n  } else if (options.reading) {\n    initialBuffer = options.reading.buffer\n    initialWOffset = options.reading.length || options.reading.buffer.length\n  } else {\n    initialBuffer = new Uint8Array(\n      options.initialCapacity || defaultInitialCapacity\n    )\n  }\n\n  let buffer: Uint8Array = initialBuffer!\n  let view: DataView = new DataView(buffer.buffer, buffer.byteOffset)\n  let woffset: number = initialWOffset\n  let roffset: number = initialROffset\n\n  /**\n   * Increement the write offset and resize the buffer if it needs.\n   */\n  const woAdd = (amount: number) => {\n    if (woffset + amount > buffer.byteLength) {\n      const newsize = getNextSize(buffer.byteLength, woffset + amount)\n      const newBuffer = new Uint8Array(newsize)\n      newBuffer.set(buffer)\n      buffer = newBuffer\n      view = new DataView(buffer.buffer)\n    }\n\n    woffset += amount\n    return woffset - amount\n  }\n\n  /**\n   * Increment the read offset and throw an error if it's trying to read\n   *  outside the bounds.\n   */\n  const roAdd = (amount: number) => {\n    if (roffset + amount > woffset) {\n      throw new Error('Outside of the bounds of writen data.')\n    }\n\n    roffset += amount\n    return roffset - amount\n  }\n\n  return {\n    /**\n     * @returns The entire current Uint8Array.\n     *\n     * WARNING: if the buffer grows, the view had changed itself,\n     *  and the reference will be a invalid one.\n     */\n    buffer(): Uint8Array {\n      return buffer\n    },\n    /**\n     * @returns The capacity of the current buffer\n     */\n    bufferLength(): number {\n      return buffer.length\n    },\n    /**\n     * Resets byteBuffer to avoid creating a new one\n     */\n    resetBuffer(): void {\n      roffset = 0\n      woffset = 0\n    },\n    /**\n     * @returns The current read offset\n     */\n    currentReadOffset(): number {\n      return roffset\n    },\n    /**\n     * @returns The current write offset\n     */\n    currentWriteOffset(): number {\n      return woffset\n    },\n    /**\n     * Reading purpose\n     * Returns the previuos offsset size before incrementing\n     */\n    incrementReadOffset(amount: number): number {\n      return roAdd(amount)\n    },\n    /**\n     * @returns How many bytes are available to read.\n     */\n    remainingBytes(): number {\n      return woffset - roffset\n    },\n    readFloat32(): number {\n      return view.getFloat32(roAdd(4))\n    },\n    readFloat64(): number {\n      return view.getFloat64(roAdd(8))\n    },\n    readInt8(): number {\n      return view.getInt8(roAdd(1))\n    },\n    readInt16(): number {\n      return view.getInt16(roAdd(2))\n    },\n    readInt32(): number {\n      return view.getInt32(roAdd(4))\n    },\n    readInt64(): bigint {\n      return view.getBigInt64(roAdd(8))\n    },\n    readUint8(): number {\n      return view.getUint8(roAdd(1))\n    },\n    readUint16(): number {\n      return view.getUint16(roAdd(2))\n    },\n    readUint32(): number {\n      return view.getUint32(roAdd(4))\n    },\n    readUint64(): bigint {\n      return view.getBigUint64(roAdd(8))\n    },\n    readBuffer() {\n      const length = view.getUint32(roAdd(4))\n      return buffer.subarray(roAdd(length), roAdd(0))\n    },\n    /**\n     * Writing purpose\n     */\n    /**\n     * Increment offset\n     * @param amount - how many bytes\n     * @returns The offset when this reserving starts.\n     */\n    incrementWriteOffset(amount: number): number {\n      return woAdd(amount)\n    },\n    /**\n     * @returns The total number of bytes writen in the buffer.\n     */\n    size(): number {\n      return woffset\n    },\n    /**\n     * Take care using this function, if you modify the data after, the\n     * returned subarray will change too. If you'll modify the content of the\n     * bytebuffer, maybe you want to use toCopiedBinary()\n     *\n     * @returns The subarray from 0 to offset as reference.\n     */\n    toBinary() {\n      return buffer.subarray(0, woffset)\n    },\n\n    /**\n     * Safe copied buffer of the current data of ByteBuffer\n     *\n     * @returns The subarray from 0 to offset.\n     */\n    toCopiedBinary() {\n      return new Uint8Array(this.toBinary())\n    },\n\n    writeBuffer(value: Uint8Array, writeLength: boolean = true) {\n      if (writeLength) {\n        this.writeUint32(value.byteLength)\n      }\n\n      const o = woAdd(value.byteLength)\n      buffer.set(value, o)\n    },\n    writeFloat32(value: number): void {\n      const o = woAdd(4)\n      view.setFloat32(o, value)\n    },\n    writeFloat64(value: number): void {\n      const o = woAdd(8)\n      view.setFloat64(o, value)\n    },\n    writeInt8(value: number): void {\n      const o = woAdd(1)\n      view.setInt8(o, value)\n    },\n    writeInt16(value: number): void {\n      const o = woAdd(2)\n      view.setInt16(o, value)\n    },\n    writeInt32(value: number): void {\n      const o = woAdd(4)\n      view.setInt32(o, value)\n    },\n    writeInt64(value: bigint): void {\n      const o = woAdd(8)\n      view.setBigInt64(o, value)\n    },\n    writeUint8(value: number): void {\n      const o = woAdd(1)\n      view.setUint8(o, value)\n    },\n    writeUint16(value: number): void {\n      const o = woAdd(2)\n      view.setUint16(o, value)\n    },\n    writeUint32(value: number): void {\n      const o = woAdd(4)\n      view.setUint32(o, value)\n    },\n    writeUint64(value: bigint): void {\n      const o = woAdd(8)\n      view.setBigUint64(o, value)\n    },\n    // Dataview Proxy\n    getFloat32(offset: number): number {\n      return view.getFloat32(offset)\n    },\n    getFloat64(offset: number): number {\n      return view.getFloat64(offset)\n    },\n    getInt8(offset: number): number {\n      return view.getInt8(offset)\n    },\n    getInt16(offset: number): number {\n      return view.getInt16(offset)\n    },\n    getInt32(offset: number): number {\n      return view.getInt32(offset)\n    },\n    getInt64(offset: number): bigint {\n      return view.getBigInt64(offset)\n    },\n    getUint8(offset: number): number {\n      return view.getUint8(offset)\n    },\n    getUint16(offset: number): number {\n      return view.getUint16(offset)\n    },\n    getUint32(offset: number): number {\n      return view.getUint32(offset)\n    },\n    getUint64(offset: number): bigint {\n      return view.getBigUint64(offset)\n    },\n    setFloat32(offset: number, value: number): void {\n      view.setFloat32(offset, value)\n    },\n    setFloat64(offset: number, value: number): void {\n      view.setFloat64(offset, value)\n    },\n    setInt8(offset: number, value: number): void {\n      view.setInt8(offset, value)\n    },\n    setInt16(offset: number, value: number): void {\n      view.setInt16(offset, value)\n    },\n    setInt32(offset: number, value: number): void {\n      view.setInt32(offset, value)\n    },\n    setInt64(offset: number, value: bigint): void {\n      view.setBigInt64(offset, value)\n    },\n    setUint8(offset: number, value: number): void {\n      view.setUint8(offset, value)\n    },\n    setUint16(offset: number, value: number): void {\n      view.setUint16(offset, value)\n    },\n    setUint32(offset: number, value: number): void {\n      view.setUint32(offset, value)\n    },\n    setUint64(offset: number, value: bigint): void {\n      view.setBigUint64(offset, value)\n    }\n  }\n}\n\n/**\n * @public\n */\nexport type ByteBuffer = ReturnType<typeof createByteBuffer>\n","/**\n * The wire message is the top-level message that can be packed\n *  inside it can contain a data with another structure or protocol\n *\n * Each wire message has three primitive property that it'll never change\n *   ---> length        uint32 (message size up to 4,294,967,295)\n *   ---> version       uint32 (for now just a number which is zero)\n *   ---> message type  uint32\n * The length indicates how many bytes are above self, the version in\n * combination with message type defines the set of handlers that will be\n * available to process the message\n *\n */\n\nimport { ByteBuffer } from './ByteBuffer'\n\ntype Uint32 = number\n\nexport namespace WireMessage {\n  export enum Enum {\n    RESERVED = 0,\n\n    // Component Operation\n    PUT_COMPONENT = 1,\n    DELETE_COMPONENT = 2,\n\n    MAX_MESSAGE_TYPE\n  }\n\n  /**\n   * @param length - Uint32 the length of all message (including the header)\n   * @param type - define the function which handles the data\n   */\n  export type Header = {\n    length: Uint32\n    type: Uint32\n  }\n\n  export const HEADER_LENGTH = 8\n  /**\n   * Validate if the message incoming is completed\n   * @param buf - ByteBuffer\n   */\n  export function validate(buf: ByteBuffer) {\n    const rem = buf.remainingBytes()\n    if (rem < HEADER_LENGTH) {\n      return false\n    }\n\n    const messageLength = buf.getUint32(buf.currentReadOffset())\n    if (rem < messageLength) {\n      return false\n    }\n\n    return true\n  }\n\n  export function readHeader(buf: ByteBuffer): Header | null {\n    if (!validate(buf)) {\n      return null\n    }\n\n    return {\n      length: buf.readUint32(),\n      type: buf.readUint32() as Enum\n    }\n  }\n}\n\nexport default WireMessage\n","import { ComponentDefinition } from '../../engine/component'\nimport { Entity } from '../../engine/entity'\nimport { ByteBuffer } from '../ByteBuffer'\nimport WireMessage from '../wireMessage'\n\nexport namespace ComponentOperation {\n  /**\n   * @param entity - Uint32 number of the entity\n   * @param componentId - Uint32 number of id\n   * @param timestamp - Uint64 Lamport timestamp\n   * @param data - Uint8[] data of component\n   */\n  export type IPutComponent = {\n    entity: Entity\n    componentId: number\n    timestamp: number\n    data: Uint8Array\n  }\n  export type IDeleteComponent = {\n    entity: Entity\n    componentId: number\n    timestamp: number\n    data?: undefined\n  }\n\n  export const MESSAGE_HEADER_LENGTH = 20\n  /**\n   * Call this function for an optimal writing data passing the ByteBuffer\n   *  already allocated\n   */\n  export function write(\n    type: WireMessage.Enum,\n    entity: Entity,\n    timestamp: number,\n    componentDefinition: ComponentDefinition,\n    buf: ByteBuffer\n  ) {\n    // reserve the beginning\n    const startMessageOffset = buf.incrementWriteOffset(\n      WireMessage.HEADER_LENGTH + MESSAGE_HEADER_LENGTH\n    )\n\n    // write body\n    if (type === WireMessage.Enum.PUT_COMPONENT) {\n      componentDefinition.writeToByteBuffer(entity, buf)\n    }\n    const messageLength = buf.size() - startMessageOffset\n\n    // Write WireMessage header\n    buf.setUint32(startMessageOffset, messageLength)\n    buf.setUint32(startMessageOffset + 4, type)\n\n    // Write ComponentOperation header\n    buf.setUint32(startMessageOffset + 8, entity)\n    buf.setUint32(startMessageOffset + 12, componentDefinition._id)\n    buf.setUint64(startMessageOffset + 16, BigInt(timestamp))\n    buf.setUint32(\n      startMessageOffset + 24,\n      messageLength - MESSAGE_HEADER_LENGTH - WireMessage.HEADER_LENGTH\n    )\n  }\n\n  export function read(\n    buf: ByteBuffer\n  ): (WireMessage.Header & (IPutComponent | IDeleteComponent)) | null {\n    const header = WireMessage.readHeader(buf)\n\n    if (!header) {\n      return null\n    }\n\n    const common = {\n      ...header,\n      entity: buf.readUint32() as Entity,\n      componentId: buf.readInt32(),\n      timestamp: Number(buf.readUint64())\n    }\n\n    if (header.type === WireMessage.Enum.DELETE_COMPONENT) {\n      return common\n    }\n\n    return {\n      ...common,\n      data: buf.readBuffer()\n    }\n  }\n}\n","import { Entity } from './entity'\n\nexport namespace EntityUtils {\n  /**\n   * Range is the first element and the last possible element, they both are included in the interval.\n   * [start, end]\n   */\n  export type EntityRange = readonly [number, number]\n\n  export const MAX_ENTITIES = 0xffffffff\n  export const DYNAMIC_ENTITIES_START_AT = 100e3\n  export const RESERVED_STATIC_ENTITIES = 512\n\n  export const RESERVED_ENTITIES_RANGE: EntityRange = [\n    0,\n    RESERVED_STATIC_ENTITIES - 1\n  ]\n\n  export const STATIC_ENTITIES_RANGE: EntityRange = [\n    RESERVED_STATIC_ENTITIES,\n    DYNAMIC_ENTITIES_START_AT - 1\n  ]\n\n  export const DYNAMIC_ENTITIES_RANGE: EntityRange = [\n    DYNAMIC_ENTITIES_START_AT,\n    MAX_ENTITIES\n  ]\n\n  function isInRange(entity: Entity, range: EntityRange): boolean {\n    return entity >= range[0] && entity <= range[1]\n  }\n\n  export function isDynamicEntity(entity: Entity) {\n    return isInRange(entity, DYNAMIC_ENTITIES_RANGE)\n  }\n\n  export function isStaticEntity(entity: Entity) {\n    return isInRange(entity, STATIC_ENTITIES_RANGE)\n  }\n\n  export function isReservedEntity(entity: Entity) {\n    return isInRange(entity, RESERVED_ENTITIES_RANGE)\n  }\n}\n\nexport default EntityUtils\n","import { crdtProtocol, Message as CrdtMessage } from '@dcl/crdt'\n\nimport type { PreEngine } from '../../engine'\nimport { Entity } from '../../engine/entity'\nimport { createByteBuffer } from '../../serialization/ByteBuffer'\nimport { ComponentOperation as Message } from '../../serialization/crdt/componentOperation'\nimport WireMessage from '../../serialization/wireMessage'\nimport { Transport } from './transports/types'\nimport { ReceiveMessage, TransportMessage } from './types'\n\nexport function crdtSceneSystem({\n  engine,\n  transports\n}: {\n  engine: PreEngine\n  transports: Transport[]\n}) {\n  // CRDT Client\n  const crdtClient = crdtProtocol<Uint8Array>()\n  // Messages that we received at transport.onMessage waiting to be processed\n  const receivedMessages: ReceiveMessage[] = []\n  // Messages already processed by the engine but that we need to broadcast to other transports.\n  const transportMessages: TransportMessage[] = []\n  // Map of entities already processed at least once\n\n  transports.forEach(\n    (transport) => (transport.onmessage = parseChunkMessage(transport.type))\n  )\n\n  /**\n   *\n   * @param transportType tranport id to identiy messages\n   * @returns a function to process received messages\n   */\n  function parseChunkMessage(transportType: string) {\n    /**\n     * Receives a chunk of binary messages and stores all the valid\n     * Component Operation Messages at messages queue\n     * @param chunkMessage A chunk of binary messages\n     */\n    return function parseChunkMessage(chunkMessage: Uint8Array) {\n      const buffer = createByteBuffer({\n        reading: { buffer: chunkMessage, currentOffset: 0 }\n      })\n\n      while (WireMessage.validate(buffer)) {\n        const offset = buffer.currentReadOffset()\n        const message = Message.read(buffer)!\n\n        const { type, entity, componentId, data, timestamp } = message\n        receivedMessages.push({\n          type,\n          entity,\n          componentId,\n          data,\n          timestamp,\n          transportType,\n          messageBuffer: buffer\n            .buffer()\n            .subarray(offset, buffer.currentReadOffset())\n        })\n      }\n    }\n  }\n\n  /**\n   * Return and clear the messaes queue\n   * @returns messages recieved by the transport to process on the next tick\n   */\n  function getMessages<T = unknown>(value: T[]) {\n    const messagesToProcess = Array.from(value)\n    value.length = 0\n    return messagesToProcess\n  }\n\n  /**\n   * This fn will be called on every tick.\n   * Process all the messages queue received by the transport\n   */\n  function receiveMessages() {\n    const messagesToProcess = getMessages(receivedMessages)\n    for (const transport of transports) {\n      const buffer = createByteBuffer()\n      for (const message of messagesToProcess) {\n        const { data, timestamp, componentId, entity, type } = message\n        const crdtMessage: CrdtMessage<Uint8Array> = {\n          key1: entity,\n          key2: componentId,\n          data: data || null,\n          timestamp: timestamp\n        }\n        const component = engine.getComponent(componentId)\n        const current = crdtClient.processMessage(crdtMessage)\n\n        // CRDT outdated message. Resend this message through the wire\n        if (crdtMessage !== current) {\n          const type = component.has(entity)\n            ? WireMessage.Enum.PUT_COMPONENT\n            : WireMessage.Enum.DELETE_COMPONENT\n          Message.write(type, entity, current.timestamp, component, buffer)\n        } else {\n          // Process CRDT Message\n          if (type === WireMessage.Enum.DELETE_COMPONENT) {\n            component.deleteFrom(entity)\n          } else {\n            const opts = {\n              reading: { buffer: message.data!, currentOffset: 0 }\n            }\n            const bb = createByteBuffer(opts)\n\n            // Update engine component\n            component.upsertFromBinary(message.entity, bb)\n            component.clearDirty()\n          }\n          // Add message to transport queue to be processed by others transports\n          transportMessages.push(message)\n        }\n      }\n\n      if (buffer.size()) {\n        transport.send(buffer.toBinary())\n      }\n    }\n  }\n\n  /**\n   * Iterates the dirty map and generates crdt messages to be send\n   * @param dirtyMap a map of { entities: [componentId] }\n   */\n  function createMessages(dirtyMap: Map<Entity, Set<number>>) {\n    // CRDT Messages will be the merge between the recieved transport messages and the new crdt messages\n    const crdtMessages = getMessages(transportMessages)\n    const buffer = createByteBuffer()\n\n    for (const [entity, componentsId] of dirtyMap) {\n      for (const componentId of componentsId) {\n        const component = engine.getComponent(componentId)\n        const entityComponent = component.has(entity)\n          ? component.toBinary(entity).toBinary()\n          : null\n        const event = crdtClient.createEvent(\n          entity,\n          componentId,\n          entityComponent\n        )\n        const offset = buffer.currentWriteOffset()\n        const type = component.has(entity)\n          ? WireMessage.Enum.PUT_COMPONENT\n          : WireMessage.Enum.DELETE_COMPONENT\n        const transportMessage: Omit<TransportMessage, 'messageBuffer'> = {\n          type,\n          componentId,\n          entity,\n          timestamp: event.timestamp\n        }\n        if (transports.some((t) => t.filter(transportMessage))) {\n          Message.write(type, entity, event.timestamp, component, buffer)\n          crdtMessages.push({\n            ...transportMessage,\n            messageBuffer: buffer\n              .buffer()\n              .subarray(offset, buffer.currentWriteOffset())\n          })\n        }\n      }\n    }\n\n    // Send messages to transports\n    const transportBuffer = createByteBuffer()\n    for (const transport of transports) {\n      transportBuffer.resetBuffer()\n      for (const message of crdtMessages) {\n        if (transport.filter(message)) {\n          transportBuffer.writeBuffer(message.messageBuffer, false)\n        }\n      }\n      if (transportBuffer.size()) {\n        transport.send(transportBuffer.toBinary())\n      }\n    }\n  }\n\n  return {\n    createMessages,\n    receiveMessages\n  }\n}\n","import { ComponentDefinition } from './component'\n\n/**\n * @public\n */\nexport type DeepReadonlyMap<K, V> = ReadonlyMap<\n  DeepReadonly<K>,\n  DeepReadonly<V>\n>\n/**\n * @public\n */\nexport type DeepReadonlySet<T> = ReadonlySet<DeepReadonly<T>>\n/**\n * @public\n */\nexport type DeepReadonlyObject<T> = {\n  readonly [K in keyof T]: DeepReadonly<T[K]>\n}\n/**\n * @public\n */\nexport type ReadonlyPrimitive =\n  | number\n  | string\n  | number[]\n  | string[]\n  | boolean\n  | boolean[]\n\n/**\n * @public\n */\nexport type ReadonlyComponentSchema<\n  T extends [ComponentDefinition, ...ComponentDefinition[]]\n> = {\n  [K in keyof T]: T[K] extends ComponentDefinition\n    ? ReturnType<T[K]['get']>\n    : never\n}\n\n/**\n * @public\n */\nexport type DeepReadonly<T> = T extends ReadonlyPrimitive\n  ? T\n  : T extends Map<infer K, infer V>\n  ? DeepReadonlyMap<K, V>\n  : T extends Set<infer M>\n  ? DeepReadonlySet<M>\n  : DeepReadonlyObject<T>\n\n/**\n * @internal\n */\nexport function deepReadonly<T extends Record<string, unknown>>(\n  val: T\n): DeepReadonly<T> {\n  return Object.freeze({ ...val }) as DeepReadonly<T>\n}\n","import type { ISchema } from '../schemas/ISchema'\nimport { ByteBuffer, createByteBuffer } from '../serialization/ByteBuffer'\nimport { Entity } from './entity'\nimport { deepReadonly, DeepReadonly } from './readonly'\n\n/**\n * @public\n */\nexport type EcsResult<T extends ISchema> = T extends ISchema\n  ? ReturnType<T['deserialize']>\n  : never\n\n/**\n * @public\n */\nexport type ComponentType<T extends ISchema> = EcsResult<T>\n\n/**\n * @public\n */\nexport type ComponentDefinition<\n  T extends ISchema = ISchema<any>,\n  ConstructorType = ComponentType<T>\n> = {\n  _id: number\n\n  /**\n   * Return the default value of the current component\n   */\n  default(): DeepReadonly<ComponentType<T>>\n\n  /**\n   * Get if the entity has this component\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.has(myEntity) // return false\n   * Transform.create(myEntity)\n   * Transform.has(myEntity) // return true\n   * ```\n   */\n  has(entity: Entity): boolean\n\n  /**\n   * Get the readonly component of the entity (to mutate it, use getMutable instead), throw an error if the entity doesn't have the component.\n   * @param entity\n   * @return\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity)\n   * const transform = Transform.get(myEntity) // return true\n   * log(transform.position.x === 0) // log 'true'\n   *\n   * transform.position.y = 10 // illegal statement, to mutate the component use getMutable\n   * ```\n   *\n   * ```ts\n   * const otherEntity = engine.addEntity()\n   * Transform.get(otherEntity) // throw an error!!\n   * ```\n   */\n  get(entity: Entity): DeepReadonly<ComponentType<T>>\n\n  /**\n   * Get the readonly component of the entity (to mutate it, use getMutable instead), or null if the entity doesn't have the component.\n   * @param entity\n   * @return\n   *\n   * Example:\n   * ```ts\n   * const otherEntity = engine.addEntity()\n   * log(Transform.get(otherEntity) === null) // log 'true'\n   * ```\n   */\n  getOrNull(entity: Entity): DeepReadonly<ComponentType<T>> | null\n\n  /**\n   * Add the current component to an entity, throw an error if the component already exists (use `createOrReplace` instead).\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   * @param val The initial value\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity, { ...Transform.default(), position: {x: 4, y: 0, z: 4} }) // ok!\n   * Transform.create(myEntity) // throw an error, the `Transform` component already exists in `myEntity`\n   * ````\n   */\n  create(entity: Entity, val?: ConstructorType): ComponentType<T>\n  /**\n   * Add the current component to an entity or replace the content if the entity already has the component\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   * @param val The initial or new value\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity) // ok!\n   * Transform.createOrReplace(myEntity, { ...Transform.default(), position: {x: 4, y: 0, z: 4} }) // ok!\n   * ````\n   */\n  createOrReplace(entity: Entity, val?: ComponentType<T>): ComponentType<T>\n\n  /**\n   * Delete the current component to an entity, return null if the entity doesn't have the current component.\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity) // ok!\n   * Transform.deleteFrom(myEntity) // return the component\n   * Transform.deleteFrom(myEntity) // return null\n   * ````\n   */\n  deleteFrom(entity: Entity): ComponentType<T> | null\n\n  /**\n   * Get the mutable component of the entity, throw an error if the entity doesn't have the component.\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity)\n   * Transform.getMutable(myEntity).position = {x: 4, y: 0, z: 4}\n   * ````\n   */\n  getMutable(entity: Entity): ComponentType<T>\n\n  /**\n   * Get the mutable component of the entity, return null if the entity doesn't have the component.\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const transform = Transform.getMutableOrNull(myEntity)\n   * if (transform) {\n   *   transform.position = {x: 4, y: 0, z: 4}\n   * }\n   * ````\n   */\n  getMutableOrNull(entity: Entity): ComponentType<T> | null\n\n  /**\n   * @internal\n   * @param entity\n   * @param data\n   */\n  upsertFromBinary(entity: Entity, data: ByteBuffer): ComponentType<T> | null\n  /**\n   * @internal\n   * @param entity\n   * @param data\n   */\n  updateFromBinary(entity: Entity, data: ByteBuffer): ComponentType<T> | null\n\n  // allocates a buffer and returns new buffer\n  /**\n   * @internal\n   * @param entity\n   */\n  toBinary(entity: Entity): ByteBuffer\n\n  // writes to a pre-allocated buffer\n  writeToByteBuffer(entity: Entity, buffer: ByteBuffer): void\n\n  /**\n   * @internal Use engine.getEntitiesWith(Component) instead.\n   * Get the iterator to every entity has the component\n   */\n  iterator(): Iterable<[Entity, ComponentType<T>]>\n\n  // Dirty\n  /**\n   * @internal\n   */\n  dirtyIterator(): Iterable<Entity>\n  /**\n   * @internal\n   */\n  clearDirty(): void\n  /**\n   * @internal\n   */\n  isDirty(entity: Entity): boolean\n}\n\nexport function defineComponent<\n  T extends ISchema,\n  ConstructorType = ComponentType<T>\n>(\n  componentId: number,\n  spec: T,\n  constructorDefault?: ConstructorType\n  // meta: { syncFlags }\n): ComponentDefinition<T, ConstructorType> {\n  const data = new Map<Entity, ComponentType<T>>()\n  const dirtyIterator = new Set<Entity>()\n\n  const defaultBuffer = createByteBuffer()\n  if (constructorDefault) {\n    spec.serialize(constructorDefault, defaultBuffer)\n  }\n\n  function getDefaultValue() {\n    if (constructorDefault) {\n      return spec.deserialize(\n        createByteBuffer({\n          writing: {\n            buffer: defaultBuffer.buffer(),\n            currentOffset: defaultBuffer.currentWriteOffset()\n          }\n        })\n      )\n    } else {\n      return spec.create()\n    }\n  }\n\n  function prefillValue(value: ConstructorType) {\n    return { ...getDefaultValue(), ...value }\n  }\n\n  return {\n    _id: componentId,\n    default: function () {\n      return getDefaultValue()\n    },\n    isDirty: function (entity: Entity): boolean {\n      return dirtyIterator.has(entity)\n    },\n    has: function (entity: Entity): boolean {\n      return data.has(entity)\n    },\n    deleteFrom: function (entity: Entity): ComponentType<T> | null {\n      const component = data.get(entity)\n      data.delete(entity)\n      dirtyIterator.add(entity)\n      return component || null\n    },\n    getOrNull: function (\n      entity: Entity\n    ): DeepReadonly<ComponentType<T>> | null {\n      const component = data.get(entity)\n      return component ? deepReadonly(component) : null\n    },\n    get: function (entity: Entity): DeepReadonly<ComponentType<T>> {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[getFrom] Component ${componentId} for ${entity} not found`\n        )\n      }\n      return deepReadonly(component)\n    },\n    create: function (\n      entity: Entity,\n      value?: ConstructorType\n    ): ComponentType<T> {\n      const component = data.get(entity)\n      if (component) {\n        throw new Error(\n          `[create] Component ${componentId} for ${entity} already exists`\n        )\n      }\n      const usedValue =\n        value === undefined ? getDefaultValue() : prefillValue(value)\n      data.set(entity, usedValue)\n      dirtyIterator.add(entity)\n      return usedValue\n    },\n    createOrReplace: function (\n      entity: Entity,\n      value?: ConstructorType\n    ): ComponentType<T> {\n      const usedValue =\n        value === undefined ? getDefaultValue() : prefillValue(value)\n      data.set(entity, usedValue!)\n      dirtyIterator.add(entity)\n      return usedValue!\n    },\n    getMutableOrNull: function (entity: Entity): ComponentType<T> | null {\n      const component = data.get(entity)\n      if (!component) {\n        return null\n      }\n      dirtyIterator.add(entity)\n      return component\n    },\n    getMutable: function (entity: Entity): ComponentType<T> {\n      const component = this.getMutableOrNull(entity)\n      if (component === null) {\n        throw new Error(\n          `[mutable] Component ${componentId} for ${entity} not found`\n        )\n      }\n      return component\n    },\n    iterator: function* (): Iterable<[Entity, ComponentType<T>]> {\n      for (const [entity, component] of data) {\n        yield [entity, component]\n      }\n    },\n    dirtyIterator: function* (): Iterable<Entity> {\n      for (const entity of dirtyIterator) {\n        yield entity\n      }\n    },\n    toBinary(entity: Entity): ByteBuffer {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[toBinary] Component ${componentId} for ${entity} not found`\n        )\n      }\n\n      const writeBuffer = createByteBuffer()\n      spec.serialize(component, writeBuffer)\n      return writeBuffer\n    },\n    writeToByteBuffer(entity: Entity, buffer: ByteBuffer): void {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[writeToByteBuffer] Component ${componentId} for ${entity} not found`\n        )\n      }\n\n      spec.serialize(component, buffer)\n    },\n    updateFromBinary(\n      entity: Entity,\n      buffer: ByteBuffer\n    ): ComponentType<T> | null {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[updateFromBinary] Component ${componentId} for ${entity} not found`\n        )\n      }\n      return this.upsertFromBinary(entity, buffer)\n    },\n    upsertFromBinary(\n      entity: Entity,\n      buffer: ByteBuffer\n    ): ComponentType<T> | null {\n      const newValue = spec.deserialize(buffer)\n      data.set(entity, newValue)\n      dirtyIterator.add(entity)\n      return newValue\n    },\n    clearDirty: function () {\n      dirtyIterator.clear()\n    }\n  }\n}\n","import { EntityUtils } from './entity-utils'\n\ndeclare const entitySymbol: unique symbol\n/**\n * @public\n */\nexport type Entity = number & { [entitySymbol]: true }\n\nexport function EntityContainer() {\n  const staticEntity = Entity(EntityUtils.STATIC_ENTITIES_RANGE)\n  const dynamicEntity = Entity(EntityUtils.DYNAMIC_ENTITIES_RANGE)\n  return {\n    generateEntity(dynamic: boolean = false): Entity {\n      if (dynamic) {\n        return dynamicEntity.generateEntity()\n      } else {\n        return staticEntity.generateEntity()\n      }\n    },\n    removeEntity(entity: Entity): boolean {\n      return (\n        staticEntity.removeEntity(entity) || dynamicEntity.removeEntity(entity)\n      )\n    },\n    isEntityExists(entity: Entity): boolean {\n      return (\n        EntityUtils.isReservedEntity(entity) ||\n        staticEntity.getExistingEntities().has(entity) ||\n        dynamicEntity.getExistingEntities().has(entity)\n      )\n    },\n    getExistingEntities(): Set<Entity> {\n      return new Set([\n        ...staticEntity.getExistingEntities(),\n        ...dynamicEntity.getExistingEntities()\n      ])\n    }\n  }\n}\n\nfunction Entity(range: EntityUtils.EntityRange) {\n  function createEntity(entity: number): Entity {\n    return entity as Entity\n  }\n\n  let entityCounter = range[0]\n  const usedEntities: Set<Entity> = new Set()\n\n  function generateEntity(): Entity {\n    if (entityCounter >= range[1]) {\n      throw new Error(\n        `It fails trying to generate an entity out of range [${range[0]}, ${range[1]}].`\n      )\n    }\n\n    const entity = createEntity(entityCounter)\n    entityCounter++\n\n    usedEntities.add(entity)\n    return entity\n  }\n\n  function removeEntity(entity: Entity) {\n    return usedEntities.delete(entity)\n  }\n\n  return {\n    getExistingEntities() {\n      return new Set(usedEntities)\n    },\n    generateEntity,\n    removeEntity\n  }\n}\n","/**\n * @public\n */\nexport type Update = (dt: number) => void\n\nexport const SYSTEMS_REGULAR_PRIORITY = 100e3\n\ntype SystemItem = {\n  fn: Update\n  priority: number\n  name?: string\n}\n\nexport function SystemContainer() {\n  const systems: SystemItem[] = []\n\n  function sort() {\n    systems.sort((a, b) => b.priority - a.priority)\n  }\n\n  function add(fn: Update, priority: number, name?: string): void {\n    if (systems.find((item) => item.fn === fn)) {\n      throw new Error('System already added')\n    } else if (name && systems.find((item) => item.name === name)) {\n      throw new Error('System name already used')\n    }\n\n    systems.push({\n      fn,\n      priority,\n      name\n    })\n    sort()\n  }\n\n  function remove(selector: string | Update) {\n    let index = -1\n\n    if (typeof selector === 'string') {\n      index = systems.findIndex((item) => item.name === selector)\n    } else {\n      index = systems.findIndex((item) => item.fn === selector)\n    }\n\n    if (index === -1) {\n      return false\n    }\n\n    systems.splice(index, 1)\n    sort()\n    return true\n  }\n\n  return {\n    add,\n    remove,\n    getSystems() {\n      return systems\n    }\n  }\n}\n","import { defineSdkComponents } from '../components'\nimport { Schemas } from '../schemas'\nimport { ISchema } from '../schemas/ISchema'\nimport { Result, Spec } from '../schemas/Map'\nimport { ByteBuffer } from '../serialization/ByteBuffer'\nimport { crdtSceneSystem } from '../systems/crdt'\nimport {\n  ComponentDefinition,\n  ComponentType,\n  defineComponent as defComponent\n} from './component'\nimport { Entity, EntityContainer } from './entity'\nimport { SystemContainer, SYSTEMS_REGULAR_PRIORITY, Update } from './systems'\nimport type { IEngineParams } from './types'\nimport { IEngine } from './types'\nimport { ReadonlyComponentSchema } from './readonly'\n\nexport * from './readonly'\nexport * from './types'\nexport { ComponentType, Entity, ByteBuffer, ComponentDefinition }\n\nfunction preEngine() {\n  const entityContainer = EntityContainer()\n  const componentsDefinition = new Map<number, ComponentDefinition<any>>()\n  // TODO: find a way to make this work.\n  // Maybe a proxy/callback to be up-to-date\n  const entitiesComponent = new Map<\n    number,\n    Set<ComponentDefinition<any>['_id']>\n  >()\n  const systems = SystemContainer()\n\n  function addSystem(\n    fn: Update,\n    priority: number = SYSTEMS_REGULAR_PRIORITY,\n    name?: string\n  ) {\n    systems.add(fn, priority, name)\n  }\n\n  function removeSystem(selector: string | Update) {\n    return systems.remove(selector)\n  }\n\n  function addEntity(dynamic: boolean = false) {\n    // entitiesCompnonent.set(entity, new Set())\n    const entity = entityContainer.generateEntity(dynamic)\n    return entity\n  }\n\n  function addDynamicEntity() {\n    return addEntity(true)\n  }\n\n  function removeEntity(entity: Entity) {\n    for (const [, component] of componentsDefinition) {\n      if (component.has(entity)) {\n        component.deleteFrom(entity)\n      }\n    }\n\n    return entityContainer.removeEntity(entity)\n  }\n\n  function defineComponentFromSchema<\n    T extends ISchema,\n    ConstructorType = ComponentType<T>\n  >(\n    spec: T,\n    componentId: number,\n    constructorDefault?: ConstructorType\n  ): ComponentDefinition<T, ConstructorType> {\n    if (componentsDefinition.get(componentId)) {\n      throw new Error(`Component ${componentId} already declared`)\n    }\n    const newComponent = defComponent<T, ConstructorType>(\n      componentId,\n      spec,\n      constructorDefault\n    )\n    componentsDefinition.set(componentId, newComponent)\n    return newComponent\n  }\n\n  function defineComponent<\n    T extends Spec,\n    ConstructorType = Partial<Result<T>>\n  >(\n    spec: T,\n    componentId: number,\n    constructorDefault?: ConstructorType\n  ): ComponentDefinition<ISchema<Result<T>>, ConstructorType> {\n    return defineComponentFromSchema(\n      Schemas.Map(spec),\n      componentId,\n      constructorDefault\n    )\n  }\n\n  function getComponent<T extends ISchema>(\n    componentId: number\n  ): ComponentDefinition<T> {\n    const component = componentsDefinition.get(componentId)\n    if (!component) {\n      throw new Error(\n        'Component not found. You need to declare the components at the beginnig of the engine declaration'\n      )\n    }\n    return component\n  }\n\n  function* getEntitiesWith<\n    T extends [ComponentDefinition, ...ComponentDefinition[]]\n  >(...components: T): Iterable<[Entity, ...ReadonlyComponentSchema<T>]> {\n    for (const [entity, ...groupComp] of getComponentDefGroup(...components)) {\n      yield [entity, ...groupComp.map((c) => c.get(entity))] as [\n        Entity,\n        ...ReadonlyComponentSchema<T>\n      ]\n    }\n  }\n\n  function* getComponentDefGroup<T extends ComponentDefinition[]>(\n    ...args: T\n  ): Iterable<[Entity, ...T]> {\n    const [firstComponentDef, ...componentDefinitions] = args\n    for (const [entity] of firstComponentDef.iterator()) {\n      let matches = true\n      for (const componentDef of componentDefinitions) {\n        if (!componentDef.has(entity)) {\n          matches = false\n          break\n        }\n      }\n\n      if (matches) {\n        yield [entity, ...args]\n      }\n    }\n  }\n\n  function getSystems() {\n    return systems.getSystems()\n  }\n\n  function removeComponentDefinition(componentId: number) {\n    componentsDefinition.delete(componentId)\n  }\n\n  return {\n    entitiesComponent,\n    componentsDefinition,\n    addEntity,\n    addDynamicEntity,\n    removeEntity,\n    addSystem,\n    getSystems,\n    removeSystem,\n    defineComponent,\n    defineComponentFromSchema,\n    getEntitiesWith,\n    getComponent,\n    removeComponentDefinition\n  }\n}\n\n/**\n * @public\n */\nexport type PreEngine = ReturnType<typeof preEngine>\n\n/**\n * @public\n */\nexport function Engine({ transports }: IEngineParams = {}): IEngine {\n  const engine = preEngine()\n  const crdtSystem = crdtSceneSystem({ engine, transports: transports || [] })\n  const baseComponents = defineSdkComponents(engine)\n\n  function update(dt: number) {\n    crdtSystem.receiveMessages()\n\n    for (const system of engine.getSystems()) {\n      system.fn(dt)\n    }\n\n    // Selected components that only exist one frame\n    //  then, they are deleted but their crdt state keeps\n    const removeSelectedComponents = [\n      baseComponents.OnPointerDownResult,\n      baseComponents.OnPointerUpResult\n    ]\n    const excludeComponentIds = removeSelectedComponents.map((item) => item._id)\n    for (const componentDef of removeSelectedComponents) {\n      for (const [entity] of engine.getEntitiesWith(componentDef)) {\n        componentDef.deleteFrom(entity)\n      }\n    }\n\n    // TODO: Perf tip\n    // Should we add some dirtyIteratorSet at engine level so we dont have\n    // to iterate all the component definitions to get the dirty ones ?\n    const dirtySet = new Map<Entity, Set<number>>()\n    for (const [componentId, definition] of engine.componentsDefinition) {\n      if (excludeComponentIds.includes(componentId)) continue\n\n      for (const entity of definition.dirtyIterator()) {\n        if (!dirtySet.has(entity)) {\n          dirtySet.set(entity, new Set())\n        }\n        dirtySet.get(entity)!.add(componentId)\n      }\n    }\n    crdtSystem.createMessages(dirtySet)\n\n    for (const [_componentId, definition] of engine.componentsDefinition) {\n      definition.clearDirty()\n    }\n  }\n\n  return {\n    addEntity: engine.addEntity,\n    addDynamicEntity: engine.addDynamicEntity,\n    removeEntity: engine.removeEntity,\n    addSystem: engine.addSystem,\n    removeSystem: engine.removeSystem,\n    defineComponent: engine.defineComponent,\n    defineComponentFromSchema: engine.defineComponentFromSchema,\n    getEntitiesWith: engine.getEntitiesWith,\n    getComponent: engine.getComponent,\n    removeComponentDefinition: engine.removeComponentDefinition,\n    update,\n    baseComponents\n  }\n}\n","/** @public */\nexport enum ECSComponentIDs {\n\tTransform = 1,\n\tAnimator = 1042,\n\tAudioSource = 1020,\n\tAvatarAttach = 1073,\n\tAvatarModifierArea = 1070,\n\tAvatarShape = 1080,\n\tBillboard = 1090,\n\tBoxShape = 1013,\n\tCameraMode = 1072,\n\tCameraModeArea = 1071,\n\tCylinderShape = 1016,\n\tGLTFShape = 1041,\n\tMaterial = 1017,\n\tMeshRenderer = 1018,\n\tNFTShape = 1040,\n\tOnPointerDown = 1060,\n\tOnPointerDownResult = 1066,\n\tOnPointerUp = 1061,\n\tOnPointerUpResult = 1065,\n\tPlaneShape = 1014,\n\tPointerLock = 1074,\n\tSphereShape = 1015,\n\tTextShape = 1030,\n\tUiText = 1052,\n\tVisibilityComponent = 1081,\n}\n","import { TransportMessage } from '../types'\nimport { Transport } from './types'\nimport { ECSComponentIDs } from '../../../components/generated/ids.gen'\n\nconst componentIds = Object.values(ECSComponentIDs)\n  .filter((a) => typeof a === 'number')\n  .map(Number)\n\nexport function createRendererTransport(): Transport {\n  if (typeof dcl === 'undefined') {\n    // TODO: replace with new rpc\n    throw new Error(\n      'Cannot create createRendererTransport without global dcl object'\n    )\n  }\n\n  const type = 'renderer'\n  return {\n    type,\n    send(message: Uint8Array): void {\n      // TODO: replace with new rpc\n      dcl\n        .callRpc('@decentraland/ExperimentalAPI', 'sendToRenderer', [\n          { data: new Uint8Array(message) }\n        ])\n        .catch(dcl.error)\n    },\n    filter(message: TransportMessage): boolean {\n      // Echo message, ignore them\n      if (message.transportType === type) {\n        return false\n      }\n\n      // Only send renderer components (Proto Generated)\n      if (!componentIds.includes(message.componentId)) {\n        return false\n      }\n\n      return !!message\n    }\n  }\n}\n","import { TransportMessage } from '../types'\nimport { Transport } from './types'\n\nexport function createNetworkTransport(): Transport {\n  // const rpc = new RpcTransport()\n  function send(..._args: any[]) {\n    // console.log('NetworkMessage Sent: ', ...args)\n  }\n\n  const type = 'network-transport'\n  return {\n    send,\n    type,\n    filter(message: TransportMessage): boolean {\n      // Echo message, ignore them\n      if (message.transportType === type) {\n        return false\n      }\n\n      // TODO: Static entities & Network components\n\n      return !!message // validComponents.includes(componentId)\n    }\n  }\n}\n","/// <reference types=\"@dcl/posix\" />\n\n/**\n * @alpha * This file initialization is an alpha one. This is based on the old-ecs\n * init and it'll be changing.\n */\n\nimport { Engine } from '../engine'\nimport { createRendererTransport } from '../systems/crdt/transports/rendererTransport'\nimport { createNetworkTransport } from '../systems/crdt/transports/networkTransport'\n\nconst rendererTransport = createRendererTransport()\nexport const engine = Engine({\n  transports: [rendererTransport, createNetworkTransport()]\n})\n\nif (typeof dcl !== 'undefined') {\n  dcl.loadModule('@decentraland/ExperimentalAPI', {}).catch(dcl.error)\n\n  async function pullRendererMessages() {\n    const response = await dcl.callRpc(\n      '@decentraland/ExperimentalAPI',\n      'messageFromRenderer',\n      []\n    )\n\n    if (response.data?.length) {\n      if (rendererTransport.onmessage) {\n        for (const byteArray of response.data) {\n          rendererTransport.onmessage(byteArray)\n        }\n      }\n    }\n  }\n\n  dcl.onUpdate((dt: number) => {\n    pullRendererMessages()\n      .catch(dcl.error)\n      .finally(() => engine.update(dt))\n  })\n}\n\nexport const log = dcl.log\nexport const error = dcl.error\n","import { engine } from '../../runtime/initialization'\n\n/** @public */\nexport const Transform = engine.baseComponents.Transform\n/** @public */\nexport const Animator = engine.baseComponents.Animator\n/** @public */\nexport const AudioSource = engine.baseComponents.AudioSource\n/** @public */\nexport const AvatarAttach = engine.baseComponents.AvatarAttach\n/** @public */\nexport const AvatarModifierArea = engine.baseComponents.AvatarModifierArea\n/** @public */\nexport const AvatarShape = engine.baseComponents.AvatarShape\n/** @public */\nexport const Billboard = engine.baseComponents.Billboard\n/** @public */\nexport const BoxShape = engine.baseComponents.BoxShape\n/** @public */\nexport const CameraMode = engine.baseComponents.CameraMode\n/** @public */\nexport const CameraModeArea = engine.baseComponents.CameraModeArea\n/** @public */\nexport const CylinderShape = engine.baseComponents.CylinderShape\n/** @public */\nexport const GLTFShape = engine.baseComponents.GLTFShape\n/** @public */\nexport const Material = engine.baseComponents.Material\n/** @public */\nexport const MeshRenderer = engine.baseComponents.MeshRenderer\n/** @public */\nexport const NFTShape = engine.baseComponents.NFTShape\n/** @public */\nexport const OnPointerDown = engine.baseComponents.OnPointerDown\n/** @public */\nexport const OnPointerDownResult = engine.baseComponents.OnPointerDownResult\n/** @public */\nexport const OnPointerUp = engine.baseComponents.OnPointerUp\n/** @public */\nexport const OnPointerUpResult = engine.baseComponents.OnPointerUpResult\n/** @public */\nexport const PlaneShape = engine.baseComponents.PlaneShape\n/** @public */\nexport const PointerLock = engine.baseComponents.PointerLock\n/** @public */\nexport const SphereShape = engine.baseComponents.SphereShape\n/** @public */\nexport const TextShape = engine.baseComponents.TextShape\n/** @public */\nexport const UiText = engine.baseComponents.UiText\n/** @public */\nexport const VisibilityComponent = engine.baseComponents.VisibilityComponent\n","import { engine } from '../../runtime/initialization'\n/** @public */\nexport namespace Components {\n\t/** @public */\n\texport const Transform = engine.baseComponents.Transform\n\t/** @public */\n\texport const Animator = engine.baseComponents.Animator\n\t/** @public */\n\texport const AudioSource = engine.baseComponents.AudioSource\n\t/** @public */\n\texport const AvatarAttach = engine.baseComponents.AvatarAttach\n\t/** @public */\n\texport const AvatarModifierArea = engine.baseComponents.AvatarModifierArea\n\t/** @public */\n\texport const AvatarShape = engine.baseComponents.AvatarShape\n\t/** @public */\n\texport const Billboard = engine.baseComponents.Billboard\n\t/** @public */\n\texport const BoxShape = engine.baseComponents.BoxShape\n\t/** @public */\n\texport const CameraMode = engine.baseComponents.CameraMode\n\t/** @public */\n\texport const CameraModeArea = engine.baseComponents.CameraModeArea\n\t/** @public */\n\texport const CylinderShape = engine.baseComponents.CylinderShape\n\t/** @public */\n\texport const GLTFShape = engine.baseComponents.GLTFShape\n\t/** @public */\n\texport const Material = engine.baseComponents.Material\n\t/** @public */\n\texport const MeshRenderer = engine.baseComponents.MeshRenderer\n\t/** @public */\n\texport const NFTShape = engine.baseComponents.NFTShape\n\t/** @public */\n\texport const OnPointerDown = engine.baseComponents.OnPointerDown\n\t/** @public */\n\texport const OnPointerDownResult = engine.baseComponents.OnPointerDownResult\n\t/** @public */\n\texport const OnPointerUp = engine.baseComponents.OnPointerUp\n\t/** @public */\n\texport const OnPointerUpResult = engine.baseComponents.OnPointerUpResult\n\t/** @public */\n\texport const PlaneShape = engine.baseComponents.PlaneShape\n\t/** @public */\n\texport const PointerLock = engine.baseComponents.PointerLock\n\t/** @public */\n\texport const SphereShape = engine.baseComponents.SphereShape\n\t/** @public */\n\texport const TextShape = engine.baseComponents.TextShape\n\t/** @public */\n\texport const UiText = engine.baseComponents.UiText\n\t/** @public */\n\texport const VisibilityComponent = engine.baseComponents.VisibilityComponent\n}\n"],"names":["Object","defineProperty","exports","value","Vector3","create","x","y","z","copy","source","dest","length","vector","Math","sqrt","scaleToRef","scale","result","normalizeFromLength","len","normalizeFromLengthToRef","lerpToRef","start","end","amount","add","vector1","vector2","subtract","minuend","subtrahend","subtractToRef","opposite","clone","assign","lengthSquared","normalize","normalizeToRef","dot","left","right","rotate","q","qx","qy","qz","w","qw","ix","iy","iz","iw","lerp","cross","Zero","crossToRef","One","Up","Down","Forward","Backward","Right","Left","Scalar","TwoPi","PI","sign","_value","isNaN","clamp","min","max","repeat","floor","deltaAngle","current","target","num","moveTowards","maxDelta","abs","withinEpsilon","a","b","epsilon","toHex","i","str","toString","toUpperCase","log2","log","LOG2E","denormalize","normalized","pingPong","tx","t","smoothStep","from","to","moveTowardsAngle","lerpAngle","inverseLerp","hermite","value1","tangent1","value2","tangent2","squared","cubed","randomRange","random","rangeToPercent","percentToRange","percent","normalizeRadians","angle","Orientation","Space","RAD2DEG","DEG2RAD","ToLinearSpace","ToGammaSpace","Epsilon","Quaternion","Vector3_1","require$$0","Scalar_1","require$$1","types_1","require$$2","rotationYawPitchRoll","yaw","pitch","roll","halfPitch","halfYaw","halfRoll","c1","cos","c2","c3","s1","sin","s2","s3","quat1","quat2","dotVal","acos","qLength","Identity","slerp","slerpToRef","multiplyToRef","self","q1","q2","euler","rotateTowards","maxDegreesDelta","lookRotation","forward","up","forwardNew","upNew","m00","m01","m02","m10","m11","m12","m20","m21","m22","num8","quaternion","num7","num4","num6","num3","num5","num2","fromToRotation","v0","v1","eulerAngles","out","unit","test","atan2","asin","rotationYawPitchRollToRef","fromRotationMatrixToRef","matrix","data","_m","m13","m23","m31","m32","m33","trace","s","flag","multiply","angleAxis","degress","axis","radians","a2","__createBinding","this","o","m","k","k2","undefined","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","require$$3","aspromise","fn","ctx","params","Array","arguments","offset","index","pending","Promise","resolve","reject","err","apply","base64","string","n","charAt","ceil","b64","s64","encode","buffer","parts","chunk","j","push","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","Error","EventEmitter","_listeners","eventemitter","on","evt","off","listeners","splice","emit","args","factory","Float32Array","f32","f8b","Uint8Array","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","float","inquire","moduleName","mod","eval","replace","keys","e","inquire_1","utf8","read","write","pool_1","alloc","size","SIZE","MAX","slab","longbits","LongBits","util","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","parseInt","fromString","low","high","unsigned","toLong","Boolean","fromHash","hash","toHash","mask","part0","part1","part2","merge","dst","src","ifNotSet","newError","name","CustomError","message","properties","captureStackTrace","stack","constructor","asPromise","require$$4","require$$5","pool","require$$6","require$$7","isNode","global","process","versions","node","window","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","isObject","isset","isSet","obj","prop","isArray","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","bits","fromBits","lcFirst","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","writer","Writer","BufferWriter","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","set","fork","reset","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","byteLength","reader","Reader","BufferReader","indexOutOfRange","writeLength","RangeError","create_array","isBuffer","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","utf8Slice","service","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","rpcCall","method","requestCtor","responseCtor","request","callback","response","setTimeout","endedByRPC","roots","protobuf","configure","build","rpc","minimalExports","requireMinimal","createBasePBAnimator","PBAnimator","_m0","v","PBAnimationState","input","tag","createBasePBAnimationState","clip","playing","weight","speed","loop","shouldReset","COMPONENT_ID","AnimatorSchema","serialize","builder","writeBuffer","deserialize","remainingBytes","createBasePBAudioSource","volume","audioClipUrl","PBAudioSource","AudioSourceSchema","AvatarAnchorPoint","createBasePBAvatarAttach","avatarId","anchorPointId","PBAvatarAttach","AvatarAttachSchema","createBaseVector3","AvatarModifier","createBasePBAvatarModifierArea","area","excludeIds","modifiers","PBAvatarModifierArea","end2","AvatarModifierAreaSchema","long","wasm","WebAssembly","Instance","Module","isLong","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","indexOf","radixToPower","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","other","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","ge","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","longExports","requireLong","createBaseColor3","r","g","Color3","createBasePBAvatarShape","id","bodyShape","skinColor","hairColor","eyeColor","wearables","expressionTriggerId","expressionTriggerTimestamp","stickerTriggerId","stickerTriggerTimestamp","talking","PBAvatarShape","longToNumber","globalThis","MAX_SAFE_INTEGER","AvatarShapeSchema","createBasePBBillboard","PBBillboard","BillboardSchema","createBasePBBoxShape","withCollisions","isPointerBlocker","visible","uvs","PBBoxShape","BoxShapeSchema","createBasePBCameraMode","mode","PBCameraMode","CameraModeSchema","createBasePBCameraModeArea","PBCameraModeArea","CameraModeAreaSchema","createBasePBCylinderShape","radiusTop","radiusBottom","PBCylinderShape","CylinderShapeSchema","createBasePBGLTFShape","PBGLTFShape","GLTFShapeSchema","TextureWrapMode","FilterMode","TransparencyMode","createBasePBMaterial","texture","alphaTest","castShadows","alphaTexture","emissiveTexture","bumpTexture","albedoColor","emissiveColor","reflectivityColor","transparencyMode","metallic","roughness","glossiness","specularIntensity","emissiveIntensity","directIntensity","PBMaterial","PBMaterial_Texture","createBasePBMaterial_Texture","wrapMode","filterMode","MaterialSchema","createBasePBMeshRenderer","box","sphere","cylinder","plane","PBMeshRenderer","PBMeshRenderer_BoxMesh","PBMeshRenderer_SphereMesh","PBMeshRenderer_CylinderMesh","PBMeshRenderer_PlaneMesh","createBasePBMeshRenderer_BoxMesh","createBasePBMeshRenderer_CylinderMesh","createBasePBMeshRenderer_PlaneMesh","createBasePBMeshRenderer_SphereMesh","_","MeshRendererSchema","createBasePBNFTShape","assetId","style","color","PBNFTShape","NFTShapeSchema","createBasePBOnPointerDown","button","hoverText","maxDistance","showFeedback","PBOnPointerDown","OnPointerDownSchema","createBasePBOnPointerDownResult","meshName","origin","direction","point","normal","distance","timestamp","PBOnPointerDownResult","OnPointerDownResultSchema","createBasePBOnPointerUp","PBOnPointerUp","OnPointerUpSchema","createBasePBOnPointerUpResult","PBOnPointerUpResult","OnPointerUpResultSchema","createBasePBPlaneShape","PBPlaneShape","PlaneShapeSchema","createBasePBPointerLock","isPointerLocked","PBPointerLock","PointerLockSchema","createBasePBSphereShape","PBSphereShape","SphereShapeSchema","createBasePBTextShape","text","font","opacity","fontSize","fontAutoSize","hTextAlign","vTextAlign","width","height","paddingTop","paddingRight","paddingBottom","paddingLeft","lineSpacing","lineCount","textWrapping","shadowBlur","shadowOffsetX","shadowOffsetY","outlineWidth","shadowColor","outlineColor","textColor","PBTextShape","TextShapeSchema","createBasePBUiText","PBUiText","UiTextSchema","createBasePBVisibilityComponent","PBVisibilityComponent","VisibilityComponentSchema","defineLibraryComponents","defineComponentFromSchema","Animator","AnimatorSchema.AnimatorSchema","AnimatorSchema.COMPONENT_ID","AudioSource","AudioSourceSchema.AudioSourceSchema","AudioSourceSchema.COMPONENT_ID","AvatarAttach","AvatarAttachSchema.AvatarAttachSchema","AvatarAttachSchema.COMPONENT_ID","AvatarModifierArea","AvatarModifierAreaSchema.AvatarModifierAreaSchema","AvatarModifierAreaSchema.COMPONENT_ID","AvatarShape","AvatarShapeSchema.AvatarShapeSchema","AvatarShapeSchema.COMPONENT_ID","Billboard","BillboardSchema.BillboardSchema","BillboardSchema.COMPONENT_ID","BoxShape","BoxShapeSchema.BoxShapeSchema","BoxShapeSchema.COMPONENT_ID","CameraMode","CameraModeSchema.CameraModeSchema","CameraModeSchema.COMPONENT_ID","CameraModeArea","CameraModeAreaSchema.CameraModeAreaSchema","CameraModeAreaSchema.COMPONENT_ID","CylinderShape","CylinderShapeSchema.CylinderShapeSchema","CylinderShapeSchema.COMPONENT_ID","GLTFShape","GLTFShapeSchema.GLTFShapeSchema","GLTFShapeSchema.COMPONENT_ID","Material","MaterialSchema.MaterialSchema","MaterialSchema.COMPONENT_ID","MeshRenderer","MeshRendererSchema.MeshRendererSchema","MeshRendererSchema.COMPONENT_ID","NFTShape","NFTShapeSchema.NFTShapeSchema","NFTShapeSchema.COMPONENT_ID","OnPointerDown","OnPointerDownSchema.OnPointerDownSchema","OnPointerDownSchema.COMPONENT_ID","OnPointerDownResult","OnPointerDownResultSchema.OnPointerDownResultSchema","OnPointerDownResultSchema.COMPONENT_ID","OnPointerUp","OnPointerUpSchema.OnPointerUpSchema","OnPointerUpSchema.COMPONENT_ID","OnPointerUpResult","OnPointerUpResultSchema.OnPointerUpResultSchema","OnPointerUpResultSchema.COMPONENT_ID","PlaneShape","PlaneShapeSchema.PlaneShapeSchema","PlaneShapeSchema.COMPONENT_ID","PointerLock","PointerLockSchema.PointerLockSchema","PointerLockSchema.COMPONENT_ID","SphereShape","SphereShapeSchema.SphereShapeSchema","SphereShapeSchema.COMPONENT_ID","TextShape","TextShapeSchema.TextShapeSchema","TextShapeSchema.COMPONENT_ID","UiText","UiTextSchema.UiTextSchema","UiTextSchema.COMPONENT_ID","VisibilityComponent","VisibilityComponentSchema.VisibilityComponentSchema","VisibilityComponentSchema.COMPONENT_ID","TRANSFORM_LENGTH","TransformSchema","ptr","incrementWriteOffset","setFloat32","position","rotation","setUint32","parent","incrementReadOffset","getFloat32","getUint32","defineTransformComponent","defineSdkComponents","engine","autogeneratedComponents","removeComponentDefinition","_id","Transform","IArray","type","writeUint32","item","newArray","readUint32","Bool","writeInt8","readInt8","IEnum","Float32","writeFloat32","readFloat32","Float64","writeFloat64","readFloat64","Int64","writeInt64","BigInt","readInt64","Int32","writeInt32","readInt32","Int16","writeInt16","readInt16","Int8","FlatString","TextEncoder","TextDecoder","readBuffer","EcsString","IMap","spec","key","newValue","IOptional","Schemas","Float","Double","Byte","Short","Int","iInt64","Enum","Map","Optional","dist","types","sameData","crdtProtocol","stateIterator","state","key1","entries","key2","updateState","remoteTimestamp","key1Value","newKey1Value","createEvent","processMessage","compareData","getState","distExports","requireDist","getNextSize","currentSize","intendedSize","minNewSize","defaultInitialCapacity","createByteBuffer","options","initialROffset","reading","currentOffset","initialBuffer","initialWOffset","writing","initialCapacity","view","DataView","byteOffset","woffset","roffset","woAdd","newsize","roAdd","bufferLength","resetBuffer","currentReadOffset","currentWriteOffset","getFloat64","getInt8","getInt16","getInt32","getBigInt64","readUint8","getUint8","readUint16","getUint16","readUint64","getBigUint64","toBinary","toCopiedBinary","setFloat64","setInt8","setInt16","setInt32","setBigInt64","writeUint8","setUint8","writeUint16","setUint16","writeUint64","setBigUint64","getInt64","getUint64","setInt64","setUint64","WireMessage","validate","HEADER_LENGTH","readHeader","WireMessage$1","ComponentOperation","EntityUtils","crdtSceneSystem","transports","crdtClient","receivedMessages","transportMessages","getMessages","messagesToProcess","forEach","transport","onmessage","transportType","chunkMessage","Message","entity","componentId","messageBuffer","createMessages","dirtyMap","crdtMessages","componentsId","component","getComponent","entityComponent","has","event","PUT_COMPONENT","DELETE_COMPONENT","transportMessage","some","filter","transportBuffer","send","receiveMessages","crdtMessage","deleteFrom","bb","upsertFromBinary","clearDirty","deepReadonly","defineComponent","constructorDefault","dirtyIterator","Set","defaultBuffer","getDefaultValue","prefillValue","default","isDirty","delete","getOrNull","usedValue","createOrReplace","getMutableOrNull","getMutable","iterator","writeToByteBuffer","updateFromBinary","clear","EntityContainer","staticEntity","Entity","STATIC_ENTITIES_RANGE","dynamicEntity","DYNAMIC_ENTITIES_RANGE","generateEntity","dynamic","removeEntity","isEntityExists","isReservedEntity","getExistingEntities","range","entityCounter","usedEntities","MESSAGE_HEADER_LENGTH","componentDefinition","startMessageOffset","messageLength","header","common","isInRange","MAX_ENTITIES","DYNAMIC_ENTITIES_START_AT","RESERVED_STATIC_ENTITIES","RESERVED_ENTITIES_RANGE","isDynamicEntity","isStaticEntity","SYSTEMS_REGULAR_PRIORITY","SystemContainer","systems","sort","priority","find","remove","selector","findIndex","getSystems","preEngine","entityContainer","componentsDefinition","entitiesComponent","addEntity","newComponent","defComponent","addDynamicEntity","addSystem","removeSystem","getEntitiesWith","components","groupComp","firstComponentDef","componentDefinitions","matches","componentDef","getComponentDefGroup","map","Engine","crdtSystem","baseComponents","update","dt","system","removeSelectedComponents","excludeComponentIds","dirtySet","definition","includes","_componentId","ECSComponentIDs","componentIds","values","createRendererTransport","dcl","callRpc","catch","error","createNetworkTransport","_args","rendererTransport","async","pullRendererMessages","byteArray","loadModule","onUpdate","finally","Components","distExports$1"],"mappings":"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"}