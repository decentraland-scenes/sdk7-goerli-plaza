{"version":3,"file":"index.min.js","sources":["../node_modules/@dcl/ecs-math/dist/Vector3.js","../node_modules/@dcl/ecs-math/dist/Scalar.js","../node_modules/@dcl/ecs-math/dist/types.js","../node_modules/@dcl/ecs-math/dist/Quaternion.js","../node_modules/@dcl/ecs-math/dist/index.js","../node_modules/@dcl/crdt/dist/types.js","../node_modules/@dcl/crdt/dist/index.js","../src/serialization/ByteBuffer/index.ts","../src/serialization/wireMessage.ts","../src/serialization/crdt/componentOperation.ts","../src/systems/crdt/utils.ts","../src/engine/entity-utils.ts","../src/systems/crdt/index.ts","../src/engine/entity.ts","../src/engine/utils.ts","../src/engine/component.ts","../src/engine/systems.ts","../src/components/legacy/Transform.ts","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../src/components/generated/pb/Animator.gen.ts","../src/components/generated/Animator.gen.ts","../src/components/generated/pb/AudioSource.gen.ts","../src/components/generated/AudioSource.gen.ts","../src/components/generated/pb/AvatarAttach.gen.ts","../src/components/generated/AvatarAttach.gen.ts","../src/components/generated/pb/common/Color3.gen.ts","../src/components/generated/pb/AvatarShape.gen.ts","../src/components/generated/AvatarShape.gen.ts","../src/components/generated/pb/Billboard.gen.ts","../src/components/generated/Billboard.gen.ts","../src/components/generated/pb/BoxShape.gen.ts","../src/components/generated/BoxShape.gen.ts","../src/components/generated/pb/CameraMode.gen.ts","../src/components/generated/CameraMode.gen.ts","../src/components/generated/pb/common/Vector3.gen.ts","../src/components/generated/pb/CameraModeArea.gen.ts","../src/components/generated/CameraModeArea.gen.ts","../src/components/generated/pb/CylinderShape.gen.ts","../src/components/generated/CylinderShape.gen.ts","../src/components/generated/pb/GLTFShape.gen.ts","../src/components/generated/GLTFShape.gen.ts","../src/components/generated/pb/NFTShape.gen.ts","../src/components/generated/NFTShape.gen.ts","../src/components/generated/pb/OnPointerDown.gen.ts","../src/components/generated/OnPointerDown.gen.ts","../src/components/generated/pb/OnPointerDownResult.gen.ts","../src/components/generated/OnPointerDownResult.gen.ts","../src/components/generated/pb/OnPointerUp.gen.ts","../src/components/generated/OnPointerUp.gen.ts","../src/components/generated/pb/OnPointerUpResult.gen.ts","../src/components/generated/OnPointerUpResult.gen.ts","../src/components/generated/pb/PlaneShape.gen.ts","../src/components/generated/PlaneShape.gen.ts","../src/components/generated/pb/PointerLock.gen.ts","../src/components/generated/PointerLock.gen.ts","../src/components/generated/pb/SphereShape.gen.ts","../src/components/generated/SphereShape.gen.ts","../src/components/generated/pb/TextShape.gen.ts","../src/components/generated/TextShape.gen.ts","../src/components/generated/index.gen.ts","../src/schemas/Array.ts","../src/schemas/basic/Boolean.ts","../src/schemas/basic/Enum.ts","../src/schemas/basic/Float.ts","../src/schemas/basic/Integer.ts","../src/schemas/basic/String.ts","../src/schemas/Map.ts","../src/schemas/Optional.ts","../src/schemas/index.ts","../src/components/generated/ids.gen.ts","../src/engine/index.ts","../src/systems/crdt/transports/rendererTransport.ts","../src/systems/crdt/transports/networkTransport.ts","../src/initialization.ts","../src/components/generated/global.gen.ts","../src/components/generated/global.namespace.gen.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Vector3 = void 0;\n/**\n * @public\n */\nvar Vector3;\n(function (Vector3) {\n    /**\n     * Creates a new Vector3 object from the given x, y, z (floats) coordinates.\n     * @param x - defines the first coordinates (on X axis)\n     * @param y - defines the second coordinates (on Y axis)\n     * @param z - defines the third coordinates (on Z axis)\n     */\n    function create(\n    /**\n     * Defines the first coordinates (on X axis)\n     */\n    x = 0, \n    /**\n     * Defines the second coordinates (on Y axis)\n     */\n    y = 0, \n    /**\n     * Defines the third coordinates (on Z axis)\n     */\n    z = 0) {\n        return { x, y, z };\n    }\n    Vector3.create = create;\n    /**\n     * Returns a new Vector3 as the result of the addition of the two given vectors.\n     * @param vector1 - the first vector\n     * @param vector2 - the second vector\n     * @returns the resulting vector\n     */\n    function add(vector1, vector2) {\n        return {\n            x: vector1.x + vector2.x,\n            y: vector1.y + vector2.y,\n            z: vector1.z + vector2.z\n        };\n    }\n    Vector3.add = add;\n    /**\n     * Returns a new Vector3 as the result of the substraction of the two given vectors.\n     * @returns the resulting vector\n     */\n    function subtract(minuend, subtrahend) {\n        return {\n            x: minuend.x - subtrahend.x,\n            y: minuend.y - subtrahend.y,\n            z: minuend.z - subtrahend.z\n        };\n    }\n    Vector3.subtract = subtract;\n    /**\n     * Returns a new Vector3 as the result of the substraction of the two given vectors.\n     * @returns the resulting vector\n     */\n    function subtractToRef(minuend, subtrahend, result) {\n        result.x = minuend.x - subtrahend.x;\n        result.y = minuend.y - subtrahend.y;\n        result.z = minuend.z - subtrahend.z;\n    }\n    Vector3.subtractToRef = subtractToRef;\n    /**\n     * Returns a new Vector3 with the other sign\n     * @returns the resulting vector\n     */\n    function opposite(value) {\n        return { x: -value.x, y: -value.y, z: -value.z };\n    }\n    Vector3.opposite = opposite;\n    /**\n     * Copy source into dest\n     *\n     */\n    function copy(source, dest) {\n        dest.x = source.x;\n        dest.y = source.y;\n        dest.z = source.z;\n    }\n    Vector3.copy = copy;\n    /**\n     * Returns a new Vector3 with the same value\n     * @returns the resulting vector\n     */\n    function clone(source) {\n        return Object.assign({}, source);\n    }\n    Vector3.clone = clone;\n    // Properties\n    /**\n     * Gets the length of the Vector3\n     * @returns the length of the Vecto3\n     */\n    function length(vector) {\n        return Math.sqrt(vector.x * vector.x + vector.y * vector.y + vector.z * vector.z);\n    }\n    Vector3.length = length;\n    /**\n     * Gets the squared length of the Vector3\n     * @returns squared length of the Vector3\n     */\n    function lengthSquared(vector) {\n        return vector.x * vector.x + vector.y * vector.y + vector.z * vector.z;\n    }\n    Vector3.lengthSquared = lengthSquared;\n    /**\n     * Returns a new Vector3 set with the current Vector3 coordinates multiplied by the float \"scale\"\n     * @param scale - defines the multiplier factor\n     * @returns a new Vector3\n     */\n    function scaleToRef(vector, scale, result) {\n        result.x = vector.x * scale;\n        result.y = vector.y * scale;\n        result.z = vector.z * scale;\n    }\n    Vector3.scaleToRef = scaleToRef;\n    /**\n     * Returns a new Vector3 set with the current Vector3 coordinates multiplied by the float \"scale\"\n     * @param scale - defines the multiplier factor\n     * @returns a new Vector3\n     */\n    function scale(vector, scale) {\n        return create(vector.x * scale, vector.y * scale, vector.z * scale);\n    }\n    Vector3.scale = scale;\n    /**\n     * Normalize the current Vector3 with the given input length.\n     * Please note that this is an in place operation.\n     * @param len - the length of the vector\n     * @returns the current updated Vector3\n     */\n    function normalizeFromLength(vector, len) {\n        const result = create(0, 0, 0);\n        normalizeFromLengthToRef(vector, len, result);\n        return result;\n    }\n    Vector3.normalizeFromLength = normalizeFromLength;\n    /**\n     * Normalize the current Vector3 with the given input length.\n     * Please note that this is an in place operation.\n     * @param len - the length of the vector\n     * @returns the current updated Vector3\n     */\n    function normalizeFromLengthToRef(vector, len, result) {\n        if (len === 0 || len === 1.0) {\n            copy(vector, result);\n            return;\n        }\n        scaleToRef(vector, 1.0 / len, result);\n    }\n    Vector3.normalizeFromLengthToRef = normalizeFromLengthToRef;\n    /**\n     * Normalize the current Vector3.\n     * Please note that this is an in place operation.\n     * @returns the current updated Vector3\n     */\n    function normalize(vector) {\n        return normalizeFromLength(vector, length(vector));\n    }\n    Vector3.normalize = normalize;\n    /**\n     * Normalize the current Vector3.\n     * Please note that this is an in place operation.\n     * @returns the current updated Vector3\n     */\n    function normalizeToRef(vector, result) {\n        normalizeFromLengthToRef(vector, length(vector), result);\n    }\n    Vector3.normalizeToRef = normalizeToRef;\n    /**\n     * Returns the dot product (float) between the vectors \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @returns the dot product\n     */\n    function dot(left, right) {\n        return left.x * right.x + left.y * right.y + left.z * right.z;\n    }\n    Vector3.dot = dot;\n    /**\n     * Rotates current Vector3 based on the given quaternion, but applies the rotation to target Vector3.\n     * @param q - defines the Quaternion\n     * @param result - defines the target Vector3\n     * @returns the current Vector3\n     */\n    function rotate(vector, q) {\n        const { x, y, z } = vector;\n        const { x: qx, y: qy, z: qz, w: qw } = q;\n        // calculate quat * vector\n        const ix = qw * x + qy * z - qz * y;\n        const iy = qw * y + qz * x - qx * z;\n        const iz = qw * z + qx * y - qy * x;\n        const iw = -qx * x - qy * y - qz * z;\n        // calculate result * inverse quat\n        return {\n            x: ix * qw + iw * -qx + iy * -qz - iz * -qy,\n            y: iy * qw + iw * -qy + iz * -qx - ix * -qz,\n            z: iz * qw + iw * -qz + ix * -qy - iy * -qx\n        };\n    }\n    Vector3.rotate = rotate;\n    /**\n     * Returns a new Vector3 located for \"amount\" (float) on the linear interpolation between the vectors \"start\" and \"end\"\n     * @param start - defines the start value\n     * @param end - defines the end value\n     * @param amount - max defines amount between both (between 0 and 1)\n     * @returns the new Vector3\n     */\n    function lerp(start, end, amount) {\n        const result = create(0, 0, 0);\n        lerpToRef(start, end, amount, result);\n        return result;\n    }\n    Vector3.lerp = lerp;\n    /**\n     * Sets the given vector \"result\" with the result of the linear interpolation from the vector \"start\" for \"amount\" to the vector \"end\"\n     * @param start - defines the start value\n     * @param end - defines the end value\n     * @param amount - max defines amount between both (between 0 and 1)\n     * @param result - defines the Vector3 where to store the result\n     */\n    function lerpToRef(start, end, amount, result) {\n        result.x = start.x + (end.x - start.x) * amount;\n        result.y = start.y + (end.y - start.y) * amount;\n        result.z = start.z + (end.z - start.z) * amount;\n    }\n    Vector3.lerpToRef = lerpToRef;\n    /**\n     * Returns a new Vector3 as the cross product of the vectors \"left\" and \"right\"\n     * The cross product is then orthogonal to both \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @returns the cross product\n     */\n    function cross(left, right) {\n        const result = Vector3.Zero();\n        Vector3.crossToRef(left, right, result);\n        return result;\n    }\n    Vector3.cross = cross;\n    /**\n     * Sets the given vector \"result\" with the cross product of \"left\" and \"right\"\n     * The cross product is then orthogonal to both \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @param result - defines the Vector3 where to store the result\n     */\n    function crossToRef(left, right, result) {\n        result.x = left.y * right.z - left.z * right.y;\n        result.y = left.z * right.x - left.x * right.z;\n        result.z = left.x * right.y - left.y * right.x;\n    }\n    Vector3.crossToRef = crossToRef;\n    /**\n     * Returns a new Vector3 set to (0.0, 0.0, 0.0)\n     * @returns a new empty Vector3\n     */\n    function Zero() {\n        return create(0.0, 0.0, 0.0);\n    }\n    Vector3.Zero = Zero;\n    /**\n     * Returns a new Vector3 set to (1.0, 1.0, 1.0)\n     * @returns a new unit Vector3\n     */\n    function One() {\n        return create(1.0, 1.0, 1.0);\n    }\n    Vector3.One = One;\n    /**\n     * Returns a new Vector3 set tolengthSquared (0.0, 1.0, 0.0)\n     * @returns a new up Vector3\n     */\n    function Up() {\n        return create(0.0, 1.0, 0.0);\n    }\n    Vector3.Up = Up;\n    /**\n     * Returns a new Vector3 set to (0.0, -1.0, 0.0)\n     * @returns a new down Vector3\n     */\n    function Down() {\n        return create(0.0, -1.0, 0.0);\n    }\n    Vector3.Down = Down;\n    /**\n     * Returns a new Vector3 set to (0.0, 0.0, 1.0)\n     * @returns a new forward Vector3\n     */\n    function Forward() {\n        return create(0.0, 0.0, 1.0);\n    }\n    Vector3.Forward = Forward;\n    /**\n     * Returns a new Vector3 set to (0.0, 0.0, -1.0)\n     * @returns a new forward Vector3\n     */\n    function Backward() {\n        return create(0.0, 0.0, -1.0);\n    }\n    Vector3.Backward = Backward;\n    /**\n     * Returns a new Vector3 set to (1.0, 0.0, 0.0)\n     * @returns a new right Vector3\n     */\n    function Right() {\n        return create(1.0, 0.0, 0.0);\n    }\n    Vector3.Right = Right;\n    /**\n     * Returns a new Vector3 set to (-1.0, 0.0, 0.0)\n     * @returns a new left Vector3\n     */\n    function Left() {\n        return create(-1.0, 0.0, 0.0);\n    }\n    Vector3.Left = Left;\n})(Vector3 = exports.Vector3 || (exports.Vector3 = {}));\n//# sourceMappingURL=Vector3.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Scalar = void 0;\n/**\n * Two pi constants convenient for computation.\n */\nconst TwoPi = Math.PI * 2;\n/**\n * Boolean : true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\n * @param a - number\n * @param b - number\n * @param epsilon - (default = 1.401298E-45)\n * @returns true if the absolute difference between a and b is lower than epsilon (default = 1.401298E-45)\n */\nfunction withinEpsilon(a, b, epsilon = 1.401298e-45) {\n    const num = a - b;\n    return -epsilon <= num && num <= epsilon;\n}\n/**\n * Returns a string : the upper case translation of the number i to hexadecimal.\n * @param i - number\n * @returns the upper case translation of the number i to hexadecimal.\n */\nfunction toHex(i) {\n    const str = i.toString(16);\n    if (i <= 15) {\n        return ('0' + str).toUpperCase();\n    }\n    return str.toUpperCase();\n}\n/**\n * Returns -1 if value is negative and +1 is value is positive.\n * @param _value - the value\n * @returns the value itself if it's equal to zero.\n */\nfunction sign(value) {\n    const _value = +value; // convert to a number\n    if (_value === 0 || isNaN(_value)) {\n        return _value;\n    }\n    return _value > 0 ? 1 : -1;\n}\n/**\n * Returns the value itself if it's between min and max.\n * Returns min if the value is lower than min.\n * Returns max if the value is greater than max.\n * @param value - the value to clmap\n * @param min - the min value to clamp to (default: 0)\n * @param max - the max value to clamp to (default: 1)\n * @returns the clamped value\n */\nfunction clamp(value, min = 0, max = 1) {\n    return Math.min(max, Math.max(min, value));\n}\n/**\n * the log2 of value.\n * @param value - the value to compute log2 of\n * @returns the log2 of value.\n */\nfunction log2(value) {\n    return Math.log(value) * Math.LOG2E;\n}\n/**\n * Loops the value, so that it is never larger than length and never smaller than 0.\n *\n * This is similar to the modulo operator but it works with floating point numbers.\n * For example, using 3.0 for t and 2.5 for length, the result would be 0.5.\n * With t = 5 and length = 2.5, the result would be 0.0.\n * Note, however, that the behaviour is not defined for negative numbers as it is for the modulo operator\n * @param value - the value\n * @param length - the length\n * @returns the looped value\n */\nfunction repeat(value, length) {\n    return value - Math.floor(value / length) * length;\n}\n/**\n * Normalize the value between 0.0 and 1.0 using min and max values\n * @param value - value to normalize\n * @param min - max to normalize between\n * @param max - min to normalize between\n * @returns the normalized value\n */\nfunction normalize(value, min, max) {\n    return (value - min) / (max - min);\n}\n/**\n * Denormalize the value from 0.0 and 1.0 using min and max values\n * @param normalized - value to denormalize\n * @param min - max to denormalize between\n * @param max - min to denormalize between\n * @returns the denormalized value\n */\nfunction denormalize(normalized, min, max) {\n    return normalized * (max - min) + min;\n}\n/**\n * Calculates the shortest difference between two given angles given in degrees.\n * @param current - current angle in degrees\n * @param target - target angle in degrees\n * @returns the delta\n */\nfunction deltaAngle(current, target) {\n    let num = repeat(target - current, 360.0);\n    if (num > 180.0) {\n        num -= 360.0;\n    }\n    return num;\n}\n/**\n * PingPongs the value t, so that it is never larger than length and never smaller than 0.\n * @param tx - value\n * @param length - length\n * @returns The returned value will move back and forth between 0 and length\n */\nfunction pingPong(tx, length) {\n    const t = repeat(tx, length * 2.0);\n    return length - Math.abs(t - length);\n}\n/**\n * Interpolates between min and max with smoothing at the limits.\n *\n * This function interpolates between min and max in a similar way to Lerp. However, the interpolation will gradually speed up\n * from the start and slow down toward the end. This is useful for creating natural-looking animation, fading and other transitions.\n * @param from - from\n * @param to - to\n * @param tx - value\n * @returns the smooth stepped value\n */\nfunction smoothStep(from, to, tx) {\n    let t = clamp(tx);\n    t = -2.0 * t * t * t + 3.0 * t * t;\n    return to * t + from * (1.0 - t);\n}\n/**\n * Moves a value current towards target.\n *\n * This is essentially the same as Mathf.Lerp but instead the function will ensure that the speed never exceeds maxDelta.\n * Negative values of maxDelta pushes the value away from target.\n * @param current - current value\n * @param target - target value\n * @param maxDelta - max distance to move\n * @returns resulting value\n */\nfunction moveTowards(current, target, maxDelta) {\n    let result = 0;\n    if (Math.abs(target - current) <= maxDelta) {\n        result = target;\n    }\n    else {\n        result = current + sign(target - current) * maxDelta;\n    }\n    return result;\n}\n/**\n * Same as MoveTowards but makes sure the values interpolate correctly when they wrap around 360 degrees.\n *\n * Variables current and target are assumed to be in degrees. For optimization reasons, negative values of maxDelta\n *  are not supported and may cause oscillation. To push current away from a target angle, add 180 to that angle instead.\n * @param current - current value\n * @param target - target value\n * @param maxDelta - max distance to move\n * @returns resulting angle\n */\nfunction moveTowardsAngle(current, target, maxDelta) {\n    const num = deltaAngle(current, target);\n    let result = 0;\n    if (-maxDelta < num && num < maxDelta) {\n        result = target;\n    }\n    else {\n        result = moveTowards(current, current + num, maxDelta);\n    }\n    return result;\n}\n/**\n * Creates a new scalar with values linearly interpolated of \"amount\" between the start scalar and the end scalar\n * @param start - start value\n * @param end - target value\n * @param amount - amount to lerp between\n * @returns the lerped value\n */\nfunction lerp(start, end, amount) {\n    return start + (end - start) * amount;\n}\n/**\n * Same as Lerp but makes sure the values interpolate correctly when they wrap around 360 degrees.\n * The parameter t is clamped to the range [0, 1]. Variables a and b are assumed to be in degrees.\n * @param start - start value\n * @param end - target value\n * @param amount - amount to lerp between\n * @returns the lerped value\n */\nfunction lerpAngle(start, end, amount) {\n    let num = repeat(end - start, 360.0);\n    if (num > 180.0) {\n        num -= 360.0;\n    }\n    return start + num * clamp(amount);\n}\n/**\n * Calculates the linear parameter t that produces the interpolant value within the range [a, b].\n * @param a - start value\n * @param b - target value\n * @param value - value between a and b\n * @returns the inverseLerp value\n */\nfunction inverseLerp(a, b, value) {\n    let result = 0;\n    if (a !== b) {\n        result = clamp((value - a) / (b - a));\n    }\n    else {\n        result = 0.0;\n    }\n    return result;\n}\n/**\n * Returns a new scalar located for \"amount\" (float) on the Hermite spline defined by the scalars \"value1\", \"value3\", \"tangent1\", \"tangent2\".\n * {@link http://mathworld.wolfram.com/HermitePolynomial.html}\n * @param value1 - spline value\n * @param tangent1 - spline value\n * @param value2 - spline value\n * @param tangent2 - spline value\n * @param amount - input value\n * @returns hermite result\n */\nfunction hermite(value1, tangent1, value2, tangent2, amount) {\n    const squared = amount * amount;\n    const cubed = amount * squared;\n    const part1 = 2.0 * cubed - 3.0 * squared + 1.0;\n    const part2 = -2.0 * cubed + 3.0 * squared;\n    const part3 = cubed - 2.0 * squared + amount;\n    const part4 = cubed - squared;\n    return value1 * part1 + value2 * part2 + tangent1 * part3 + tangent2 * part4;\n}\n/**\n * Returns a random float number between and min and max values\n * @param min - min value of random\n * @param max - max value of random\n * @returns random value\n */\nfunction randomRange(min, max) {\n    if (min === max) {\n        return min;\n    }\n    return Math.random() * (max - min) + min;\n}\n/**\n * This function returns percentage of a number in a given range.\n *\n * RangeToPercent(40,20,60) will return 0.5 (50%)\n * RangeToPercent(34,0,100) will return 0.34 (34%)\n * @param num - to convert to percentage\n * @param min - min range\n * @param max - max range\n * @returns the percentage\n */\nfunction rangeToPercent(num, min, max) {\n    return (num - min) / (max - min);\n}\n/**\n * This function returns number that corresponds to the percentage in a given range.\n *\n * PercentToRange(0.34,0,100) will return 34.\n * @param percent - to convert to number\n * @param min - min range\n * @param max - max range\n * @returns the number\n */\nfunction percentToRange(percent, min, max) {\n    return (max - min) * percent + min;\n}\n/**\n * Returns the angle converted to equivalent value between -Math.PI and Math.PI radians.\n * @param angle - The angle to normalize in radian.\n * @returns The converted angle.\n */\nfunction normalizeRadians(angle) {\n    // More precise but slower version kept for reference.\n    // tslint:disable:no-commented-out-code\n    /*\n      // angle = angle % Tools.TwoPi;\n      // angle = (angle + Tools.TwoPi) % Tools.TwoPi;\n  \n      //if (angle > Math.PI) {\n      //\tangle -= Tools.TwoPi;\n      //}\n        */\n    return angle - TwoPi * Math.floor((angle + Math.PI) / TwoPi);\n}\n/**\n * Scalar computation library\n * @public\n */\nexports.Scalar = {\n    withinEpsilon,\n    toHex,\n    sign,\n    clamp,\n    log2,\n    repeat,\n    normalize,\n    denormalize,\n    deltaAngle,\n    pingPong,\n    smoothStep,\n    moveTowards,\n    moveTowardsAngle,\n    lerp,\n    lerpAngle,\n    inverseLerp,\n    hermite,\n    randomRange,\n    rangeToPercent,\n    percentToRange,\n    normalizeRadians,\n    TwoPi\n};\n//# sourceMappingURL=Scalar.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RAD2DEG = exports.DEG2RAD = exports.Epsilon = exports.ToLinearSpace = exports.ToGammaSpace = exports.Space = exports.Orientation = void 0;\n/**\n * Defines potential orientation for back face culling\n * @public\n */\nvar Orientation;\n(function (Orientation) {\n    /**\n     * Clockwise\n     */\n    Orientation[Orientation[\"CW\"] = 0] = \"CW\";\n    /** Counter clockwise */\n    Orientation[Orientation[\"CCW\"] = 1] = \"CCW\";\n})(Orientation = exports.Orientation || (exports.Orientation = {}));\n/**\n * Defines supported spaces\n * @public\n */\nvar Space;\n(function (Space) {\n    /** Local (object) space */\n    Space[Space[\"LOCAL\"] = 0] = \"LOCAL\";\n    /** World space */\n    Space[Space[\"WORLD\"] = 1] = \"WORLD\";\n    /** Bone space */\n    Space[Space[\"BONE\"] = 2] = \"BONE\";\n})(Space = exports.Space || (exports.Space = {}));\n/**\n * Constant used to convert a value to gamma space\n * @public\n */\nexports.ToGammaSpace = 1 / 2.2;\n/**\n * Constant used to convert a value to linear space\n * @public\n */\nexports.ToLinearSpace = 2.2;\n/**\n * Constant used to define the minimal number value in Babylon.js\n * @public\n */\nexports.Epsilon = 0.000001;\n/**\n * Constant used to convert from Euler degrees to radians\n * @public\n */\nexports.DEG2RAD = Math.PI / 180;\n/**\n * Constant used to convert from radians to Euler degrees\n * @public\n */\nexports.RAD2DEG = 360 / (Math.PI * 2);\n//# sourceMappingURL=types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quaternion = void 0;\nconst Vector3_1 = require(\"./Vector3\");\nconst Scalar_1 = require(\"./Scalar\");\nconst types_1 = require(\"./types\");\n/**\n * @public\n */\nvar Quaternion;\n(function (Quaternion) {\n    /**\n     * Creates a new Quaternion from the given floats\n     * @param x - defines the first component (0 by default)\n     * @param y - defines the second component (0 by default)\n     * @param z - defines the third component (0 by default)\n     * @param w - defines the fourth component (1.0 by default)\n     */\n    function create(\n    /** defines the first component (0 by default) */\n    x = 0.0, \n    /** defines the second component (0 by default) */\n    y = 0.0, \n    /** defines the third component (0 by default) */\n    z = 0.0, \n    /** defines the fourth component (1.0 by default) */\n    w = 1.0) {\n        return { x, y, z, w };\n    }\n    Quaternion.create = create;\n    /**\n     * Returns a new Quaternion as the result of the addition of the two given quaternions.\n     * @param q1 - the first quaternion\n     * @param q2 - the second quaternion\n     * @returns the resulting quaternion\n     */\n    function add(q1, q2) {\n        return { x: q1.x + q2.x, y: q1.y + q2.y, z: q1.z + q2.z, w: q1.w + q2.w };\n    }\n    Quaternion.add = add;\n    /**\n     * Creates a new rotation from the given Euler float angles (y, x, z) and stores it in the target quaternion\n     * @param yaw - defines the rotation around Y axis\n     * @param pitch - defines the rotation around X axis\n     * @param roll - defines the rotation around Z axis\n     * @param result - defines the target quaternion\n     */\n    function rotationYawPitchRoll(yaw, pitch, roll) {\n        // Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\n        const halfPitch = pitch * 0.5;\n        const halfYaw = yaw * 0.5;\n        const halfRoll = roll * 0.5;\n        const c1 = Math.cos(halfPitch);\n        const c2 = Math.cos(halfYaw);\n        const c3 = Math.cos(halfRoll);\n        const s1 = Math.sin(halfPitch);\n        const s2 = Math.sin(halfYaw);\n        const s3 = Math.sin(halfRoll);\n        return create(c2 * s1 * c3 + s2 * c1 * s3, s2 * c1 * c3 - c2 * s1 * s3, c2 * c1 * s3 - s2 * s1 * c3, c2 * c1 * c3 + s2 * s1 * s3);\n    }\n    Quaternion.rotationYawPitchRoll = rotationYawPitchRoll;\n    /**\n     * Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis.\n     * @param x - the rotation on the x axis in euler degrees\n     * @param y - the rotation on the y axis in euler degrees\n     * @param z - the rotation on the z axis in euler degrees\n     */\n    function euler(x, y, z) {\n        return rotationYawPitchRoll(y * types_1.DEG2RAD, x * types_1.DEG2RAD, z * types_1.DEG2RAD);\n    }\n    Quaternion.euler = euler;\n    /**\n     * Gets length of current quaternion\n     * @returns the quaternion length (float)\n     */\n    function length(q) {\n        return Math.sqrt(lengthSquared(q));\n    }\n    Quaternion.length = length;\n    /**\n     * Gets length of current quaternion\n     * @returns the quaternion length (float)\n     */\n    function lengthSquared(q) {\n        return q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w;\n    }\n    Quaternion.lengthSquared = lengthSquared;\n    /**\n     * Returns the dot product (float) between the quaternions \"left\" and \"right\"\n     * @param left - defines the left operand\n     * @param right - defines the right operand\n     * @returns the dot product\n     */\n    function dot(left, right) {\n        return (left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w);\n    }\n    Quaternion.dot = dot;\n    /**\n     * Returns the angle in degrees between two rotations a and b.\n     * @param quat1 - defines the first quaternion\n     * @param quat2 - defines the second quaternion\n     */\n    function angle(quat1, quat2) {\n        const dotVal = dot(quat1, quat2);\n        return Math.acos(Math.min(Math.abs(dotVal), 1)) * 2 * types_1.RAD2DEG;\n    }\n    Quaternion.angle = angle;\n    /**\n     * The from quaternion is rotated towards to by an angular step of maxDegreesDelta.\n     * @param from - defines the first quaternion\n     * @param to - defines the second quaternion\n     * @param maxDegreesDelta - the interval step\n     */\n    function rotateTowards(from, to, maxDegreesDelta) {\n        const num = angle(from, to);\n        if (num === 0) {\n            return to;\n        }\n        const t = Math.min(1, maxDegreesDelta / num);\n        return slerp(from, to, t);\n    }\n    Quaternion.rotateTowards = rotateTowards;\n    /**\n     * Creates a rotation with the specified forward and upwards directions.\n     * @param forward - the direction to look in\n     * @param up - the vector that defines in which direction up is\n     */\n    function lookRotation(forward, up = { x: 0.0, y: 1.0, z: 0.0 }) {\n        const forwardNew = Vector3_1.Vector3.normalize(forward);\n        const right = Vector3_1.Vector3.normalize(Vector3_1.Vector3.cross(up, forwardNew));\n        const upNew = Vector3_1.Vector3.cross(forwardNew, right);\n        const m00 = right.x;\n        const m01 = right.y;\n        const m02 = right.z;\n        const m10 = upNew.x;\n        const m11 = upNew.y;\n        const m12 = upNew.z;\n        const m20 = forwardNew.x;\n        const m21 = forwardNew.y;\n        const m22 = forwardNew.z;\n        const num8 = m00 + m11 + m22;\n        const quaternion = create();\n        if (num8 > 0) {\n            let num = Math.sqrt(num8 + 1);\n            quaternion.w = num * 0.5;\n            num = 0.5 / num;\n            quaternion.x = (m12 - m21) * num;\n            quaternion.y = (m20 - m02) * num;\n            quaternion.z = (m01 - m10) * num;\n            return quaternion;\n        }\n        if (m00 >= m11 && m00 >= m22) {\n            const num7 = Math.sqrt(1 + m00 - m11 - m22);\n            const num4 = 0.5 / num7;\n            quaternion.x = 0.5 * num7;\n            quaternion.y = (m01 + m10) * num4;\n            quaternion.z = (m02 + m20) * num4;\n            quaternion.w = (m12 - m21) * num4;\n            return quaternion;\n        }\n        if (m11 > m22) {\n            const num6 = Math.sqrt(1 + m11 - m00 - m22);\n            const num3 = 0.5 / num6;\n            quaternion.x = (m10 + m01) * num3;\n            quaternion.y = 0.5 * num6;\n            quaternion.z = (m21 + m12) * num3;\n            quaternion.w = (m20 - m02) * num3;\n            return quaternion;\n        }\n        const num5 = Math.sqrt(1 + m22 - m00 - m11);\n        const num2 = 0.5 / num5;\n        quaternion.x = (m20 + m02) * num2;\n        quaternion.y = (m21 + m12) * num2;\n        quaternion.z = 0.5 * num5;\n        quaternion.w = (m01 - m10) * num2;\n        return quaternion;\n    }\n    Quaternion.lookRotation = lookRotation;\n    /**\n     * Normalize in place the current quaternion\n     * @returns the current updated quaternion\n     */\n    function normalize(q) {\n        const qLength = 1.0 / length(q);\n        return create(q.x * qLength, q.y * qLength, q.z * qLength, q.w * qLength);\n    }\n    Quaternion.normalize = normalize;\n    /**\n     * Creates a rotation which rotates from fromDirection to toDirection.\n     * @param from - defines the first direction Vector\n     * @param to - defines the target direction Vector\n     */\n    function fromToRotation(from, to, up = Vector3_1.Vector3.Up()) {\n        // Unity-based calculations implemented from https://forum.unity.com/threads/quaternion-lookrotation-around-an-axis.608470/#post-4069888\n        const v0 = Vector3_1.Vector3.normalize(from);\n        const v1 = Vector3_1.Vector3.normalize(to);\n        const a = Vector3_1.Vector3.cross(v0, v1);\n        const w = Math.sqrt(Vector3_1.Vector3.lengthSquared(v0) * Vector3_1.Vector3.lengthSquared(v1)) +\n            Vector3_1.Vector3.dot(v0, v1);\n        if (Vector3_1.Vector3.lengthSquared(a) < 0.0001) {\n            // the vectors are parallel, check w to find direction\n            // if w is 0 then values are opposite, and we sould rotate 180 degrees around the supplied axis\n            // otherwise the vectors in the same direction and no rotation should occur\n            return Math.abs(w) < 0.0001\n                ? normalize(create(up.x, up.y, up.z, 0))\n                : Identity();\n        }\n        else {\n            return normalize(create(a.x, a.y, a.z, w));\n        }\n    }\n    Quaternion.fromToRotation = fromToRotation;\n    /**\n     * Creates an identity quaternion\n     * @returns - the identity quaternion\n     */\n    function Identity() {\n        return create(0.0, 0.0, 0.0, 1.0);\n    }\n    Quaternion.Identity = Identity;\n    /**\n     * Gets or sets the euler angle representation of the rotation.\n     * Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\n     */\n    function eulerAngles(q) {\n        const out = Vector3_1.Vector3.create();\n        // if the input quaternion is normalized, this is exactly one. Otherwise, this acts as a correction factor for the quaternion's not-normalizedness\n        const unit = q.x * q.x + q.y * q.y + q.z * q.z + q.w * q.w;\n        // q will have a magnitude of 0.5 or greater if and only if q is a singularity case\n        const test = q.x * q.w - q.y * q.z;\n        if (test > 0.4995 * unit) {\n            // singularity at north pole\n            out.x = Math.PI / 2;\n            out.y = 2 * Math.atan2(q.y, q.x);\n            out.z = 0;\n        }\n        else if (test < -0.4995 * unit) {\n            // singularity at south pole\n            out.x = -Math.PI / 2;\n            out.y = -2 * Math.atan2(q.y, q.x);\n            out.z = 0;\n        }\n        else {\n            // no singularity - q is the majority of cases\n            out.x = Math.asin(2 * (q.w * q.x - q.y * q.z));\n            out.y = Math.atan2(2 * q.w * q.y + 2 * q.z * q.x, 1 - 2 * (q.x * q.x + q.y * q.y));\n            out.z = Math.atan2(2 * q.w * q.z + 2 * q.x * q.y, 1 - 2 * (q.z * q.z + q.x * q.x));\n        }\n        out.x *= types_1.RAD2DEG;\n        out.y *= types_1.RAD2DEG;\n        out.z *= types_1.RAD2DEG;\n        // ensure the degree values are between 0 and 360\n        out.x = Scalar_1.Scalar.repeat(out.x, 360);\n        out.y = Scalar_1.Scalar.repeat(out.y, 360);\n        out.z = Scalar_1.Scalar.repeat(out.z, 360);\n        return out;\n    }\n    Quaternion.eulerAngles = eulerAngles;\n    /**\n     * Creates a new rotation from the given Euler float angles (y, x, z) and stores it in the target quaternion\n     * @param yaw - defines the rotation around Y axis\n     * @param pitch - defines the rotation around X axis\n     * @param roll - defines the rotation around Z axis\n     * @param result - defines the target quaternion\n     */\n    function rotationYawPitchRollToRef(yaw, pitch, roll, result) {\n        // Implemented unity-based calculations from: https://stackoverflow.com/a/56055813\n        const halfPitch = pitch * 0.5;\n        const halfYaw = yaw * 0.5;\n        const halfRoll = roll * 0.5;\n        const c1 = Math.cos(halfPitch);\n        const c2 = Math.cos(halfYaw);\n        const c3 = Math.cos(halfRoll);\n        const s1 = Math.sin(halfPitch);\n        const s2 = Math.sin(halfYaw);\n        const s3 = Math.sin(halfRoll);\n        result.x = c2 * s1 * c3 + s2 * c1 * s3;\n        result.y = s2 * c1 * c3 - c2 * s1 * s3;\n        result.z = c2 * c1 * s3 - s2 * s1 * c3;\n        result.w = c2 * c1 * c3 + s2 * s1 * s3;\n    }\n    Quaternion.rotationYawPitchRollToRef = rotationYawPitchRollToRef;\n    /**\n     * Updates the given quaternion with the given rotation matrix values\n     * @param matrix - defines the source matrix\n     * @param result - defines the target quaternion\n     */\n    function fromRotationMatrixToRef(matrix, result) {\n        const data = matrix._m;\n        // tslint:disable:one-variable-per-declaration\n        const m11 = data[0], m12 = data[4], m13 = data[8];\n        const m21 = data[1], m22 = data[5], m23 = data[9];\n        const m31 = data[2], m32 = data[6], m33 = data[10];\n        // tslint:enable:one-variable-per-declaration\n        const trace = m11 + m22 + m33;\n        let s;\n        if (trace > 0) {\n            s = 0.5 / Math.sqrt(trace + 1.0);\n            result.w = 0.25 / s;\n            result.x = (m32 - m23) * s;\n            result.y = (m13 - m31) * s;\n            result.z = (m21 - m12) * s;\n        }\n        else if (m11 > m22 && m11 > m33) {\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n            result.w = (m32 - m23) / s;\n            result.x = 0.25 * s;\n            result.y = (m12 + m21) / s;\n            result.z = (m13 + m31) / s;\n        }\n        else if (m22 > m33) {\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n            result.w = (m13 - m31) / s;\n            result.x = (m12 + m21) / s;\n            result.y = 0.25 * s;\n            result.z = (m23 + m32) / s;\n        }\n        else {\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n            result.w = (m21 - m12) / s;\n            result.x = (m13 + m31) / s;\n            result.y = (m23 + m32) / s;\n            result.z = 0.25 * s;\n        }\n    }\n    Quaternion.fromRotationMatrixToRef = fromRotationMatrixToRef;\n    /**\n     * Interpolates between two quaternions\n     * @param left - defines first quaternion\n     * @param right - defines second quaternion\n     * @param amount - defines the gradient to use\n     * @returns the new interpolated quaternion\n     */\n    function slerp(left, right, amount) {\n        const result = Quaternion.Identity();\n        Quaternion.slerpToRef(left, right, amount, result);\n        return result;\n    }\n    Quaternion.slerp = slerp;\n    /**\n     * Interpolates between two quaternions and stores it into a target quaternion\n     * @param left - defines first quaternion\n     * @param right - defines second quaternion\n     * @param amount - defines the gradient to use\n     * @param result - defines the target quaternion\n     */\n    function slerpToRef(left, right, amount, result) {\n        let num2;\n        let num3;\n        let num4 = left.x * right.x + left.y * right.y + left.z * right.z + left.w * right.w;\n        let flag = false;\n        if (num4 < 0) {\n            flag = true;\n            num4 = -num4;\n        }\n        if (num4 > 0.999999) {\n            num3 = 1 - amount;\n            num2 = flag ? -amount : amount;\n        }\n        else {\n            const num5 = Math.acos(num4);\n            const num6 = 1.0 / Math.sin(num5);\n            num3 = Math.sin((1.0 - amount) * num5) * num6;\n            num2 = flag\n                ? -Math.sin(amount * num5) * num6\n                : Math.sin(amount * num5) * num6;\n        }\n        result.x = num3 * left.x + num2 * right.x;\n        result.y = num3 * left.y + num2 * right.y;\n        result.z = num3 * left.z + num2 * right.z;\n        result.w = num3 * left.w + num2 * right.w;\n    }\n    Quaternion.slerpToRef = slerpToRef;\n    /**\n     * Multiplies two quaternions\n     * @param self - defines the first operand\n     * @param q1 - defines the second operand\n     * @returns a new quaternion set as the multiplication result of the self one with the given one \"q1\"\n     */\n    function multiply(self, q1) {\n        const result = create(0, 0, 0, 1.0);\n        multiplyToRef(self, q1, result);\n        return result;\n    }\n    Quaternion.multiply = multiply;\n    /**\n     * Sets the given \"result\" as the the multiplication result of the self one with the given one \"q1\"\n     * @param self - defines the first operand\n     * @param q1 - defines the second operand\n     * @param result - defines the target quaternion\n     * @returns the current quaternion\n     */\n    function multiplyToRef(self, q1, result) {\n        result.x = self.x * q1.w + self.y * q1.z - self.z * q1.y + self.w * q1.x;\n        result.y = -self.x * q1.z + self.y * q1.w + self.z * q1.x + self.w * q1.y;\n        result.z = self.x * q1.y - self.y * q1.x + self.z * q1.w + self.w * q1.z;\n        result.w = -self.x * q1.x - self.y * q1.y - self.z * q1.z + self.w * q1.w;\n    }\n    Quaternion.multiplyToRef = multiplyToRef;\n    function angleAxis(degress, axis) {\n        if (Vector3_1.Vector3.lengthSquared(axis) === 0) {\n            return Quaternion.Identity();\n        }\n        const result = Identity();\n        let radians = degress * types_1.DEG2RAD;\n        radians *= 0.5;\n        const a2 = Vector3_1.Vector3.normalize(axis);\n        Vector3_1.Vector3.scaleToRef(a2, Math.sin(radians), a2);\n        result.x = a2.x;\n        result.y = a2.y;\n        result.z = a2.z;\n        result.w = Math.cos(radians);\n        return normalize(result);\n    }\n    Quaternion.angleAxis = angleAxis;\n    /**\n     * Returns a zero filled quaternion\n     */\n    function Zero() {\n        return create(0.0, 0.0, 0.0, 0.0);\n    }\n    Quaternion.Zero = Zero;\n})(Quaternion = exports.Quaternion || (exports.Quaternion = {}));\n//# sourceMappingURL=Quaternion.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./Quaternion\"), exports);\n__exportStar(require(\"./Vector3\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crdtProtocol = exports.sameData = void 0;\n__exportStar(require(\"./types\"), exports);\n/**\n * Compare raw data.\n * @internal\n */\nfunction sameData(a, b) {\n    // At reference level\n    if (a === b)\n        return true;\n    if (a instanceof Uint8Array && b instanceof Uint8Array) {\n        if (a.byteLength !== b.byteLength) {\n            return false;\n        }\n        for (let i = 0; i < a.byteLength; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (globalThis.Buffer) {\n        if (a instanceof Buffer && b instanceof Buffer) {\n            // Deep level\n            return a.equals(b);\n        }\n    }\n    return false;\n}\nexports.sameData = sameData;\n/**\n * @public\n * CRDT protocol.\n * Stores the latest state, and decides whenever we have\n * to process and store the new data in case its an update, or\n * to discard and send our local value cause remote it's outdated.\n */\nfunction crdtProtocol() {\n    /**\n     * Local state where we store the latest lamport timestamp\n     * and the raw data value\n     * @internal\n     */\n    const state = {};\n    /**\n     * We should call this fn in order to update the state\n     * @internal\n     */\n    function updateState(key, data, remoteTimestamp) {\n        const timestamp = Math.max(remoteTimestamp, state[key]?.timestamp || 0);\n        return (state[key] = { timestamp, data });\n    }\n    /**\n     * Create an event for the specified key and store the new data and\n     * lamport timestmap incremented by one in the state.\n     * @public\n     */\n    function createEvent(key, data) {\n        // Increment the timestamp\n        const timestamp = (state[key]?.timestamp || 0) + 1;\n        updateState(key, data, timestamp);\n        return { key, data, timestamp };\n    }\n    /**\n     * Process the received message only if the lamport number recieved is higher\n     * than the stored one. If its lower, we spread it to the network to correct the peer.\n     * If they are equal, the bigger raw data wins.\n  \n     * Returns the recieved data if the lamport number was bigger than ours.\n     * If it was an outdated message, then we return void\n     * @public\n     */\n    function processMessage(message) {\n        const { key, data, timestamp } = message;\n        const current = state[key];\n        // The received message is > than our current value, update our state.\n        if (!current || current.timestamp < timestamp) {\n            updateState(key, data, timestamp);\n            return message;\n        }\n        // Outdated Message. Resend our state message through the wire.\n        if (current.timestamp > timestamp) {\n            return {\n                key,\n                data: current.data,\n                timestamp: current.timestamp\n            };\n        }\n        // Same data, same timestamp. Weirdo echo message.\n        if (sameData(current.data, data)) {\n            return message;\n        }\n        // Race condition, same timestamp diff data.\n        function compareData(current, data) {\n            return current > data;\n        }\n        if (compareData(current.data, data)) {\n            return {\n                key,\n                data: current.data,\n                timestamp: current.timestamp\n            };\n        }\n        updateState(key, data, timestamp).data;\n        return message;\n    }\n    /**\n     * Returns the current state\n     * @public\n     */\n    function getState() {\n        return { ...state };\n    }\n    return {\n        createEvent,\n        processMessage,\n        getState\n    };\n}\nexports.crdtProtocol = crdtProtocol;\n//# sourceMappingURL=index.js.map","/**\n * Take the max between currentSize and intendedSize and then plus 1024. Then,\n *  find the next nearer multiple of 1024.\n * @param currentSize - number\n * @param intendedSize - number\n * @returns the calculated number\n */\nfunction getNextSize(currentSize: number, intendedSize: number) {\n  const minNewSize = Math.max(currentSize, intendedSize) + 1024\n  return Math.ceil(minNewSize / 1024) * 1024\n}\n\n/**\n * @param writing - writing option, see object specs.\n * @param reading - reading option, see object specs.\n * @param initialCapacity - Initial capacity of buffer to allocate, ignored if you use writing or reading options\n */\nexport interface CreateByteBufferOptions {\n  /**\n   * @param buffer - a buffer already allocated to read from there.\n   * @param currentOffset - set the cursor where begins to read. Default 0\n   * @param length - delimite where the valid data ends. Default: buffer.length\n   */\n  reading?: {\n    buffer: Uint8Array\n    length?: number\n    currentOffset: number\n  }\n\n  /**\n   * @param buffer - a buffer already allocated to write there.\n   * @param currentOffset - set the cursor to not start writing from the begin of it. Default 0\n   */\n  writing?: {\n    buffer: Uint8Array\n    currentOffset?: number\n  }\n\n  initialCapacity?: number\n}\n\nconst defaultInitialCapacity = 10240\n\n/**\n * ByteBuffer is a wrapper of DataView which also adds a read and write offset.\n *  Also in a write operation it resizes the buffer is being used if it needs.\n *\n * - Use read and write function to generate or consume data.\n * - Use set and get only if you are sure that you're doing.\n */\nexport function createByteBuffer(options: CreateByteBufferOptions = {}) {\n  const initialROffset: number = options.reading?.currentOffset || 0\n  let initialBuffer: Uint8Array | null = null\n  let initialWOffset: number = 0\n\n  if (options.writing) {\n    initialBuffer = options.writing.buffer\n    if (options.writing.currentOffset) {\n      initialWOffset = options.writing.currentOffset\n    }\n  } else if (options.reading) {\n    initialBuffer = options.reading.buffer\n    initialWOffset = options.reading.length || options.reading.buffer.length\n  } else {\n    initialBuffer = new Uint8Array(\n      options.initialCapacity || defaultInitialCapacity\n    )\n  }\n\n  let buffer: Uint8Array = initialBuffer!\n  let view: DataView = new DataView(buffer.buffer, buffer.byteOffset)\n  let woffset: number = initialWOffset\n  let roffset: number = initialROffset\n\n  /**\n   * Increement the write offset and resize the buffer if it needs.\n   */\n  const woAdd = (amount: number) => {\n    if (woffset + amount > buffer.byteLength) {\n      const newsize = getNextSize(buffer.byteLength, woffset + amount)\n      const newBuffer = new Uint8Array(newsize)\n      newBuffer.set(buffer)\n      buffer = newBuffer\n      view = new DataView(buffer.buffer)\n    }\n\n    woffset += amount\n    return woffset - amount\n  }\n\n  /**\n   * Increment the read offset and throw an error if it's trying to read\n   *  outside the bounds.\n   */\n  const roAdd = (amount: number) => {\n    if (roffset + amount > woffset) {\n      throw new Error('Outside of the bounds of writen data.')\n    }\n\n    roffset += amount\n    return roffset - amount\n  }\n\n  return {\n    /**\n     * @returns The entire current Uint8Array.\n     *\n     * WARNING: if the buffer grows, the view had changed itself,\n     *  and the reference will be a invalid one.\n     */\n    buffer(): Uint8Array {\n      return buffer\n    },\n    /**\n     * @returns The capacity of the current buffer\n     */\n    bufferLength(): number {\n      return buffer.length\n    },\n    /**\n     * Resets byteBuffer to avoid creating a new one\n     */\n    resetBuffer(): void {\n      roffset = 0\n      woffset = 0\n    },\n    /**\n     * @returns The current read offset\n     */\n    currentReadOffset(): number {\n      return roffset\n    },\n    /**\n     * @returns The current write offset\n     */\n    currentWriteOffset(): number {\n      return woffset\n    },\n    /**\n     * Reading purpose\n     * Returns the previuos offsset size before incrementing\n     */\n    incrementReadOffset(amount: number): number {\n      return roAdd(amount)\n    },\n    /**\n     * @returns How many bytes are available to read.\n     */\n    remainingBytes(): number {\n      return woffset - roffset\n    },\n    readFloat32(): number {\n      return view.getFloat32(roAdd(4))\n    },\n    readFloat64(): number {\n      return view.getFloat64(roAdd(8))\n    },\n    readInt8(): number {\n      return view.getInt8(roAdd(1))\n    },\n    readInt16(): number {\n      return view.getInt16(roAdd(2))\n    },\n    readInt32(): number {\n      return view.getInt32(roAdd(4))\n    },\n    readInt64(): bigint {\n      return view.getBigInt64(roAdd(8))\n    },\n    readUint8(): number {\n      return view.getUint8(roAdd(1))\n    },\n    readUint16(): number {\n      return view.getUint16(roAdd(2))\n    },\n    readUint32(): number {\n      return view.getUint32(roAdd(4))\n    },\n    readUint64(): bigint {\n      return view.getBigUint64(roAdd(8))\n    },\n    readBuffer() {\n      const length = view.getUint32(roAdd(4))\n      return buffer.subarray(roAdd(length), roAdd(0))\n    },\n    /**\n     * Writing purpose\n     */\n    /**\n     * Increment offset\n     * @param amount - how many bytes\n     * @returns The offset when this reserving starts.\n     */\n    incrementWriteOffset(amount: number): number {\n      return woAdd(amount)\n    },\n    /**\n     * @returns The total number of bytes writen in the buffer.\n     */\n    size(): number {\n      return woffset\n    },\n    /**\n     * Take care using this function, if you modify the data after, the\n     * returned subarray will change too. If you'll modify the content of the\n     * bytebuffer, maybe you want to use toCopiedBinary()\n     *\n     * @returns The subarray from 0 to offset as reference.\n     */\n    toBinary() {\n      return buffer.subarray(0, woffset)\n    },\n\n    /**\n     * Safe copied buffer of the current data of ByteBuffer\n     *\n     * @returns The subarray from 0 to offset.\n     */\n    toCopiedBinary() {\n      return new Uint8Array(this.toBinary())\n    },\n\n    writeBuffer(value: Uint8Array, writeLength: boolean = true) {\n      if (writeLength) {\n        this.writeUint32(value.byteLength)\n      }\n\n      const o = woAdd(value.byteLength)\n      buffer.set(value, o)\n    },\n    writeFloat32(value: number): void {\n      const o = woAdd(4)\n      view.setFloat32(o, value)\n    },\n    writeFloat64(value: number): void {\n      const o = woAdd(8)\n      view.setFloat64(o, value)\n    },\n    writeInt8(value: number): void {\n      const o = woAdd(1)\n      view.setInt8(o, value)\n    },\n    writeInt16(value: number): void {\n      const o = woAdd(2)\n      view.setInt16(o, value)\n    },\n    writeInt32(value: number): void {\n      const o = woAdd(4)\n      view.setInt32(o, value)\n    },\n    writeInt64(value: bigint): void {\n      const o = woAdd(8)\n      view.setBigInt64(o, value)\n    },\n    writeUint8(value: number): void {\n      const o = woAdd(1)\n      view.setUint8(o, value)\n    },\n    writeUint16(value: number): void {\n      const o = woAdd(2)\n      view.setUint16(o, value)\n    },\n    writeUint32(value: number): void {\n      const o = woAdd(4)\n      view.setUint32(o, value)\n    },\n    writeUint64(value: bigint): void {\n      const o = woAdd(8)\n      view.setBigUint64(o, value)\n    },\n    // Dataview Proxy\n    getFloat32(offset: number): number {\n      return view.getFloat32(offset)\n    },\n    getFloat64(offset: number): number {\n      return view.getFloat64(offset)\n    },\n    getInt8(offset: number): number {\n      return view.getInt8(offset)\n    },\n    getInt16(offset: number): number {\n      return view.getInt16(offset)\n    },\n    getInt32(offset: number): number {\n      return view.getInt32(offset)\n    },\n    getInt64(offset: number): bigint {\n      return view.getBigInt64(offset)\n    },\n    getUint8(offset: number): number {\n      return view.getUint8(offset)\n    },\n    getUint16(offset: number): number {\n      return view.getUint16(offset)\n    },\n    getUint32(offset: number): number {\n      return view.getUint32(offset)\n    },\n    getUint64(offset: number): bigint {\n      return view.getBigUint64(offset)\n    },\n    setFloat32(offset: number, value: number): void {\n      view.setFloat32(offset, value)\n    },\n    setFloat64(offset: number, value: number): void {\n      view.setFloat64(offset, value)\n    },\n    setInt8(offset: number, value: number): void {\n      view.setInt8(offset, value)\n    },\n    setInt16(offset: number, value: number): void {\n      view.setInt16(offset, value)\n    },\n    setInt32(offset: number, value: number): void {\n      view.setInt32(offset, value)\n    },\n    setInt64(offset: number, value: bigint): void {\n      view.setBigInt64(offset, value)\n    },\n    setUint8(offset: number, value: number): void {\n      view.setUint8(offset, value)\n    },\n    setUint16(offset: number, value: number): void {\n      view.setUint16(offset, value)\n    },\n    setUint32(offset: number, value: number): void {\n      view.setUint32(offset, value)\n    },\n    setUint64(offset: number, value: bigint): void {\n      view.setBigUint64(offset, value)\n    }\n  }\n}\n\n/**\n * @public\n */\nexport type ByteBuffer = ReturnType<typeof createByteBuffer>\n","/**\n * The wire message is the top-level message that can be packed\n *  inside it can contain a data with another structure or protocol\n *\n * Each wire message has three primitive property that it'll never change\n *   ---> length        uint32 (message size up to 4,294,967,295)\n *   ---> version       uint32 (for now just a number which is zero)\n *   ---> message type  uint32\n * The length indicates how many bytes are above self, the version in\n * combination with message type defines the set of handlers that will be\n * available to process the message\n *\n */\n\nimport { ByteBuffer } from './ByteBuffer'\n\ntype Uint32 = number\n\nexport namespace WireMessage {\n  export enum Enum {\n    RESERVED = 0,\n\n    // Component Operation\n    PUT_COMPONENT = 1,\n    DELETE_COMPONENT = 2,\n\n    MAX_MESSAGE_TYPE\n  }\n\n  /**\n   * @param length - Uint32 the length of all message (including the header)\n   * @param type - define the function which handles the data\n   */\n  export type Header = {\n    length: Uint32\n    type: Uint32\n  }\n\n  export const HEADER_LENGTH = 8\n  /**\n   * Validate if the message incoming is completed\n   * @param buf - ByteBuffer\n   */\n  export function validate(buf: ByteBuffer) {\n    const rem = buf.remainingBytes()\n    if (rem < HEADER_LENGTH) {\n      return false\n    }\n\n    const messageLength = buf.getUint32(buf.currentReadOffset())\n    if (rem < messageLength) {\n      return false\n    }\n\n    return true\n  }\n\n  export function readHeader(buf: ByteBuffer): Header | null {\n    if (!validate(buf)) {\n      return null\n    }\n\n    return {\n      length: buf.readUint32(),\n      type: buf.readUint32() as Enum\n    }\n  }\n}\n\nexport default WireMessage\n","import { ComponentDefinition } from '../../engine/component'\nimport { Entity } from '../../engine/entity'\nimport { ByteBuffer } from '../ByteBuffer'\nimport WireMessage from '../wireMessage'\n\nexport namespace ComponentOperation {\n  /**\n   * @param entity - Uint32 number of the entity\n   * @param componentId - Uint32 number of id\n   * @param timestamp - Uint64 Lamport timestamp\n   * @param data - Uint8[] data of component\n   */\n  export type IPutComponent = {\n    entity: Entity\n    componentId: number\n    timestamp: number\n    data: Uint8Array\n  }\n  export type IDeleteComponent = {\n    entity: Entity\n    componentId: number\n    timestamp: number\n    data?: undefined\n  }\n\n  export const MESSAGE_HEADER_LENGTH = 20\n  /**\n   * Call this function for an optimal writing data passing the ByteBuffer\n   *  already allocated\n   */\n  export function write(\n    type: WireMessage.Enum,\n    entity: Entity,\n    timestamp: number,\n    componentDefinition: ComponentDefinition,\n    buf: ByteBuffer\n  ) {\n    // reserve the beginning\n    const startMessageOffset = buf.incrementWriteOffset(\n      WireMessage.HEADER_LENGTH + MESSAGE_HEADER_LENGTH\n    )\n\n    // write body\n    if (type === WireMessage.Enum.PUT_COMPONENT) {\n      componentDefinition.writeToByteBuffer(entity, buf)\n    }\n    const messageLength = buf.size() - startMessageOffset\n\n    // Write WireMessage header\n    buf.setUint32(startMessageOffset, messageLength)\n    buf.setUint32(startMessageOffset + 4, type)\n\n    // Write ComponentOperation header\n    buf.setUint32(startMessageOffset + 8, entity)\n    buf.setUint32(startMessageOffset + 12, componentDefinition._id)\n    buf.setUint64(startMessageOffset + 16, BigInt(timestamp))\n    buf.setUint32(\n      startMessageOffset + 24,\n      messageLength - MESSAGE_HEADER_LENGTH - WireMessage.HEADER_LENGTH\n    )\n  }\n\n  export function read(\n    buf: ByteBuffer\n  ): (WireMessage.Header & (IPutComponent | IDeleteComponent)) | null {\n    const header = WireMessage.readHeader(buf)\n\n    if (!header) {\n      return null\n    }\n\n    const common = {\n      ...header,\n      entity: buf.readUint32() as Entity,\n      componentId: buf.readInt32(),\n      timestamp: Number(buf.readUint64())\n    }\n\n    if (header.type === WireMessage.Enum.DELETE_COMPONENT) {\n      return common\n    }\n\n    return {\n      ...common,\n      data: buf.readBuffer()\n    }\n  }\n}\n","import { ComponentDefinition } from '../../engine/component'\nimport { Entity } from '../../engine/entity'\n\nexport namespace CrdtUtils {\n  export type ComponentID = ComponentDefinition['_id']\n\n  export function getKey(entity: Entity, componentId: ComponentID): string {\n    return `${entity}.${componentId}`\n  }\n\n  export enum SynchronizedEntityType {\n    // synchronizes entities with the NetworkSynchronized component only, used for networked games\n    NETWORKED,\n    // synchronizes entities needed by the renderer\n    RENDERER\n  }\n}\n\nexport default CrdtUtils\n","import { Entity } from './entity'\n\nexport namespace EntityUtils {\n  /**\n   * Range is the first element and the last possible element, they both are included in the interval.\n   * [start, end]\n   */\n  export type EntityRange = readonly [number, number]\n\n  export const MAX_ENTITIES = 0xffffffff\n  export const DYNAMIC_ENTITIES_START_AT = 100e3\n  export const RESERVED_STATIC_ENTITIES = 512\n\n  export const RESERVED_ENTITIES_RANGE: EntityRange = [\n    0,\n    RESERVED_STATIC_ENTITIES - 1\n  ]\n\n  export const STATIC_ENTITIES_RANGE: EntityRange = [\n    RESERVED_STATIC_ENTITIES,\n    DYNAMIC_ENTITIES_START_AT - 1\n  ]\n\n  export const DYNAMIC_ENTITIES_RANGE: EntityRange = [\n    DYNAMIC_ENTITIES_START_AT,\n    MAX_ENTITIES\n  ]\n\n  function isInRange(entity: Entity, range: EntityRange): boolean {\n    return entity >= range[0] && entity <= range[1]\n  }\n\n  export function isDynamicEntity(entity: Entity) {\n    return isInRange(entity, DYNAMIC_ENTITIES_RANGE)\n  }\n\n  export function isStaticEntity(entity: Entity) {\n    return isInRange(entity, STATIC_ENTITIES_RANGE)\n  }\n\n  export function isReservedEntity(entity: Entity) {\n    return isInRange(entity, RESERVED_ENTITIES_RANGE)\n  }\n}\n\nexport default EntityUtils\n","import { crdtProtocol, Message as CrdtMessage } from '@dcl/crdt'\n\nimport type { PreEngine } from '../../engine'\nimport { Entity } from '../../engine/entity'\nimport { createByteBuffer } from '../../serialization/ByteBuffer'\nimport { ComponentOperation as Message } from '../../serialization/crdt/componentOperation'\nimport WireMessage from '../../serialization/wireMessage'\nimport { Transport } from './transports/types'\nimport { ReceiveMessage, TransportMessage } from './types'\nimport CrdtUtils from './utils'\n\nexport function crdtSceneSystem({\n  engine,\n  transports\n}: {\n  engine: PreEngine\n  transports: Transport[]\n}) {\n  // CRDT Client\n  const crdtClient = crdtProtocol<Uint8Array>()\n  // Messages that we received at transport.onMessage waiting to be processed\n  const receivedMessages: ReceiveMessage[] = []\n  // Messages already processed by the engine but that we need to broadcast to other transports.\n  const transportMessages: TransportMessage[] = []\n  // Map of entities already processed at least once\n\n  transports.forEach(\n    (transport) => (transport.onmessage = parseChunkMessage(transport.type))\n  )\n\n  /**\n   *\n   * @param transportType tranport id to identiy messages\n   * @returns a function to process received messages\n   */\n  function parseChunkMessage(transportType: string) {\n    /**\n     * Receives a chunk of binary messages and stores all the valid\n     * Component Operation Messages at messages queue\n     * @param chunkMessage A chunk of binary messages\n     */\n    return function parseChunkMessage(chunkMessage: Uint8Array) {\n      const buffer = createByteBuffer({\n        reading: { buffer: chunkMessage, currentOffset: 0 }\n      })\n\n      while (WireMessage.validate(buffer)) {\n        const offset = buffer.currentReadOffset()\n        const message = Message.read(buffer)!\n\n        const { type, entity, componentId, data, timestamp } = message\n        receivedMessages.push({\n          type,\n          entity,\n          componentId,\n          data,\n          timestamp,\n          transportType,\n          messageBuffer: buffer\n            .buffer()\n            .subarray(offset, buffer.currentReadOffset())\n        })\n      }\n    }\n  }\n\n  /**\n   * Return and clear the messaes queue\n   * @returns messages recieved by the transport to process on the next tick\n   */\n  function getMessages<T = unknown>(value: T[]) {\n    const messagesToProcess = Array.from(value)\n    value.length = 0\n    return messagesToProcess\n  }\n\n  /**\n   * This fn will be called on every tick.\n   * Process all the messages queue received by the transport\n   */\n  function receiveMessages() {\n    const messagesToProcess = getMessages(receivedMessages)\n    for (const transport of transports) {\n      const buffer = createByteBuffer()\n      for (const message of messagesToProcess) {\n        const { data, timestamp, componentId, entity, type } = message\n        const crdtMessage: CrdtMessage<Uint8Array> = {\n          key: CrdtUtils.getKey(entity, componentId),\n          data: data || null,\n          timestamp: timestamp\n        }\n        const component = engine.getComponent(componentId)\n        const current = crdtClient.processMessage(crdtMessage)\n\n        // CRDT outdated message. Resend this message through the wire\n        if (crdtMessage !== current) {\n          const type = component.has(entity)\n            ? WireMessage.Enum.PUT_COMPONENT\n            : WireMessage.Enum.DELETE_COMPONENT\n          Message.write(type, entity, current.timestamp, component, buffer)\n        } else {\n          // Process CRDT Message\n          if (type === WireMessage.Enum.DELETE_COMPONENT) {\n            component.deleteFrom(entity)\n          } else {\n            const opts = {\n              reading: { buffer: message.data!, currentOffset: 0 }\n            }\n            const bb = createByteBuffer(opts)\n\n            // Update engine component\n            component.upsertFromBinary(message.entity, bb)\n            component.clearDirty()\n          }\n          // Add message to transport queue to be processed by others transports\n          transportMessages.push(message)\n        }\n      }\n\n      if (buffer.size()) {\n        transport.send(buffer.toBinary())\n      }\n    }\n  }\n\n  /**\n   * Iterates the dirty map and generates crdt messages to be send\n   * @param dirtyMap a map of { entities: [componentId] }\n   */\n  function createMessages(dirtyMap: Map<Entity, Set<number>>) {\n    // CRDT Messages will be the merge between the recieved transport messages and the new crdt messages\n    const crdtMessages = getMessages(transportMessages)\n    const buffer = createByteBuffer()\n\n    for (const [entity, componentsId] of dirtyMap) {\n      for (const componentId of componentsId) {\n        const component = engine.getComponent(componentId)\n        const entityComponent = component.has(entity)\n          ? component.toBinary(entity).toBinary()\n          : null\n        const event = crdtClient.createEvent(\n          CrdtUtils.getKey(entity, componentId),\n          entityComponent\n        )\n        const offset = buffer.currentWriteOffset()\n        const type = component.has(entity)\n          ? WireMessage.Enum.PUT_COMPONENT\n          : WireMessage.Enum.DELETE_COMPONENT\n        const transportMessage: Omit<TransportMessage, 'messageBuffer'> = {\n          type,\n          componentId,\n          entity,\n          timestamp: event.timestamp\n        }\n        if (transports.some((t) => t.filter(transportMessage))) {\n          Message.write(type, entity, event.timestamp, component, buffer)\n          crdtMessages.push({\n            ...transportMessage,\n            messageBuffer: buffer\n              .buffer()\n              .subarray(offset, buffer.currentWriteOffset())\n          })\n        }\n      }\n    }\n\n    // Send messages to transports\n    const transportBuffer = createByteBuffer()\n    for (const transport of transports) {\n      transportBuffer.resetBuffer()\n      for (const message of crdtMessages) {\n        if (transport.filter(message)) {\n          transportBuffer.writeBuffer(message.messageBuffer, false)\n        }\n      }\n      if (transportBuffer.size()) {\n        transport.send(transportBuffer.toBinary())\n      }\n    }\n  }\n\n  return {\n    createMessages,\n    receiveMessages\n  }\n}\n","import { EntityUtils } from './entity-utils'\n\ndeclare const entitySymbol: unique symbol\n/**\n * @public\n */\nexport type Entity = number & { [entitySymbol]: true }\n\nexport function EntityContainer() {\n  const staticEntity = Entity(EntityUtils.STATIC_ENTITIES_RANGE)\n  const dynamicEntity = Entity(EntityUtils.DYNAMIC_ENTITIES_RANGE)\n  return {\n    generateEntity(dynamic: boolean = false): Entity {\n      if (dynamic) {\n        return dynamicEntity.generateEntity()\n      } else {\n        return staticEntity.generateEntity()\n      }\n    },\n    removeEntity(entity: Entity): boolean {\n      return (\n        staticEntity.removeEntity(entity) || dynamicEntity.removeEntity(entity)\n      )\n    },\n    isEntityExists(entity: Entity): boolean {\n      return (\n        EntityUtils.isReservedEntity(entity) ||\n        staticEntity.getExistingEntities().has(entity) ||\n        dynamicEntity.getExistingEntities().has(entity)\n      )\n    },\n    getExistingEntities(): Set<Entity> {\n      return new Set([\n        ...staticEntity.getExistingEntities(),\n        ...dynamicEntity.getExistingEntities()\n      ])\n    }\n  }\n}\n\nfunction Entity(range: EntityUtils.EntityRange) {\n  function createEntity(entity: number): Entity {\n    return entity as Entity\n  }\n\n  let entityCounter = range[0]\n  const usedEntities: Set<Entity> = new Set()\n\n  function generateEntity(): Entity {\n    if (entityCounter >= range[1]) {\n      throw new Error(\n        `It fails trying to generate an entity out of range [${range[0]}, ${range[1]}].`\n      )\n    }\n\n    const entity = createEntity(entityCounter)\n    entityCounter++\n\n    usedEntities.add(entity)\n    return entity\n  }\n\n  function removeEntity(entity: Entity) {\n    return usedEntities.delete(entity)\n  }\n\n  return {\n    getExistingEntities() {\n      return new Set(usedEntities)\n    },\n    generateEntity,\n    removeEntity\n  }\n}\n","import type { DeepReadonly } from '../Math'\nexport type { DeepReadonly }\n\nexport function deepReadonly<T extends Record<string, unknown>>(\n  val: T\n): DeepReadonly<T> {\n  // Fail only on development due to perf issues\n  // if (isProd()) {\n  //   return val\n  // }\n\n  return Object.freeze({ ...val })\n}\n\nexport function isNotUndefined<T>(val: T | undefined): val is T {\n  return !!val\n}\n","import type { ISchema } from '../schemas/ISchema'\nimport { ByteBuffer, createByteBuffer } from '../serialization/ByteBuffer'\nimport { Entity } from './entity'\nimport { deepReadonly, DeepReadonly } from './utils'\n\n/**\n * @public\n */\nexport type EcsResult<T extends ISchema> = T extends ISchema\n  ? ReturnType<T['deserialize']>\n  : never\n\n/**\n * @public\n */\nexport type ComponentType<T extends ISchema> = EcsResult<T>\n\n/**\n * @public\n */\nexport type ComponentDefinition<T extends ISchema = ISchema<any>> = {\n  _id: number\n\n  /**\n   * Return the default value of the current component\n   */\n  default(): DeepReadonly<ComponentType<T>>\n\n  /**\n   * Get if the entity has this component\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.has(myEntity) // return false\n   * Transform.create(myEntity)\n   * Transform.has(myEntity) // return true\n   * ```\n   */\n  has(entity: Entity): boolean\n\n  /**\n   * Get the readonly component of the entity (to mutate it, use getMutable instead), throw an error if the entity doesn't have the component.\n   * @param entity\n   * @return\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity)\n   * const transform = Transform.get(myEntity) // return true\n   * log(transform.position.x === 0) // log 'true'\n   *\n   * transform.position.y = 10 // illegal statement, to mutate the component use getMutable\n   * ```\n   *\n   * ```ts\n   * const otherEntity = engine.addEntity()\n   * Transform.get(otherEntity) // throw an error!!\n   * ```\n   */\n  get(entity: Entity): DeepReadonly<ComponentType<T>>\n\n  /**\n   * Get the readonly component of the entity (to mutate it, use getMutable instead), or null if the entity doesn't have the component.\n   * @param entity\n   * @return\n   *\n   * Example:\n   * ```ts\n   * const otherEntity = engine.addEntity()\n   * log(Transform.get(otherEntity) === null) // log 'true'\n   * ```\n   */\n  getOrNull(entity: Entity): DeepReadonly<ComponentType<T>> | null\n\n  /**\n   * Add the current component to an entity, throw an error if the component already exists (use `createOrReplace` instead).\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   * @param val The initial value\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity, { ...Transform.default(), position: {x: 4, y: 0, z: 4} }) // ok!\n   * Transform.create(myEntity) // throw an error, the `Transform` component already exists in `myEntity`\n   * ````\n   */\n  create(entity: Entity, val?: ComponentType<T>): ComponentType<T>\n  /**\n   * Add the current component to an entity or replace the content if the entity already has the component\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   * @param val The initial or new value\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity) // ok!\n   * Transform.createOrReplace(myEntity, { ...Transform.default(), position: {x: 4, y: 0, z: 4} }) // ok!\n   * ````\n   */\n  createOrReplace(entity: Entity, val?: ComponentType<T>): ComponentType<T>\n\n  /**\n   * Delete the current component to an entity, return null if the entity doesn't have the current component.\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity) // ok!\n   * Transform.deleteFrom(myEntity) // return the component\n   * Transform.deleteFrom(myEntity) // return null\n   * ````\n   */\n  deleteFrom(entity: Entity): ComponentType<T> | null\n\n  /**\n   * Get the mutable component of the entity, throw an error if the entity doesn't have the component.\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const myEntity = engine.addEntity()\n   * Transform.create(myEntity)\n   * Transform.getMutable(myEntity).position = {x: 4, y: 0, z: 4}\n   * ````\n   */\n  getMutable(entity: Entity): ComponentType<T>\n\n  /**\n   * Get the mutable component of the entity, return null if the entity doesn't have the component.\n   * - Internal comment: This method adds the <entity,component> to the list to be reviewed next frame\n   * @param entity\n   *\n   * Example:\n   * ```ts\n   * const transform = Transform.getMutableOrNull(myEntity)\n   * if (transform) {\n   *   transform.position = {x: 4, y: 0, z: 4}\n   * }\n   * ````\n   */\n  getMutableOrNull(entity: Entity): ComponentType<T> | null\n\n  /**\n   * @internal\n   * @param entity\n   * @param data\n   */\n  upsertFromBinary(entity: Entity, data: ByteBuffer): ComponentType<T> | null\n  /**\n   * @internal\n   * @param entity\n   * @param data\n   */\n  updateFromBinary(entity: Entity, data: ByteBuffer): ComponentType<T> | null\n\n  // allocates a buffer and returns new buffer\n  /**\n   * @internal\n   * @param entity\n   */\n  toBinary(entity: Entity): ByteBuffer\n\n  // writes to a pre-allocated buffer\n  writeToByteBuffer(entity: Entity, buffer: ByteBuffer): void\n\n  /**\n   * @internal Use engine.getEntitiesWith(Component) instead.\n   * Get the iterator to every entity has the component\n   */\n  iterator(): Iterable<[Entity, ComponentType<T>]>\n\n  // Dirty\n  /**\n   * @internal\n   */\n  dirtyIterator(): Iterable<Entity>\n  /**\n   * @internal\n   */\n  clearDirty(): void\n  /**\n   * @internal\n   */\n  isDirty(entity: Entity): boolean\n}\n\nexport function defineComponent<T extends ISchema>(\n  componentId: number,\n  spec: T\n  // meta: { syncFlags }\n): ComponentDefinition<T> {\n  const data = new Map<Entity, ComponentType<T>>()\n  const dirtyIterator = new Set<Entity>()\n\n  return {\n    _id: componentId,\n    default: function () {\n      return spec.create()\n    },\n    isDirty: function (entity: Entity): boolean {\n      return dirtyIterator.has(entity)\n    },\n    has: function (entity: Entity): boolean {\n      return data.has(entity)\n    },\n    deleteFrom: function (entity: Entity): ComponentType<T> | null {\n      const component = data.get(entity)\n      data.delete(entity)\n      dirtyIterator.add(entity)\n      return component || null\n    },\n    getOrNull: function (\n      entity: Entity\n    ): DeepReadonly<ComponentType<T>> | null {\n      const component = data.get(entity)\n      return component ? deepReadonly(component) : null\n    },\n    get: function (entity: Entity): DeepReadonly<ComponentType<T>> {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[getFrom] Component ${componentId} for ${entity} not found`\n        )\n      }\n      return deepReadonly(component)\n    },\n    create: function (\n      entity: Entity,\n      value?: ComponentType<T>\n    ): ComponentType<T> {\n      const component = data.get(entity)\n      if (component) {\n        throw new Error(\n          `[create] Component ${componentId} for ${entity} already exists`\n        )\n      }\n      const usedValue = value === undefined ? spec.create() : value\n      data.set(entity, usedValue)\n      dirtyIterator.add(entity)\n      return usedValue\n    },\n    createOrReplace: function (\n      entity: Entity,\n      value?: ComponentType<T>\n    ): ComponentType<T> {\n      const usedValue = value === undefined ? spec.create() : value\n      data.set(entity, usedValue!)\n      dirtyIterator.add(entity)\n      return usedValue!\n    },\n    getMutableOrNull: function (entity: Entity): ComponentType<T> | null {\n      const component = data.get(entity)\n      if (!component) {\n        return null\n      }\n      dirtyIterator.add(entity)\n      return component\n    },\n    getMutable: function (entity: Entity): ComponentType<T> {\n      const component = this.getMutableOrNull(entity)\n      if (component === null) {\n        throw new Error(\n          `[mutable] Component ${componentId} for ${entity} not found`\n        )\n      }\n      return component\n    },\n    iterator: function* (): Iterable<[Entity, ComponentType<T>]> {\n      for (const [entity, component] of data) {\n        yield [entity, component]\n      }\n    },\n    dirtyIterator: function* (): Iterable<Entity> {\n      for (const entity of dirtyIterator) {\n        yield entity\n      }\n    },\n    toBinary(entity: Entity): ByteBuffer {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[toBinary] Component ${componentId} for ${entity} not found`\n        )\n      }\n\n      const writeBuffer = createByteBuffer()\n      spec.serialize(component, writeBuffer)\n      return writeBuffer\n    },\n    writeToByteBuffer(entity: Entity, buffer: ByteBuffer): void {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[writeToByteBuffer] Component ${componentId} for ${entity} not found`\n        )\n      }\n\n      spec.serialize(component, buffer)\n    },\n    updateFromBinary(\n      entity: Entity,\n      buffer: ByteBuffer\n    ): ComponentType<T> | null {\n      const component = data.get(entity)\n      if (!component) {\n        throw new Error(\n          `[updateFromBinary] Component ${componentId} for ${entity} not found`\n        )\n      }\n      return this.upsertFromBinary(entity, buffer)\n    },\n    upsertFromBinary(\n      entity: Entity,\n      buffer: ByteBuffer\n    ): ComponentType<T> | null {\n      const newValue = spec.deserialize(buffer)\n      data.set(entity, newValue)\n      dirtyIterator.add(entity)\n      return newValue\n    },\n    clearDirty: function () {\n      dirtyIterator.clear()\n    }\n  }\n}\n","/**\n * @public\n */\nexport type Update = (dt: number) => void\n\nexport const SYSTEMS_REGULAR_PRIORITY = 100e3\n\ntype SystemItem = {\n  fn: Update\n  priority: number\n  name?: string\n}\n\nexport function SystemContainer() {\n  const systems: SystemItem[] = []\n\n  function sort() {\n    systems.sort((a, b) => b.priority - a.priority)\n  }\n\n  function add(fn: Update, priority: number, name?: string): void {\n    if (systems.find((item) => item.fn === fn)) {\n      throw new Error('System already added')\n    } else if (name && systems.find((item) => item.name === name)) {\n      throw new Error('System name already used')\n    }\n\n    systems.push({\n      fn,\n      priority,\n      name\n    })\n    sort()\n  }\n\n  function remove(selector: string | Update) {\n    let index = -1\n\n    if (typeof selector === 'string') {\n      index = systems.findIndex((item) => item.name === selector)\n    } else {\n      index = systems.findIndex((item) => item.fn === selector)\n    }\n\n    if (index === -1) {\n      return false\n    }\n\n    systems.splice(index, 1)\n    sort()\n    return true\n  }\n\n  return {\n    add,\n    remove,\n    getSystems() {\n      return systems\n    }\n  }\n}\n","import type { ISchema } from '../../schemas/ISchema'\nimport { Entity } from '../../engine/entity'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1\n\n/**\n * @internal\n */\ntype TransformType = {\n  position: { x: number; y: number; z: number }\n  rotation: { x: number; y: number; z: number; w: number }\n  scale: { x: number; y: number; z: number }\n  parent?: Entity\n}\n\n/** @internal */\nexport const TRANSFORM_LENGTH = 44\n\n/** @internal */\nexport const TransformSchema: ISchema<TransformType> = {\n  serialize(value: TransformType, builder: ByteBuffer): void {\n    const ptr = builder.incrementWriteOffset(TRANSFORM_LENGTH)\n    builder.setFloat32(ptr, value.position.x)\n    builder.setFloat32(ptr + 4, value.position.y)\n    builder.setFloat32(ptr + 8, value.position.z)\n    builder.setFloat32(ptr + 12, value.rotation.x)\n    builder.setFloat32(ptr + 16, value.rotation.y)\n    builder.setFloat32(ptr + 20, value.rotation.z)\n    builder.setFloat32(ptr + 24, value.rotation.w)\n    builder.setFloat32(ptr + 28, value.scale.x)\n    builder.setFloat32(ptr + 32, value.scale.y)\n    builder.setFloat32(ptr + 36, value.scale.z)\n    builder.setUint32(ptr + 40, value.parent || 0)\n  },\n  deserialize(reader: ByteBuffer): TransformType {\n    const ptr = reader.incrementReadOffset(TRANSFORM_LENGTH)\n    return {\n      position: {\n        x: reader.getFloat32(ptr),\n        y: reader.getFloat32(ptr + 4),\n        z: reader.getFloat32(ptr + 8)\n      },\n      rotation: {\n        x: reader.getFloat32(ptr + 12),\n        y: reader.getFloat32(ptr + 16),\n        z: reader.getFloat32(ptr + 20),\n        w: reader.getFloat32(ptr + 24)\n      },\n      scale: {\n        x: reader.getFloat32(ptr + 28),\n        y: reader.getFloat32(ptr + 32),\n        z: reader.getFloat32(ptr + 36)\n      },\n      parent: reader.getUint32(ptr + 40) as Entity\n    }\n  },\n  create(): TransformType {\n    return {\n      position: { x: 0, y: 0, z: 0 },\n      scale: { x: 1, y: 1, z: 1 },\n      rotation: { x: 0, y: 0, z: 0, w: 1 },\n      parent: undefined\n    }\n  }\n}\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBAnimator {\n  states: PBAnimationState[]\n}\n\nexport interface PBAnimationState {\n  name: string\n  clip: string\n  playing?: boolean | undefined\n  /** default=1.0s */\n  weight?: number | undefined\n  /** default=1.0 */\n  speed?: number | undefined\n  /** default=true */\n  loop?: boolean | undefined\n  shouldReset?: boolean | undefined\n}\n\nfunction createBasePBAnimator(): PBAnimator {\n  return { states: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBAnimator = {\n  encode(message: PBAnimator, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    for (const v of message.states) {\n      PBAnimationState.encode(v!, writer.uint32(10).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAnimator {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAnimator()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.states.push(PBAnimationState.decode(reader, reader.uint32()))\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\nfunction createBasePBAnimationState(): PBAnimationState {\n  return {\n    name: '',\n    clip: '',\n    playing: undefined,\n    weight: undefined,\n    speed: undefined,\n    loop: undefined,\n    shouldReset: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBAnimationState = {\n  encode(message: PBAnimationState, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.name !== '') {\n      writer.uint32(10).string(message.name)\n    }\n    if (message.clip !== '') {\n      writer.uint32(18).string(message.clip)\n    }\n    if (message.playing !== undefined) {\n      writer.uint32(24).bool(message.playing)\n    }\n    if (message.weight !== undefined) {\n      writer.uint32(37).float(message.weight)\n    }\n    if (message.speed !== undefined) {\n      writer.uint32(45).float(message.speed)\n    }\n    if (message.loop !== undefined) {\n      writer.uint32(48).bool(message.loop)\n    }\n    if (message.shouldReset !== undefined) {\n      writer.uint32(56).bool(message.shouldReset)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAnimationState {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAnimationState()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.name = reader.string()\n          break\n        case 2:\n          message.clip = reader.string()\n          break\n        case 3:\n          message.playing = reader.bool()\n          break\n        case 4:\n          message.weight = reader.float()\n          break\n        case 5:\n          message.speed = reader.float()\n          break\n        case 6:\n          message.loop = reader.bool()\n          break\n        case 7:\n          message.shouldReset = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAnimator } from './pb/Animator.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1042\n\n/**\n * @internal\n */\nexport const AnimatorSchema: ISchema<PBAnimator> = {\n  serialize(value: PBAnimator, builder: ByteBuffer): void {\n    const writer = PBAnimator.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAnimator {\n    return PBAnimator.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAnimator {\n    // TODO: this is a hack.\n    return PBAnimator.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBAudioSource {\n  playing?: boolean | undefined\n  /** default=1.0f */\n  volume?: number | undefined\n  loop?: boolean | undefined\n  /** default=1.0f */\n  pitch?: number | undefined\n  audioClipUrl: string\n}\n\nfunction createBasePBAudioSource(): PBAudioSource {\n  return { playing: undefined, volume: undefined, loop: undefined, pitch: undefined, audioClipUrl: '' }\n}\n\n\n/**\n * @internal\n */\nexport const PBAudioSource = {\n  encode(message: PBAudioSource, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.playing !== undefined) {\n      writer.uint32(8).bool(message.playing)\n    }\n    if (message.volume !== undefined) {\n      writer.uint32(21).float(message.volume)\n    }\n    if (message.loop !== undefined) {\n      writer.uint32(24).bool(message.loop)\n    }\n    if (message.pitch !== undefined) {\n      writer.uint32(37).float(message.pitch)\n    }\n    if (message.audioClipUrl !== '') {\n      writer.uint32(42).string(message.audioClipUrl)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAudioSource {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAudioSource()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.playing = reader.bool()\n          break\n        case 2:\n          message.volume = reader.float()\n          break\n        case 3:\n          message.loop = reader.bool()\n          break\n        case 4:\n          message.pitch = reader.float()\n          break\n        case 5:\n          message.audioClipUrl = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAudioSource } from './pb/AudioSource.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1020\n\n/**\n * @internal\n */\nexport const AudioSourceSchema: ISchema<PBAudioSource> = {\n  serialize(value: PBAudioSource, builder: ByteBuffer): void {\n    const writer = PBAudioSource.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAudioSource {\n    return PBAudioSource.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAudioSource {\n    // TODO: this is a hack.\n    return PBAudioSource.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport const enum AvatarAnchorPoint {\n  POSITION = 0,\n  NAME_TAG = 1,\n  LEFT_HAND = 2,\n  RIGHT_HAND = 3,\n  UNRECOGNIZED = -1\n}\n\nexport interface PBAvatarAttach {\n  avatarId: string\n  anchorPointId: AvatarAnchorPoint\n}\n\nfunction createBasePBAvatarAttach(): PBAvatarAttach {\n  return { avatarId: '', anchorPointId: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBAvatarAttach = {\n  encode(message: PBAvatarAttach, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.avatarId !== '') {\n      writer.uint32(10).string(message.avatarId)\n    }\n    if (message.anchorPointId !== 0) {\n      writer.uint32(16).int32(message.anchorPointId)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarAttach {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAvatarAttach()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.avatarId = reader.string()\n          break\n        case 2:\n          message.anchorPointId = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAvatarAttach } from './pb/AvatarAttach.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1073\n\n/**\n * @internal\n */\nexport const AvatarAttachSchema: ISchema<PBAvatarAttach> = {\n  serialize(value: PBAvatarAttach, builder: ByteBuffer): void {\n    const writer = PBAvatarAttach.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAvatarAttach {\n    return PBAvatarAttach.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAvatarAttach {\n    // TODO: this is a hack.\n    return PBAvatarAttach.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface Color3 {\n  r: number\n  g: number\n  b: number\n}\n\nfunction createBaseColor3(): Color3 {\n  return { r: 0, g: 0, b: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const Color3 = {\n  encode(message: Color3, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.r !== 0) {\n      writer.uint32(13).float(message.r)\n    }\n    if (message.g !== 0) {\n      writer.uint32(21).float(message.g)\n    }\n    if (message.b !== 0) {\n      writer.uint32(29).float(message.b)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Color3 {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBaseColor3()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.r = reader.float()\n          break\n        case 2:\n          message.g = reader.float()\n          break\n        case 3:\n          message.b = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","/* eslint-disable */\nimport Long from 'long'\nimport { Color3 } from './common/Color3.gen'\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBAvatarShape {\n  id: string\n  name?: string | undefined\n  bodyShape?: string | undefined\n  skinColor?: Color3 | undefined\n  hairColor?: Color3 | undefined\n  eyeColor?: Color3 | undefined\n  wearables: string[]\n  expressionTriggerId?: string | undefined\n  expressionTriggerTimestamp?: number | undefined\n  stickerTriggerId?: string | undefined\n  stickerTriggerTimestamp?: number | undefined\n  talking?: boolean | undefined\n}\n\nfunction createBasePBAvatarShape(): PBAvatarShape {\n  return {\n    id: '',\n    name: undefined,\n    bodyShape: undefined,\n    skinColor: undefined,\n    hairColor: undefined,\n    eyeColor: undefined,\n    wearables: [],\n    expressionTriggerId: undefined,\n    expressionTriggerTimestamp: undefined,\n    stickerTriggerId: undefined,\n    stickerTriggerTimestamp: undefined,\n    talking: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBAvatarShape = {\n  encode(message: PBAvatarShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.id !== '') {\n      writer.uint32(10).string(message.id)\n    }\n    if (message.name !== undefined) {\n      writer.uint32(18).string(message.name)\n    }\n    if (message.bodyShape !== undefined) {\n      writer.uint32(26).string(message.bodyShape)\n    }\n    if (message.skinColor !== undefined) {\n      Color3.encode(message.skinColor, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.hairColor !== undefined) {\n      Color3.encode(message.hairColor, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.eyeColor !== undefined) {\n      Color3.encode(message.eyeColor, writer.uint32(50).fork()).ldelim()\n    }\n    for (const v of message.wearables) {\n      writer.uint32(58).string(v!)\n    }\n    if (message.expressionTriggerId !== undefined) {\n      writer.uint32(66).string(message.expressionTriggerId)\n    }\n    if (message.expressionTriggerTimestamp !== undefined) {\n      writer.uint32(72).int64(message.expressionTriggerTimestamp)\n    }\n    if (message.stickerTriggerId !== undefined) {\n      writer.uint32(82).string(message.stickerTriggerId)\n    }\n    if (message.stickerTriggerTimestamp !== undefined) {\n      writer.uint32(88).int64(message.stickerTriggerTimestamp)\n    }\n    if (message.talking !== undefined) {\n      writer.uint32(96).bool(message.talking)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBAvatarShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBAvatarShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.id = reader.string()\n          break\n        case 2:\n          message.name = reader.string()\n          break\n        case 3:\n          message.bodyShape = reader.string()\n          break\n        case 4:\n          message.skinColor = Color3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.hairColor = Color3.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.eyeColor = Color3.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.wearables.push(reader.string())\n          break\n        case 8:\n          message.expressionTriggerId = reader.string()\n          break\n        case 9:\n          message.expressionTriggerTimestamp = longToNumber(reader.int64() as Long)\n          break\n        case 10:\n          message.stickerTriggerId = reader.string()\n          break\n        case 11:\n          message.stickerTriggerTimestamp = longToNumber(reader.int64() as Long)\n          break\n        case 12:\n          message.talking = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n\ndeclare var self: any | undefined\ndeclare var window: any | undefined\ndeclare var global: any | undefined\nvar globalThis: any = (() => {\n  if (typeof globalThis !== 'undefined') return globalThis\n  if (typeof self !== 'undefined') return self\n  if (typeof window !== 'undefined') return window\n  if (typeof global !== 'undefined') return global\n  throw 'Unable to locate global object'\n})()\n\nfunction longToNumber(long: Long): number {\n  if (long.gt(Number.MAX_SAFE_INTEGER)) {\n    throw new globalThis.Error('Value is larger than Number.MAX_SAFE_INTEGER')\n  }\n  return long.toNumber()\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBAvatarShape } from './pb/AvatarShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1080\n\n/**\n * @internal\n */\nexport const AvatarShapeSchema: ISchema<PBAvatarShape> = {\n  serialize(value: PBAvatarShape, builder: ByteBuffer): void {\n    const writer = PBAvatarShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBAvatarShape {\n    return PBAvatarShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBAvatarShape {\n    // TODO: this is a hack.\n    return PBAvatarShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBBillboard {\n  /** default=true */\n  x?: boolean | undefined\n  /** default=true */\n  y?: boolean | undefined\n  /** default=true */\n  z?: boolean | undefined\n}\n\nfunction createBasePBBillboard(): PBBillboard {\n  return { x: undefined, y: undefined, z: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBBillboard = {\n  encode(message: PBBillboard, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.x !== undefined) {\n      writer.uint32(8).bool(message.x)\n    }\n    if (message.y !== undefined) {\n      writer.uint32(16).bool(message.y)\n    }\n    if (message.z !== undefined) {\n      writer.uint32(24).bool(message.z)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBBillboard {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBBillboard()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.x = reader.bool()\n          break\n        case 2:\n          message.y = reader.bool()\n          break\n        case 3:\n          message.z = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBBillboard } from './pb/Billboard.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1090\n\n/**\n * @internal\n */\nexport const BillboardSchema: ISchema<PBBillboard> = {\n  serialize(value: PBBillboard, builder: ByteBuffer): void {\n    const writer = PBBillboard.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBBillboard {\n    return PBBillboard.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBBillboard {\n    // TODO: this is a hack.\n    return PBBillboard.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBBoxShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  uvs: number[]\n}\n\nfunction createBasePBBoxShape(): PBBoxShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined, uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBBoxShape = {\n  encode(message: PBBoxShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    writer.uint32(34).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBBoxShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBBoxShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBBoxShape } from './pb/BoxShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1013\n\n/**\n * @internal\n */\nexport const BoxShapeSchema: ISchema<PBBoxShape> = {\n  serialize(value: PBBoxShape, builder: ByteBuffer): void {\n    const writer = PBBoxShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBBoxShape {\n    return PBBoxShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBBoxShape {\n    // TODO: this is a hack.\n    return PBBoxShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { CameraModeValue } from './common/CameraModeValue.gen'\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBCameraMode {\n  mode: CameraModeValue\n}\n\nfunction createBasePBCameraMode(): PBCameraMode {\n  return { mode: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBCameraMode = {\n  encode(message: PBCameraMode, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.mode !== 0) {\n      writer.uint32(8).int32(message.mode)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBCameraMode {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBCameraMode()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.mode = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBCameraMode } from './pb/CameraMode.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1072\n\n/**\n * @internal\n */\nexport const CameraModeSchema: ISchema<PBCameraMode> = {\n  serialize(value: PBCameraMode, builder: ByteBuffer): void {\n    const writer = PBCameraMode.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBCameraMode {\n    return PBCameraMode.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBCameraMode {\n    // TODO: this is a hack.\n    return PBCameraMode.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface Vector3 {\n  x: number\n  y: number\n  z: number\n}\n\nfunction createBaseVector3(): Vector3 {\n  return { x: 0, y: 0, z: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const Vector3 = {\n  encode(message: Vector3, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.x !== 0) {\n      writer.uint32(13).float(message.x)\n    }\n    if (message.y !== 0) {\n      writer.uint32(21).float(message.y)\n    }\n    if (message.z !== 0) {\n      writer.uint32(29).float(message.z)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): Vector3 {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBaseVector3()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.x = reader.float()\n          break\n        case 2:\n          message.y = reader.float()\n          break\n        case 3:\n          message.z = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","/* eslint-disable */\nimport { CameraModeValue } from './common/CameraModeValue.gen'\nimport { Vector3 } from './common/Vector3.gen'\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBCameraModeArea {\n  area: Vector3 | undefined\n  mode: CameraModeValue\n}\n\nfunction createBasePBCameraModeArea(): PBCameraModeArea {\n  return { area: undefined, mode: 0 }\n}\n\n\n/**\n * @internal\n */\nexport const PBCameraModeArea = {\n  encode(message: PBCameraModeArea, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.area !== undefined) {\n      Vector3.encode(message.area, writer.uint32(10).fork()).ldelim()\n    }\n    if (message.mode !== 0) {\n      writer.uint32(16).int32(message.mode)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBCameraModeArea {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBCameraModeArea()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.area = Vector3.decode(reader, reader.uint32())\n          break\n        case 2:\n          message.mode = reader.int32() as any\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBCameraModeArea } from './pb/CameraModeArea.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1071\n\n/**\n * @internal\n */\nexport const CameraModeAreaSchema: ISchema<PBCameraModeArea> = {\n  serialize(value: PBCameraModeArea, builder: ByteBuffer): void {\n    const writer = PBCameraModeArea.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBCameraModeArea {\n    return PBCameraModeArea.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBCameraModeArea {\n    // TODO: this is a hack.\n    return PBCameraModeArea.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBCylinderShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  /** default=1.0 */\n  radiusTop?: number | undefined\n  /** default=1.0 */\n  radiusBottom?: number | undefined\n}\n\nfunction createBasePBCylinderShape(): PBCylinderShape {\n  return {\n    withCollisions: undefined,\n    isPointerBlocker: undefined,\n    visible: undefined,\n    radiusTop: undefined,\n    radiusBottom: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBCylinderShape = {\n  encode(message: PBCylinderShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    if (message.radiusTop !== undefined) {\n      writer.uint32(37).float(message.radiusTop)\n    }\n    if (message.radiusBottom !== undefined) {\n      writer.uint32(45).float(message.radiusBottom)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBCylinderShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBCylinderShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          message.radiusTop = reader.float()\n          break\n        case 5:\n          message.radiusBottom = reader.float()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBCylinderShape } from './pb/CylinderShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1016\n\n/**\n * @internal\n */\nexport const CylinderShapeSchema: ISchema<PBCylinderShape> = {\n  serialize(value: PBCylinderShape, builder: ByteBuffer): void {\n    const writer = PBCylinderShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBCylinderShape {\n    return PBCylinderShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBCylinderShape {\n    // TODO: this is a hack.\n    return PBCylinderShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBGLTFShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  src: string\n}\n\nfunction createBasePBGLTFShape(): PBGLTFShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined, src: '' }\n}\n\n\n/**\n * @internal\n */\nexport const PBGLTFShape = {\n  encode(message: PBGLTFShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    if (message.src !== '') {\n      writer.uint32(34).string(message.src)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBGLTFShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBGLTFShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          message.src = reader.string()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBGLTFShape } from './pb/GLTFShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1041\n\n/**\n * @internal\n */\nexport const GLTFShapeSchema: ISchema<PBGLTFShape> = {\n  serialize(value: PBGLTFShape, builder: ByteBuffer): void {\n    const writer = PBGLTFShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBGLTFShape {\n    return PBGLTFShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBGLTFShape {\n    // TODO: this is a hack.\n    return PBGLTFShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBNFTShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  src: string\n  assetId?: string | undefined\n  style?: number | undefined\n  color?: Color3 | undefined\n}\n\nfunction createBasePBNFTShape(): PBNFTShape {\n  return {\n    withCollisions: undefined,\n    isPointerBlocker: undefined,\n    visible: undefined,\n    src: '',\n    assetId: undefined,\n    style: undefined,\n    color: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBNFTShape = {\n  encode(message: PBNFTShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    if (message.src !== '') {\n      writer.uint32(34).string(message.src)\n    }\n    if (message.assetId !== undefined) {\n      writer.uint32(42).string(message.assetId)\n    }\n    if (message.style !== undefined) {\n      writer.uint32(48).int32(message.style)\n    }\n    if (message.color !== undefined) {\n      Color3.encode(message.color, writer.uint32(58).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBNFTShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBNFTShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          message.src = reader.string()\n          break\n        case 5:\n          message.assetId = reader.string()\n          break\n        case 6:\n          message.style = reader.int32()\n          break\n        case 7:\n          message.color = Color3.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBNFTShape } from './pb/NFTShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1040\n\n/**\n * @internal\n */\nexport const NFTShapeSchema: ISchema<PBNFTShape> = {\n  serialize(value: PBNFTShape, builder: ByteBuffer): void {\n    const writer = PBNFTShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBNFTShape {\n    return PBNFTShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBNFTShape {\n    // TODO: this is a hack.\n    return PBNFTShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerDown {\n  /** default=ActionButton.ANY */\n  button?: ActionButton | undefined\n  /** default='Interact' */\n  hoverText?: string | undefined\n  /** default=10 */\n  maxDistance?: number | undefined\n  /** default=true */\n  showFeedback?: boolean | undefined\n}\n\nfunction createBasePBOnPointerDown(): PBOnPointerDown {\n  return { button: undefined, hoverText: undefined, maxDistance: undefined, showFeedback: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerDown = {\n  encode(message: PBOnPointerDown, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== undefined) {\n      writer.uint32(8).int32(message.button)\n    }\n    if (message.hoverText !== undefined) {\n      writer.uint32(18).string(message.hoverText)\n    }\n    if (message.maxDistance !== undefined) {\n      writer.uint32(29).float(message.maxDistance)\n    }\n    if (message.showFeedback !== undefined) {\n      writer.uint32(32).bool(message.showFeedback)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerDown {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerDown()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.button = reader.int32() as any\n          break\n        case 2:\n          message.hoverText = reader.string()\n          break\n        case 3:\n          message.maxDistance = reader.float()\n          break\n        case 4:\n          message.showFeedback = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerDown } from './pb/OnPointerDown.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1060\n\n/**\n * @internal\n */\nexport const OnPointerDownSchema: ISchema<PBOnPointerDown> = {\n  serialize(value: PBOnPointerDown, builder: ByteBuffer): void {\n    const writer = PBOnPointerDown.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerDown {\n    return PBOnPointerDown.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerDown {\n    // TODO: this is a hack.\n    return PBOnPointerDown.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport { Vector3 } from './common/Vector3.gen'\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerDownResult {\n  button: ActionButton\n  meshName: string\n  origin: Vector3 | undefined\n  direction: Vector3 | undefined\n  point: Vector3 | undefined\n  normal: Vector3 | undefined\n  distance: number\n  timestamp: number\n}\n\nfunction createBasePBOnPointerDownResult(): PBOnPointerDownResult {\n  return {\n    button: 0,\n    meshName: '',\n    origin: undefined,\n    direction: undefined,\n    point: undefined,\n    normal: undefined,\n    distance: 0,\n    timestamp: 0\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerDownResult = {\n  encode(message: PBOnPointerDownResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== 0) {\n      writer.uint32(16).int32(message.button)\n    }\n    if (message.meshName !== '') {\n      writer.uint32(26).string(message.meshName)\n    }\n    if (message.origin !== undefined) {\n      Vector3.encode(message.origin, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.direction !== undefined) {\n      Vector3.encode(message.direction, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.point !== undefined) {\n      Vector3.encode(message.point, writer.uint32(50).fork()).ldelim()\n    }\n    if (message.normal !== undefined) {\n      Vector3.encode(message.normal, writer.uint32(58).fork()).ldelim()\n    }\n    if (message.distance !== 0) {\n      writer.uint32(69).float(message.distance)\n    }\n    if (message.timestamp !== 0) {\n      writer.uint32(72).int32(message.timestamp)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerDownResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerDownResult()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 2:\n          message.button = reader.int32() as any\n          break\n        case 3:\n          message.meshName = reader.string()\n          break\n        case 4:\n          message.origin = Vector3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.direction = Vector3.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.point = Vector3.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.normal = Vector3.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.distance = reader.float()\n          break\n        case 9:\n          message.timestamp = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerDownResult } from './pb/OnPointerDownResult.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1066\n\n/**\n * @internal\n */\nexport const OnPointerDownResultSchema: ISchema<PBOnPointerDownResult> = {\n  serialize(value: PBOnPointerDownResult, builder: ByteBuffer): void {\n    const writer = PBOnPointerDownResult.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerDownResult {\n    return PBOnPointerDownResult.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerDownResult {\n    // TODO: this is a hack.\n    return PBOnPointerDownResult.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerUp {\n  /** default=ActionButton.ANY */\n  button?: ActionButton | undefined\n  /** default='Interact' */\n  hoverText?: string | undefined\n  /** default=10 */\n  maxDistance?: number | undefined\n  /** default=true */\n  showFeedback?: boolean | undefined\n}\n\nfunction createBasePBOnPointerUp(): PBOnPointerUp {\n  return { button: undefined, hoverText: undefined, maxDistance: undefined, showFeedback: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerUp = {\n  encode(message: PBOnPointerUp, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== undefined) {\n      writer.uint32(8).int32(message.button)\n    }\n    if (message.hoverText !== undefined) {\n      writer.uint32(18).string(message.hoverText)\n    }\n    if (message.maxDistance !== undefined) {\n      writer.uint32(29).float(message.maxDistance)\n    }\n    if (message.showFeedback !== undefined) {\n      writer.uint32(32).bool(message.showFeedback)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerUp {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerUp()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.button = reader.int32() as any\n          break\n        case 2:\n          message.hoverText = reader.string()\n          break\n        case 3:\n          message.maxDistance = reader.float()\n          break\n        case 4:\n          message.showFeedback = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerUp } from './pb/OnPointerUp.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1061\n\n/**\n * @internal\n */\nexport const OnPointerUpSchema: ISchema<PBOnPointerUp> = {\n  serialize(value: PBOnPointerUp, builder: ByteBuffer): void {\n    const writer = PBOnPointerUp.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerUp {\n    return PBOnPointerUp.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerUp {\n    // TODO: this is a hack.\n    return PBOnPointerUp.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { ActionButton } from './common/ActionButton.gen'\nimport { Vector3 } from './common/Vector3.gen'\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBOnPointerUpResult {\n  button: ActionButton\n  meshName: string\n  origin: Vector3 | undefined\n  direction: Vector3 | undefined\n  point: Vector3 | undefined\n  normal: Vector3 | undefined\n  distance: number\n  timestamp: number\n}\n\nfunction createBasePBOnPointerUpResult(): PBOnPointerUpResult {\n  return {\n    button: 0,\n    meshName: '',\n    origin: undefined,\n    direction: undefined,\n    point: undefined,\n    normal: undefined,\n    distance: 0,\n    timestamp: 0\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBOnPointerUpResult = {\n  encode(message: PBOnPointerUpResult, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.button !== 0) {\n      writer.uint32(16).int32(message.button)\n    }\n    if (message.meshName !== '') {\n      writer.uint32(26).string(message.meshName)\n    }\n    if (message.origin !== undefined) {\n      Vector3.encode(message.origin, writer.uint32(34).fork()).ldelim()\n    }\n    if (message.direction !== undefined) {\n      Vector3.encode(message.direction, writer.uint32(42).fork()).ldelim()\n    }\n    if (message.point !== undefined) {\n      Vector3.encode(message.point, writer.uint32(50).fork()).ldelim()\n    }\n    if (message.normal !== undefined) {\n      Vector3.encode(message.normal, writer.uint32(58).fork()).ldelim()\n    }\n    if (message.distance !== 0) {\n      writer.uint32(69).float(message.distance)\n    }\n    if (message.timestamp !== 0) {\n      writer.uint32(72).int32(message.timestamp)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBOnPointerUpResult {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBOnPointerUpResult()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 2:\n          message.button = reader.int32() as any\n          break\n        case 3:\n          message.meshName = reader.string()\n          break\n        case 4:\n          message.origin = Vector3.decode(reader, reader.uint32())\n          break\n        case 5:\n          message.direction = Vector3.decode(reader, reader.uint32())\n          break\n        case 6:\n          message.point = Vector3.decode(reader, reader.uint32())\n          break\n        case 7:\n          message.normal = Vector3.decode(reader, reader.uint32())\n          break\n        case 8:\n          message.distance = reader.float()\n          break\n        case 9:\n          message.timestamp = reader.int32()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBOnPointerUpResult } from './pb/OnPointerUpResult.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1065\n\n/**\n * @internal\n */\nexport const OnPointerUpResultSchema: ISchema<PBOnPointerUpResult> = {\n  serialize(value: PBOnPointerUpResult, builder: ByteBuffer): void {\n    const writer = PBOnPointerUpResult.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBOnPointerUpResult {\n    return PBOnPointerUpResult.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBOnPointerUpResult {\n    // TODO: this is a hack.\n    return PBOnPointerUpResult.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBPlaneShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  uvs: number[]\n}\n\nfunction createBasePBPlaneShape(): PBPlaneShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined, uvs: [] }\n}\n\n\n/**\n * @internal\n */\nexport const PBPlaneShape = {\n  encode(message: PBPlaneShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    writer.uint32(34).fork()\n    for (const v of message.uvs) {\n      writer.float(v)\n    }\n    writer.ldelim()\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPlaneShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPlaneShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        case 4:\n          if ((tag & 7) === 2) {\n            const end2 = reader.uint32() + reader.pos\n            while (reader.pos < end2) {\n              message.uvs.push(reader.float())\n            }\n          } else {\n            message.uvs.push(reader.float())\n          }\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBPlaneShape } from './pb/PlaneShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1014\n\n/**\n * @internal\n */\nexport const PlaneShapeSchema: ISchema<PBPlaneShape> = {\n  serialize(value: PBPlaneShape, builder: ByteBuffer): void {\n    const writer = PBPlaneShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBPlaneShape {\n    return PBPlaneShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBPlaneShape {\n    // TODO: this is a hack.\n    return PBPlaneShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBPointerLock {\n  isPointerLocked: boolean\n}\n\nfunction createBasePBPointerLock(): PBPointerLock {\n  return { isPointerLocked: false }\n}\n\n\n/**\n * @internal\n */\nexport const PBPointerLock = {\n  encode(message: PBPointerLock, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.isPointerLocked === true) {\n      writer.uint32(8).bool(message.isPointerLocked)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBPointerLock {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBPointerLock()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.isPointerLocked = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBPointerLock } from './pb/PointerLock.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1074\n\n/**\n * @internal\n */\nexport const PointerLockSchema: ISchema<PBPointerLock> = {\n  serialize(value: PBPointerLock, builder: ByteBuffer): void {\n    const writer = PBPointerLock.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBPointerLock {\n    return PBPointerLock.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBPointerLock {\n    // TODO: this is a hack.\n    return PBPointerLock.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBSphereShape {\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  withCollisions?: boolean | undefined\n  /** @deprecated use MeshCollider instead https://github.com/decentraland/sdk/issues/366 */\n  isPointerBlocker?: boolean | undefined\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n}\n\nfunction createBasePBSphereShape(): PBSphereShape {\n  return { withCollisions: undefined, isPointerBlocker: undefined, visible: undefined }\n}\n\n\n/**\n * @internal\n */\nexport const PBSphereShape = {\n  encode(message: PBSphereShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.withCollisions !== undefined) {\n      writer.uint32(8).bool(message.withCollisions)\n    }\n    if (message.isPointerBlocker !== undefined) {\n      writer.uint32(16).bool(message.isPointerBlocker)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(24).bool(message.visible)\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBSphereShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBSphereShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.withCollisions = reader.bool()\n          break\n        case 2:\n          message.isPointerBlocker = reader.bool()\n          break\n        case 3:\n          message.visible = reader.bool()\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBSphereShape } from './pb/SphereShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1015\n\n/**\n * @internal\n */\nexport const SphereShapeSchema: ISchema<PBSphereShape> = {\n  serialize(value: PBSphereShape, builder: ByteBuffer): void {\n    const writer = PBSphereShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBSphereShape {\n    return PBSphereShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBSphereShape {\n    // TODO: this is a hack.\n    return PBSphereShape.decode(new Uint8Array())\n  }\n}\n","/* eslint-disable */\nimport { Color3 } from './common/Color3.gen'\nimport * as _m0 from 'protobufjs/minimal'\n\n\n/**\n * @internal\n */\nexport const protobufPackage = ''\n\nexport interface PBTextShape {\n  text: string\n  /** @deprecated use HiddenComponent instead https://github.com/decentraland/sdk/issues/353 */\n  visible?: boolean | undefined\n  font?: string | undefined\n  /** default=1.0f */\n  opacity?: number | undefined\n  /** default=10 */\n  fontSize?: number | undefined\n  fontAutoSize?: boolean | undefined\n  /** default='center' */\n  hTextAlign?: string | undefined\n  /** default='center' */\n  vTextAlign?: string | undefined\n  /** default=1 */\n  width?: number | undefined\n  /** default=1 */\n  height?: number | undefined\n  paddingTop?: number | undefined\n  paddingRight?: number | undefined\n  paddingBottom?: number | undefined\n  paddingLeft?: number | undefined\n  lineSpacing?: number | undefined\n  lineCount?: number | undefined\n  textWrapping?: boolean | undefined\n  shadowBlur?: number | undefined\n  shadowOffsetX?: number | undefined\n  shadowOffsetY?: number | undefined\n  outlineWidth?: number | undefined\n  /** default=(1.0,1.0,1.0) */\n  shadowColor?: Color3 | undefined\n  /** default=(1.0,1.0,1.0) */\n  outlineColor?: Color3 | undefined\n  /** default=(1.0,1.0,1.0) */\n  textColor?: Color3 | undefined\n}\n\nfunction createBasePBTextShape(): PBTextShape {\n  return {\n    text: '',\n    visible: undefined,\n    font: undefined,\n    opacity: undefined,\n    fontSize: undefined,\n    fontAutoSize: undefined,\n    hTextAlign: undefined,\n    vTextAlign: undefined,\n    width: undefined,\n    height: undefined,\n    paddingTop: undefined,\n    paddingRight: undefined,\n    paddingBottom: undefined,\n    paddingLeft: undefined,\n    lineSpacing: undefined,\n    lineCount: undefined,\n    textWrapping: undefined,\n    shadowBlur: undefined,\n    shadowOffsetX: undefined,\n    shadowOffsetY: undefined,\n    outlineWidth: undefined,\n    shadowColor: undefined,\n    outlineColor: undefined,\n    textColor: undefined\n  }\n}\n\n\n/**\n * @internal\n */\nexport const PBTextShape = {\n  encode(message: PBTextShape, writer: _m0.Writer = _m0.Writer.create()): _m0.Writer {\n    if (message.text !== '') {\n      writer.uint32(10).string(message.text)\n    }\n    if (message.visible !== undefined) {\n      writer.uint32(16).bool(message.visible)\n    }\n    if (message.font !== undefined) {\n      writer.uint32(26).string(message.font)\n    }\n    if (message.opacity !== undefined) {\n      writer.uint32(37).float(message.opacity)\n    }\n    if (message.fontSize !== undefined) {\n      writer.uint32(45).float(message.fontSize)\n    }\n    if (message.fontAutoSize !== undefined) {\n      writer.uint32(48).bool(message.fontAutoSize)\n    }\n    if (message.hTextAlign !== undefined) {\n      writer.uint32(58).string(message.hTextAlign)\n    }\n    if (message.vTextAlign !== undefined) {\n      writer.uint32(66).string(message.vTextAlign)\n    }\n    if (message.width !== undefined) {\n      writer.uint32(77).float(message.width)\n    }\n    if (message.height !== undefined) {\n      writer.uint32(85).float(message.height)\n    }\n    if (message.paddingTop !== undefined) {\n      writer.uint32(93).float(message.paddingTop)\n    }\n    if (message.paddingRight !== undefined) {\n      writer.uint32(101).float(message.paddingRight)\n    }\n    if (message.paddingBottom !== undefined) {\n      writer.uint32(109).float(message.paddingBottom)\n    }\n    if (message.paddingLeft !== undefined) {\n      writer.uint32(117).float(message.paddingLeft)\n    }\n    if (message.lineSpacing !== undefined) {\n      writer.uint32(125).float(message.lineSpacing)\n    }\n    if (message.lineCount !== undefined) {\n      writer.uint32(128).int32(message.lineCount)\n    }\n    if (message.textWrapping !== undefined) {\n      writer.uint32(136).bool(message.textWrapping)\n    }\n    if (message.shadowBlur !== undefined) {\n      writer.uint32(149).float(message.shadowBlur)\n    }\n    if (message.shadowOffsetX !== undefined) {\n      writer.uint32(157).float(message.shadowOffsetX)\n    }\n    if (message.shadowOffsetY !== undefined) {\n      writer.uint32(165).float(message.shadowOffsetY)\n    }\n    if (message.outlineWidth !== undefined) {\n      writer.uint32(173).float(message.outlineWidth)\n    }\n    if (message.shadowColor !== undefined) {\n      Color3.encode(message.shadowColor, writer.uint32(178).fork()).ldelim()\n    }\n    if (message.outlineColor !== undefined) {\n      Color3.encode(message.outlineColor, writer.uint32(186).fork()).ldelim()\n    }\n    if (message.textColor !== undefined) {\n      Color3.encode(message.textColor, writer.uint32(194).fork()).ldelim()\n    }\n    return writer\n  },\n\n  decode(input: _m0.Reader | Uint8Array, length?: number): PBTextShape {\n    const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input)\n    let end = length === undefined ? reader.len : reader.pos + length\n    const message = createBasePBTextShape()\n    while (reader.pos < end) {\n      const tag = reader.uint32()\n      switch (tag >>> 3) {\n        case 1:\n          message.text = reader.string()\n          break\n        case 2:\n          message.visible = reader.bool()\n          break\n        case 3:\n          message.font = reader.string()\n          break\n        case 4:\n          message.opacity = reader.float()\n          break\n        case 5:\n          message.fontSize = reader.float()\n          break\n        case 6:\n          message.fontAutoSize = reader.bool()\n          break\n        case 7:\n          message.hTextAlign = reader.string()\n          break\n        case 8:\n          message.vTextAlign = reader.string()\n          break\n        case 9:\n          message.width = reader.float()\n          break\n        case 10:\n          message.height = reader.float()\n          break\n        case 11:\n          message.paddingTop = reader.float()\n          break\n        case 12:\n          message.paddingRight = reader.float()\n          break\n        case 13:\n          message.paddingBottom = reader.float()\n          break\n        case 14:\n          message.paddingLeft = reader.float()\n          break\n        case 15:\n          message.lineSpacing = reader.float()\n          break\n        case 16:\n          message.lineCount = reader.int32()\n          break\n        case 17:\n          message.textWrapping = reader.bool()\n          break\n        case 18:\n          message.shadowBlur = reader.float()\n          break\n        case 19:\n          message.shadowOffsetX = reader.float()\n          break\n        case 20:\n          message.shadowOffsetY = reader.float()\n          break\n        case 21:\n          message.outlineWidth = reader.float()\n          break\n        case 22:\n          message.shadowColor = Color3.decode(reader, reader.uint32())\n          break\n        case 23:\n          message.outlineColor = Color3.decode(reader, reader.uint32())\n          break\n        case 24:\n          message.textColor = Color3.decode(reader, reader.uint32())\n          break\n        default:\n          reader.skipType(tag & 7)\n          break\n      }\n    }\n    return message\n  }\n}\n","import { ISchema } from '../../schemas/ISchema'\nimport { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { PBTextShape } from './pb/TextShape.gen'\n\n/**\n * @internal\n */\nexport const COMPONENT_ID = 1030\n\n/**\n * @internal\n */\nexport const TextShapeSchema: ISchema<PBTextShape> = {\n  serialize(value: PBTextShape, builder: ByteBuffer): void {\n    const writer = PBTextShape.encode(value)\n    const buffer = new Uint8Array(writer.finish(), 0, writer.len)\n    builder.writeBuffer(buffer, false)\n  },\n  deserialize(reader: ByteBuffer): PBTextShape {\n    return PBTextShape.decode(reader.buffer(), reader.remainingBytes())\n  },\n  create(): PBTextShape {\n    // TODO: this is a hack.\n    return PBTextShape.decode(new Uint8Array())\n  }\n}\n","import type { IEngine } from '../../engine/types'\nimport * as TransformSchema from './../legacy/Transform'\nimport * as AnimatorSchema from './Animator.gen'\nimport * as AudioSourceSchema from './AudioSource.gen'\nimport * as AvatarAttachSchema from './AvatarAttach.gen'\nimport * as AvatarShapeSchema from './AvatarShape.gen'\nimport * as BillboardSchema from './Billboard.gen'\nimport * as BoxShapeSchema from './BoxShape.gen'\nimport * as CameraModeSchema from './CameraMode.gen'\nimport * as CameraModeAreaSchema from './CameraModeArea.gen'\nimport * as CylinderShapeSchema from './CylinderShape.gen'\nimport * as GLTFShapeSchema from './GLTFShape.gen'\nimport * as NFTShapeSchema from './NFTShape.gen'\nimport * as OnPointerDownSchema from './OnPointerDown.gen'\nimport * as OnPointerDownResultSchema from './OnPointerDownResult.gen'\nimport * as OnPointerUpSchema from './OnPointerUp.gen'\nimport * as OnPointerUpResultSchema from './OnPointerUpResult.gen'\nimport * as PlaneShapeSchema from './PlaneShape.gen'\nimport * as PointerLockSchema from './PointerLock.gen'\nimport * as SphereShapeSchema from './SphereShape.gen'\nimport * as TextShapeSchema from './TextShape.gen'\n\ndeclare const engine: IEngine\n\nexport function defineLibraryComponents({\n  defineComponentFromSchema\n}: Pick<IEngine, 'defineComponentFromSchema'>) {\n  return {\n\t\tTransform: defineComponentFromSchema(TransformSchema.TransformSchema, TransformSchema.COMPONENT_ID),\n\t\tAnimator: defineComponentFromSchema(AnimatorSchema.AnimatorSchema, AnimatorSchema.COMPONENT_ID),\n\t\tAudioSource: defineComponentFromSchema(AudioSourceSchema.AudioSourceSchema, AudioSourceSchema.COMPONENT_ID),\n\t\tAvatarAttach: defineComponentFromSchema(AvatarAttachSchema.AvatarAttachSchema, AvatarAttachSchema.COMPONENT_ID),\n\t\tAvatarShape: defineComponentFromSchema(AvatarShapeSchema.AvatarShapeSchema, AvatarShapeSchema.COMPONENT_ID),\n\t\tBillboard: defineComponentFromSchema(BillboardSchema.BillboardSchema, BillboardSchema.COMPONENT_ID),\n\t\tBoxShape: defineComponentFromSchema(BoxShapeSchema.BoxShapeSchema, BoxShapeSchema.COMPONENT_ID),\n\t\tCameraMode: defineComponentFromSchema(CameraModeSchema.CameraModeSchema, CameraModeSchema.COMPONENT_ID),\n\t\tCameraModeArea: defineComponentFromSchema(CameraModeAreaSchema.CameraModeAreaSchema, CameraModeAreaSchema.COMPONENT_ID),\n\t\tCylinderShape: defineComponentFromSchema(CylinderShapeSchema.CylinderShapeSchema, CylinderShapeSchema.COMPONENT_ID),\n\t\tGLTFShape: defineComponentFromSchema(GLTFShapeSchema.GLTFShapeSchema, GLTFShapeSchema.COMPONENT_ID),\n\t\tNFTShape: defineComponentFromSchema(NFTShapeSchema.NFTShapeSchema, NFTShapeSchema.COMPONENT_ID),\n\t\tOnPointerDown: defineComponentFromSchema(OnPointerDownSchema.OnPointerDownSchema, OnPointerDownSchema.COMPONENT_ID),\n\t\tOnPointerDownResult: defineComponentFromSchema(OnPointerDownResultSchema.OnPointerDownResultSchema, OnPointerDownResultSchema.COMPONENT_ID),\n\t\tOnPointerUp: defineComponentFromSchema(OnPointerUpSchema.OnPointerUpSchema, OnPointerUpSchema.COMPONENT_ID),\n\t\tOnPointerUpResult: defineComponentFromSchema(OnPointerUpResultSchema.OnPointerUpResultSchema, OnPointerUpResultSchema.COMPONENT_ID),\n\t\tPlaneShape: defineComponentFromSchema(PlaneShapeSchema.PlaneShapeSchema, PlaneShapeSchema.COMPONENT_ID),\n\t\tPointerLock: defineComponentFromSchema(PointerLockSchema.PointerLockSchema, PointerLockSchema.COMPONENT_ID),\n\t\tSphereShape: defineComponentFromSchema(SphereShapeSchema.SphereShapeSchema, SphereShapeSchema.COMPONENT_ID),\n\t\tTextShape: defineComponentFromSchema(TextShapeSchema.TextShapeSchema, TextShapeSchema.COMPONENT_ID),\n  }\n}\n","import { ByteBuffer } from '../serialization/ByteBuffer'\nimport { ISchema } from './ISchema'\n\n/**\n * @public\n */\nexport function IArray<T>(type: ISchema<T>): ISchema<Array<T>> {\n  return {\n    serialize(value: Array<T>, builder: ByteBuffer): void {\n      builder.writeUint32(value.length)\n      for (const item of value) {\n        type.serialize(item, builder)\n      }\n    },\n    deserialize(reader: ByteBuffer): Array<T> {\n      const newArray: Array<T> = []\n      const length = reader.readUint32()\n      for (let index = 0; index < length; index++) {\n        newArray.push(type.deserialize(reader))\n      }\n      return newArray\n    },\n    create() {\n      return []\n    }\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const Bool: ISchema<boolean> = {\n  serialize(value: boolean, builder: ByteBuffer): void {\n    builder.writeInt8(value ? 1 : 0)\n  },\n  deserialize(reader: ByteBuffer): boolean {\n    return reader.readInt8() === 1\n  },\n  create() {\n    return false\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport function IEnum<T>(type: ISchema<any>): ISchema<T> {\n  return {\n    serialize(value: T, builder: ByteBuffer): void {\n      type.serialize(value, builder)\n    },\n    deserialize(reader: ByteBuffer): T {\n      return type.deserialize(reader)\n    },\n    create() {\n      return type.create()\n    }\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const Float32: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeFloat32(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readFloat32()\n  },\n  create() {\n    return 0.0\n  }\n}\n\n/**\n * @public\n */\nexport const Float64: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeFloat64(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readFloat64()\n  },\n  create() {\n    return 0.0\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const Int64: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt64(BigInt(value))\n  },\n  deserialize(reader: ByteBuffer): number {\n    return Number(reader.readInt64())\n  },\n  create() {\n    return 0\n  }\n}\n\n/**\n * @public\n */\nexport const Int32: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt32(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readInt32()\n  },\n  create() {\n    return 0\n  }\n}\n\n/**\n * @public\n */\nexport const Int16: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt16(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readInt16()\n  },\n  create() {\n    return 0\n  }\n}\n\n/**\n * @public\n */\nexport const Int8: ISchema<number> = {\n  serialize(value: number, builder: ByteBuffer): void {\n    builder.writeInt8(value)\n  },\n  deserialize(reader: ByteBuffer): number {\n    return reader.readInt8()\n  },\n  create() {\n    return 0\n  }\n}\n","import { ByteBuffer } from '../../serialization/ByteBuffer'\nimport { ISchema } from '../ISchema'\n\n/**\n * @public\n */\nexport const FlatString: ISchema<string> = {\n  serialize(value: string, builder: ByteBuffer): void {\n    builder.writeBuffer(new TextEncoder().encode(value))\n  },\n  deserialize(reader: ByteBuffer): string {\n    return new TextDecoder().decode(reader.readBuffer())\n  },\n  create() {\n    return ''\n  }\n}\n\n/**\n * @public\n */\nexport const EcsString = FlatString\n","import { ByteBuffer } from '../serialization/ByteBuffer'\nimport { ISchema } from './ISchema'\nimport { ToOptional } from './typing'\n\n/**\n * @public\n */\nexport interface Spec {\n  [key: string]: ISchema\n}\n\n/**\n * @public\n */\nexport type Result<T extends Spec> = ToOptional<{\n  [K in keyof T]: T[K] extends ISchema\n    ? ReturnType<T[K]['deserialize']>\n    : T[K] extends Spec\n    ? Result<T[K]>\n    : never\n}>\n\n/**\n * @public\n */\nexport function IMap<T extends Spec>(spec: T): ISchema<Result<T>> {\n  return {\n    serialize(value: Result<T>, builder: ByteBuffer): void {\n      for (const key in spec) {\n        // TODO: as any\n        spec[key].serialize((value as any)[key], builder)\n      }\n    },\n    deserialize(reader: ByteBuffer): Result<T> {\n      const newValue: Result<T> = {} as any\n      for (const key in spec) {\n        // TODO: as any\n        ;(newValue as any)[key] = spec[key].deserialize(reader)\n      }\n      return newValue\n    },\n    create() {\n      const newValue: Result<T> = {} as any\n      for (const key in spec) {\n        // TODO: as any\n        ;(newValue as any)[key] = spec[key].create()\n      }\n      return newValue\n    }\n  }\n}\n","import { ByteBuffer } from '../serialization/ByteBuffer'\nimport { ISchema } from './ISchema'\n\n/**\n * @public\n */\nexport function IOptional<T>(spec: ISchema<T>): ISchema<T | undefined> {\n  return {\n    serialize(value: T | undefined, builder: ByteBuffer): void {\n      if (value) {\n        builder.writeInt8(1)\n        spec.serialize(value, builder)\n      } else {\n        builder.writeInt8(0)\n      }\n    },\n    deserialize(reader: ByteBuffer): T | undefined {\n      const exists = reader.readInt8()\n      if (exists) {\n        return spec.deserialize(reader)\n      }\n    },\n    create() {\n      return undefined\n    }\n  }\n}\n","import { IArray } from './Array'\nimport { Bool } from './basic/Boolean'\nimport { IEnum } from './basic/Enum'\nimport { Float32, Float64 } from './basic/Float'\nimport { Int16, Int32, Int8, Int64 as iInt64 } from './basic/Integer'\nimport { EcsString } from './basic/String'\nimport { ISchema } from './ISchema'\nimport { IMap } from './Map'\nimport { IOptional } from './Optional'\n\n/**\n * @public\n */\nexport namespace Schemas {\n  export type SchemaType = ISchema\n\n  export const Boolean = Bool\n\n  export const String = EcsString\n\n  export const Float = Float32\n  export const Double = Float64\n\n  export const Byte = Int8\n  export const Short = Int16\n  export const Int = Int32\n  export const Int64 = iInt64\n\n  export const Number = Float32\n\n  export const Enum = IEnum\n  export const Array = IArray\n  export const Map = IMap\n  export const Optional = IOptional\n}\n","/** @public */\nexport enum ECSComponentIDs {\n\tTransform = 1,\n\tAnimator = 1042,\n\tAudioSource = 1020,\n\tAvatarAttach = 1073,\n\tAvatarShape = 1080,\n\tBillboard = 1090,\n\tBoxShape = 1013,\n\tCameraMode = 1072,\n\tCameraModeArea = 1071,\n\tCylinderShape = 1016,\n\tGLTFShape = 1041,\n\tNFTShape = 1040,\n\tOnPointerDown = 1060,\n\tOnPointerDownResult = 1066,\n\tOnPointerUp = 1061,\n\tOnPointerUpResult = 1065,\n\tPlaneShape = 1014,\n\tPointerLock = 1074,\n\tSphereShape = 1015,\n\tTextShape = 1030,\n}\n","import { crdtSceneSystem } from '../systems/crdt'\nimport { Entity, EntityContainer } from './entity'\nimport {\n  ComponentType,\n  ComponentDefinition,\n  defineComponent as defComponent\n} from './component'\nimport type { ComponentSchema, IEngineParams } from './types'\nimport type { DeepReadonly } from '../Math'\nimport { IEngine } from './types'\nimport { ByteBuffer } from '../serialization/ByteBuffer'\nimport { SystemContainer, SYSTEMS_REGULAR_PRIORITY, Update } from './systems'\nimport { ISchema } from '../schemas/ISchema'\nimport { defineLibraryComponents } from './../components/generated/index.gen'\nimport { Result, Spec } from '../schemas/Map'\nimport { Schemas } from '../schemas'\n\nexport { ComponentType, Entity, ByteBuffer, ComponentDefinition }\nexport * from './types'\n\nfunction preEngine() {\n  const entityContainer = EntityContainer()\n  const componentsDefinition = new Map<number, ComponentDefinition<any>>()\n  // TODO: find a way to make this work.\n  // Maybe a proxy/callback to be up-to-date\n  const entitiesComponent = new Map<\n    number,\n    Set<ComponentDefinition<any>['_id']>\n  >()\n  const systems = SystemContainer()\n\n  function addSystem(\n    fn: Update,\n    priority: number = SYSTEMS_REGULAR_PRIORITY,\n    name?: string\n  ) {\n    systems.add(fn, priority, name)\n  }\n\n  function removeSystem(selector: string | Update) {\n    return systems.remove(selector)\n  }\n\n  function addEntity(dynamic: boolean = false) {\n    // entitiesCompnonent.set(entity, new Set())\n    const entity = entityContainer.generateEntity(dynamic)\n    return entity\n  }\n\n  function addDynamicEntity() {\n    return addEntity(true)\n  }\n\n  function removeEntity(entity: Entity) {\n    for (const [, component] of componentsDefinition) {\n      if (component.has(entity)) {\n        component.deleteFrom(entity)\n      }\n    }\n\n    return entityContainer.removeEntity(entity)\n  }\n\n  function defineComponentFromSchema<T extends ISchema>(\n    spec: T,\n    componentId: number\n  ): ComponentDefinition<T> {\n    if (componentsDefinition.get(componentId)) {\n      throw new Error(`Component ${componentId} already declared`)\n    }\n    const newComponent = defComponent<T>(componentId, spec)\n    componentsDefinition.set(componentId, newComponent)\n    return newComponent\n  }\n\n  function defineComponent<T extends Spec>(\n    spec: Spec,\n    componentId: number\n  ): ComponentDefinition<ISchema<Result<T>>> {\n    return defineComponentFromSchema(Schemas.Map(spec), componentId)\n  }\n\n  function getComponent<T extends ISchema>(\n    componentId: number\n  ): ComponentDefinition<T> {\n    const component = componentsDefinition.get(componentId)\n    if (!component) {\n      throw new Error(\n        'Component not found. You need to declare the components at the beginnig of the engine declaration'\n      )\n    }\n    return component\n  }\n\n  function* getEntitiesWith<\n    T extends [ComponentDefinition, ...ComponentDefinition[]]\n  >(...components: T): Iterable<[Entity, ...DeepReadonly<ComponentSchema<T>>]> {\n    for (const [entity, ...groupComp] of getComponentDefGroup(...components)) {\n      yield [entity, ...groupComp.map((c) => c.get(entity))] as [\n        Entity,\n        ...DeepReadonly<ComponentSchema<T>>\n      ]\n    }\n  }\n\n  function* getComponentDefGroup<T extends ComponentDefinition[]>(\n    ...args: T\n  ): Iterable<[Entity, ...T]> {\n    const [firstComponentDef, ...componentDefinitions] = args\n    for (const [entity] of firstComponentDef.iterator()) {\n      let matches = true\n      for (const componentDef of componentDefinitions) {\n        if (!componentDef.has(entity)) {\n          matches = false\n          break\n        }\n      }\n\n      if (matches) {\n        yield [entity, ...args]\n      }\n    }\n  }\n\n  function getSystems() {\n    return systems.getSystems()\n  }\n\n  return {\n    entitiesComponent,\n    componentsDefinition,\n    addEntity,\n    addDynamicEntity,\n    removeEntity,\n    addSystem,\n    getSystems,\n    removeSystem,\n    defineComponent,\n    defineComponentFromSchema,\n    getEntitiesWith,\n    getComponent\n  }\n}\n\n/**\n * @internal\n */\nexport type PreEngine = ReturnType<typeof preEngine>\n\n/**\n * @public\n */\nexport function Engine({ transports }: IEngineParams = {}): IEngine {\n  const engine = preEngine()\n  const crdtSystem = crdtSceneSystem({ engine, transports: transports || [] })\n  const baseComponents = defineLibraryComponents(engine)\n\n  function update(dt: number) {\n    crdtSystem.receiveMessages()\n\n    for (const system of engine.getSystems()) {\n      system.fn(dt)\n    }\n\n    // Selected components that only exist one frame\n    //  then, they are deleted but their crdt state keeps\n    const removeSelectedComponents = [\n      baseComponents.OnPointerDownResult,\n      baseComponents.OnPointerUpResult\n    ]\n    const excludeComponentIds = removeSelectedComponents.map((item) => item._id)\n    for (const componentDef of removeSelectedComponents) {\n      for (const [entity] of engine.getEntitiesWith(componentDef)) {\n        componentDef.deleteFrom(entity)\n      }\n    }\n\n    // TODO: Perf tip\n    // Should we add some dirtyIteratorSet at engine level so we dont have\n    // to iterate all the component definitions to get the dirty ones ?\n    const dirtySet = new Map<Entity, Set<number>>()\n    for (const [componentId, definition] of engine.componentsDefinition) {\n      if (excludeComponentIds.includes(componentId)) continue\n\n      for (const entity of definition.dirtyIterator()) {\n        if (!dirtySet.has(entity)) {\n          dirtySet.set(entity, new Set())\n        }\n        dirtySet.get(entity)!.add(componentId)\n      }\n    }\n    crdtSystem.createMessages(dirtySet)\n\n    for (const [_componentId, definition] of engine.componentsDefinition) {\n      definition.clearDirty()\n    }\n  }\n\n  return {\n    addEntity: engine.addEntity,\n    addDynamicEntity: engine.addDynamicEntity,\n    removeEntity: engine.removeEntity,\n    addSystem: engine.addSystem,\n    removeSystem: engine.removeSystem,\n    defineComponent: engine.defineComponent,\n    defineComponentFromSchema: engine.defineComponentFromSchema,\n    getEntitiesWith: engine.getEntitiesWith,\n    getComponent: engine.getComponent,\n    update,\n    baseComponents\n  }\n}\n","import { TransportMessage } from '../types'\nimport { Transport } from './types'\nimport { ECSComponentIDs } from '../../../components/generated/ids.gen'\n\nconst componentIds = Object.values(ECSComponentIDs)\n  .filter((a) => typeof a === 'number')\n  .map(Number)\n\nexport function createRendererTransport(): Transport {\n  const type = 'renderer'\n  return {\n    type,\n    send(message: Uint8Array): void {\n      // TODO: replace with new rpc\n      dcl\n        .callRpc('@decentraland/ExperimentalAPI', 'sendToRenderer', [\n          { data: new Uint8Array(message) }\n        ])\n        .catch(dcl.error)\n    },\n    filter(message: TransportMessage): boolean {\n      // Echo message, ignore them\n      if (message.transportType === type) {\n        return false\n      }\n\n      // Only send renderer components (Proto Generated)\n      if (!componentIds.includes(message.componentId)) {\n        return false\n      }\n\n      return !!message\n    }\n  }\n}\n","import { TransportMessage } from '../types'\nimport { Transport } from './types'\n\nexport function createNetworkTransport(): Transport {\n  // const rpc = new RpcTransport()\n  function send(..._args: any[]) {\n    // console.log('NetworkMessage Sent: ', ...args)\n  }\n\n  const type = 'network-transport'\n  return {\n    send,\n    type,\n    filter(message: TransportMessage): boolean {\n      // Echo message, ignore them\n      if (message.transportType === type) {\n        return false\n      }\n\n      // TODO: Static entities & Network components\n\n      return !!message // validComponents.includes(componentId)\n    }\n  }\n}\n","/**\n * @alpha * This file initialization is an alpha one. This is based on the old-ecs\n * init and it'll be changing.\n */\n\nimport { Engine } from './engine'\nimport { createRendererTransport } from './systems/crdt/transports/rendererTransport'\nimport { createNetworkTransport } from './systems/crdt/transports/networkTransport'\n\nconst rendererTransport = createRendererTransport()\nexport const engine = Engine({\n  transports: [rendererTransport, createNetworkTransport()]\n})\n\nif (dcl) {\n  dcl.loadModule('@decentraland/ExperimentalAPI', {}).catch(dcl.error)\n\n  async function pullRendererMessages() {\n    const response = await dcl.callRpc(\n      '@decentraland/ExperimentalAPI',\n      'messageFromRenderer',\n      []\n    )\n\n    if (response.data?.length) {\n      if (rendererTransport.onmessage) {\n        for (const byteArray of response.data) {\n          rendererTransport.onmessage(byteArray)\n        }\n      }\n    }\n  }\n\n  dcl.onUpdate((dt: number) => {\n    pullRendererMessages()\n      .catch(dcl.error)\n      .finally(() => engine.update(dt))\n  })\n}\n\nexport const log = dcl.log\nexport const error = dcl.error\n","import { engine } from '../../initialization'\n\n/** @public */\nexport const Transform = engine.baseComponents.Transform\n/** @public */\nexport const Animator = engine.baseComponents.Animator\n/** @public */\nexport const AudioSource = engine.baseComponents.AudioSource\n/** @public */\nexport const AvatarAttach = engine.baseComponents.AvatarAttach\n/** @public */\nexport const AvatarShape = engine.baseComponents.AvatarShape\n/** @public */\nexport const Billboard = engine.baseComponents.Billboard\n/** @public */\nexport const BoxShape = engine.baseComponents.BoxShape\n/** @public */\nexport const CameraMode = engine.baseComponents.CameraMode\n/** @public */\nexport const CameraModeArea = engine.baseComponents.CameraModeArea\n/** @public */\nexport const CylinderShape = engine.baseComponents.CylinderShape\n/** @public */\nexport const GLTFShape = engine.baseComponents.GLTFShape\n/** @public */\nexport const NFTShape = engine.baseComponents.NFTShape\n/** @public */\nexport const OnPointerDown = engine.baseComponents.OnPointerDown\n/** @public */\nexport const OnPointerDownResult = engine.baseComponents.OnPointerDownResult\n/** @public */\nexport const OnPointerUp = engine.baseComponents.OnPointerUp\n/** @public */\nexport const OnPointerUpResult = engine.baseComponents.OnPointerUpResult\n/** @public */\nexport const PlaneShape = engine.baseComponents.PlaneShape\n/** @public */\nexport const PointerLock = engine.baseComponents.PointerLock\n/** @public */\nexport const SphereShape = engine.baseComponents.SphereShape\n/** @public */\nexport const TextShape = engine.baseComponents.TextShape\n","import { engine } from '../../initialization'\n/** @public */\nexport namespace Components {\n\t/** @public */\n\texport const Transform = engine.baseComponents.Transform\n\t/** @public */\n\texport const Animator = engine.baseComponents.Animator\n\t/** @public */\n\texport const AudioSource = engine.baseComponents.AudioSource\n\t/** @public */\n\texport const AvatarAttach = engine.baseComponents.AvatarAttach\n\t/** @public */\n\texport const AvatarShape = engine.baseComponents.AvatarShape\n\t/** @public */\n\texport const Billboard = engine.baseComponents.Billboard\n\t/** @public */\n\texport const BoxShape = engine.baseComponents.BoxShape\n\t/** @public */\n\texport const CameraMode = engine.baseComponents.CameraMode\n\t/** @public */\n\texport const CameraModeArea = engine.baseComponents.CameraModeArea\n\t/** @public */\n\texport const CylinderShape = engine.baseComponents.CylinderShape\n\t/** @public */\n\texport const GLTFShape = engine.baseComponents.GLTFShape\n\t/** @public */\n\texport const NFTShape = engine.baseComponents.NFTShape\n\t/** @public */\n\texport const OnPointerDown = engine.baseComponents.OnPointerDown\n\t/** @public */\n\texport const OnPointerDownResult = engine.baseComponents.OnPointerDownResult\n\t/** @public */\n\texport const OnPointerUp = engine.baseComponents.OnPointerUp\n\t/** @public */\n\texport const OnPointerUpResult = engine.baseComponents.OnPointerUpResult\n\t/** @public */\n\texport const PlaneShape = engine.baseComponents.PlaneShape\n\t/** @public */\n\texport const PointerLock = engine.baseComponents.PointerLock\n\t/** @public */\n\texport const SphereShape = engine.baseComponents.SphereShape\n\t/** @public */\n\texport const TextShape = engine.baseComponents.TextShape\n}\n"],"names":["Object","defineProperty","exports","value","Vector3","create","x","y","z","copy","source","dest","length","vector","Math","sqrt","scaleToRef","scale","result","normalizeFromLength","len","normalizeFromLengthToRef","lerpToRef","start","end","amount","add","vector1","vector2","subtract","minuend","subtrahend","subtractToRef","opposite","clone","assign","lengthSquared","normalize","normalizeToRef","dot","left","right","rotate","q","qx","qy","qz","w","qw","ix","iy","iz","iw","lerp","cross","Zero","crossToRef","One","Up","Down","Forward","Backward","Right","Left","Scalar","TwoPi","PI","sign","_value","isNaN","clamp","min","max","repeat","floor","deltaAngle","current","target","num","moveTowards","maxDelta","abs","withinEpsilon","a","b","epsilon","toHex","i","str","toString","toUpperCase","log2","log","LOG2E","denormalize","normalized","pingPong","tx","t","smoothStep","from","to","moveTowardsAngle","lerpAngle","inverseLerp","hermite","value1","tangent1","value2","tangent2","squared","cubed","randomRange","random","rangeToPercent","percentToRange","percent","normalizeRadians","angle","Orientation","Space","RAD2DEG","DEG2RAD","ToLinearSpace","ToGammaSpace","Epsilon","Quaternion","Vector3_1","require$$0","Scalar_1","require$$1","types_1","require$$2","rotationYawPitchRoll","yaw","pitch","roll","halfPitch","halfYaw","halfRoll","c1","cos","c2","c3","s1","sin","s2","s3","quat1","quat2","dotVal","acos","qLength","Identity","slerp","slerpToRef","multiplyToRef","self","q1","q2","euler","rotateTowards","maxDegreesDelta","lookRotation","forward","up","forwardNew","upNew","m00","m01","m02","m10","m11","m12","m20","m21","m22","num8","quaternion","num7","num4","num6","num3","num5","num2","fromToRotation","v0","v1","eulerAngles","out","unit","test","atan2","asin","rotationYawPitchRollToRef","fromRotationMatrixToRef","matrix","data","_m","m13","m23","m31","m32","m33","trace","s","flag","multiply","angleAxis","degress","axis","radians","a2","__createBinding","this","o","m","k","k2","undefined","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","require$$3","types","sameData","Uint8Array","byteLength","globalThis","Buffer","equals","crdtProtocol","state","updateState","key","remoteTimestamp","timestamp","createEvent","processMessage","message","compareData","getState","distExports","requireDist","getNextSize","currentSize","intendedSize","minNewSize","ceil","defaultInitialCapacity","createByteBuffer","options","initialROffset","_a","reading","currentOffset","initialBuffer","initialWOffset","writing","buffer","initialCapacity","view","DataView","byteOffset","woffset","roffset","woAdd","newsize","newBuffer","set","roAdd","Error","bufferLength","[object Object]","currentReadOffset","currentWriteOffset","incrementReadOffset","remainingBytes","readFloat32","getFloat32","readFloat64","getFloat64","readInt8","getInt8","readInt16","getInt16","readInt32","getInt32","readInt64","getBigInt64","readUint8","getUint8","readUint16","getUint16","readUint32","getUint32","readUint64","getBigUint64","subarray","incrementWriteOffset","size","toBinary","writeLength","writeUint32","setFloat32","setFloat64","setInt8","setInt16","setInt32","setBigInt64","setUint8","setUint16","setUint32","setBigUint64","offset","getInt64","getUint64","WireMessage","Enum","validate","buf","rem","HEADER_LENGTH","readHeader","type","WireMessage$1","ComponentOperation","CrdtUtils","MESSAGE_HEADER_LENGTH","write","entity","componentDefinition","startMessageOffset","PUT_COMPONENT","writeToByteBuffer","messageLength","_id","setUint64","BigInt","read","header","common","componentId","Number","DELETE_COMPONENT","readBuffer","SynchronizedEntityType","getKey","CrdtUtils$1","EntityUtils","crdtSceneSystem","engine","transports","crdtClient","receivedMessages","transportMessages","getMessages","messagesToProcess","Array","forEach","transport","onmessage","transportType","chunkMessage","Message","push","messageBuffer","createMessages","dirtyMap","crdtMessages","componentsId","component","getComponent","entityComponent","has","event","transportMessage","some","filter","transportBuffer","resetBuffer","writeBuffer","send","receiveMessages","crdtMessage","deleteFrom","bb","upsertFromBinary","clearDirty","EntityContainer","staticEntity","Entity","STATIC_ENTITIES_RANGE","dynamicEntity","DYNAMIC_ENTITIES_RANGE","generateEntity","dynamic","removeEntity","isEntityExists","isReservedEntity","getExistingEntities","Set","range","entityCounter","usedEntities","delete","deepReadonly","val","freeze","defineComponent","spec","Map","dirtyIterator","default","isDirty","getOrNull","usedValue","createOrReplace","getMutableOrNull","getMutable","iterator","serialize","newValue","deserialize","clear","isInRange","MAX_ENTITIES","DYNAMIC_ENTITIES_START_AT","RESERVED_STATIC_ENTITIES","RESERVED_ENTITIES_RANGE","isDynamicEntity","isStaticEntity","SYSTEMS_REGULAR_PRIORITY","SystemContainer","systems","sort","priority","fn","name","find","item","remove","selector","index","findIndex","splice","getSystems","COMPONENT_ID","TRANSFORM_LENGTH","TransformSchema","builder","ptr","position","rotation","parent","reader","minimal$1","indexMinimal","minimal","aspromise","ctx","params","arguments","pending","Promise","resolve","reject","err","apply","base64","string","n","charAt","b64","s64","encode","parts","chunk","j","String","fromCharCode","slice","join","invalidEncoding","decode","c","charCodeAt","EventEmitter","_listeners","eventemitter","on","evt","off","listeners","emit","args","factory","Float32Array","f32","f8b","le","writeFloat_f32_cpy","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","round","exponent","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","bind","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","float","inquire","moduleName","mod","eval","replace","keys","e","inquire_1","utf8","pool_1","alloc","SIZE","MAX","slab","longbits","LongBits","util","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","parseInt","fromString","low","high","unsigned","toLong","Boolean","fromHash","hash","toHash","mask","part0","part1","part2","merge","dst","src","ifNotSet","newError","CustomError","properties","captureStackTrace","stack","constructor","asPromise","require$$4","require$$5","pool","require$$6","require$$7","isNode","global","process","versions","node","window","emptyArray","emptyObject","isInteger","isFinite","isObject","isset","isSet","obj","prop","isArray","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","bits","fromBits","lcFirst","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","writer","Writer","BufferWriter","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","fork","reset","ldelim","finish","BufferWriter_","writer_buffer","writeStringBuffer","writeBytesBuffer","Reader","BufferReader","indexOutOfRange","RangeError","create_array","isBuffer","readLongVarint","readFixed32_end","readFixed64","_slice","skip","skipType","wireType","BufferReader_","reader_buffer","utf8Slice","service","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","rpcCall","method","requestCtor","responseCtor","request","callback","response","setTimeout","endedByRPC","roots","protobuf","configure","build","rpc","minimalExports","requireMinimal","createBasePBAnimator","PBAnimator","_m0.Writer","v","PBAnimationState","input","_m0.Reader","tag","createBasePBAnimationState","clip","playing","weight","speed","loop","shouldReset","AnimatorSchema","createBasePBAudioSource","volume","audioClipUrl","PBAudioSource","AudioSourceSchema","AvatarAnchorPoint","createBasePBAvatarAttach","avatarId","anchorPointId","PBAvatarAttach","AvatarAttachSchema","createBaseColor3","r","g","Color3","createBasePBAvatarShape","id","bodyShape","skinColor","hairColor","eyeColor","wearables","expressionTriggerId","expressionTriggerTimestamp","stickerTriggerId","stickerTriggerTimestamp","talking","PBAvatarShape","longToNumber","long","gt","MAX_SAFE_INTEGER","AvatarShapeSchema","createBasePBBillboard","PBBillboard","BillboardSchema","createBasePBBoxShape","withCollisions","isPointerBlocker","visible","uvs","PBBoxShape","end2","BoxShapeSchema","createBasePBCameraMode","mode","PBCameraMode","CameraModeSchema","createBaseVector3","createBasePBCameraModeArea","area","PBCameraModeArea","CameraModeAreaSchema","createBasePBCylinderShape","radiusTop","radiusBottom","PBCylinderShape","CylinderShapeSchema","createBasePBGLTFShape","PBGLTFShape","GLTFShapeSchema","createBasePBNFTShape","assetId","style","color","PBNFTShape","NFTShapeSchema","createBasePBOnPointerDown","button","hoverText","maxDistance","showFeedback","PBOnPointerDown","OnPointerDownSchema","createBasePBOnPointerDownResult","meshName","origin","direction","point","normal","distance","PBOnPointerDownResult","OnPointerDownResultSchema","createBasePBOnPointerUp","PBOnPointerUp","OnPointerUpSchema","createBasePBOnPointerUpResult","PBOnPointerUpResult","OnPointerUpResultSchema","createBasePBPlaneShape","PBPlaneShape","PlaneShapeSchema","createBasePBPointerLock","isPointerLocked","PBPointerLock","PointerLockSchema","createBasePBSphereShape","PBSphereShape","SphereShapeSchema","createBasePBTextShape","text","font","opacity","fontSize","fontAutoSize","hTextAlign","vTextAlign","width","height","paddingTop","paddingRight","paddingBottom","paddingLeft","lineSpacing","lineCount","textWrapping","shadowBlur","shadowOffsetX","shadowOffsetY","outlineWidth","shadowColor","outlineColor","textColor","PBTextShape","TextShapeSchema","defineLibraryComponents","defineComponentFromSchema","Transform","TransformSchema.TransformSchema","TransformSchema.COMPONENT_ID","Animator","AnimatorSchema.AnimatorSchema","AnimatorSchema.COMPONENT_ID","AudioSource","AudioSourceSchema.AudioSourceSchema","AudioSourceSchema.COMPONENT_ID","AvatarAttach","AvatarAttachSchema.AvatarAttachSchema","AvatarAttachSchema.COMPONENT_ID","AvatarShape","AvatarShapeSchema.AvatarShapeSchema","AvatarShapeSchema.COMPONENT_ID","Billboard","BillboardSchema.BillboardSchema","BillboardSchema.COMPONENT_ID","BoxShape","BoxShapeSchema.BoxShapeSchema","BoxShapeSchema.COMPONENT_ID","CameraMode","CameraModeSchema.CameraModeSchema","CameraModeSchema.COMPONENT_ID","CameraModeArea","CameraModeAreaSchema.CameraModeAreaSchema","CameraModeAreaSchema.COMPONENT_ID","CylinderShape","CylinderShapeSchema.CylinderShapeSchema","CylinderShapeSchema.COMPONENT_ID","GLTFShape","GLTFShapeSchema.GLTFShapeSchema","GLTFShapeSchema.COMPONENT_ID","NFTShape","NFTShapeSchema.NFTShapeSchema","NFTShapeSchema.COMPONENT_ID","OnPointerDown","OnPointerDownSchema.OnPointerDownSchema","OnPointerDownSchema.COMPONENT_ID","OnPointerDownResult","OnPointerDownResultSchema.OnPointerDownResultSchema","OnPointerDownResultSchema.COMPONENT_ID","OnPointerUp","OnPointerUpSchema.OnPointerUpSchema","OnPointerUpSchema.COMPONENT_ID","OnPointerUpResult","OnPointerUpResultSchema.OnPointerUpResultSchema","OnPointerUpResultSchema.COMPONENT_ID","PlaneShape","PlaneShapeSchema.PlaneShapeSchema","PlaneShapeSchema.COMPONENT_ID","PointerLock","PointerLockSchema.PointerLockSchema","PointerLockSchema.COMPONENT_ID","SphereShape","SphereShapeSchema.SphereShapeSchema","SphereShapeSchema.COMPONENT_ID","TextShape","TextShapeSchema.TextShapeSchema","TextShapeSchema.COMPONENT_ID","IArray","newArray","Bool","writeInt8","IEnum","Float32","writeFloat32","Float64","writeFloat64","Int64","writeInt64","Int32","writeInt32","Int16","writeInt16","Int8","FlatString","TextEncoder","TextDecoder","EcsString","IMap","IOptional","Schemas","ECSComponentIDs","preEngine","entityContainer","componentsDefinition","entitiesComponent","addEntity","newComponent","defComponent","addDynamicEntity","addSystem","removeSystem","getEntitiesWith","components","groupComp","firstComponentDef","componentDefinitions","matches","componentDef","getComponentDefGroup","map","Engine","crdtSystem","baseComponents","update","dt","system","removeSelectedComponents","excludeComponentIds","dirtySet","definition","includes","_componentId","Float","Double","Byte","Short","Int","iInt64","Optional","componentIds","values","createRendererTransport","dcl","callRpc","catch","error","createNetworkTransport","_args","rendererTransport","async","pullRendererMessages","byteArray","loadModule","onUpdate","finally","Components","distExports$1"],"mappings":"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"}